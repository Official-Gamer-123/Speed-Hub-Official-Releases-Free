--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 79) then
			local v81 = 0;
			while true do
				if (v81 == 0) then
					v19 = v0(v3(v30, 1, 1));
					return "";
				end
			end
		else
			local v82 = 0;
			local v83;
			while true do
				if (v82 == 0) then
					v83 = v2(v0(v30, 16));
					if v19 then
						local v99 = v5(v83, v19);
						v19 = nil;
						return v99;
					else
						return v83;
					end
					break;
				end
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v84 = (v31 / ((5 - 3) ^ (v32 - 1))) % ((5 - 3) ^ (((v33 - (1 - 0)) - (v32 - 1)) + (2 - 1)));
			return v84 - (v84 % (620 - (555 + 64)));
		else
			local v85 = (1808 - (282 + 595)) - (857 + (1711 - (1523 + 114)));
			local v86;
			while true do
				if (v85 == ((511 + 57) - ((523 - 156) + 201))) then
					v86 = 2 ^ (v32 - (928 - (214 + 713)));
					return (((v31 % (v86 + v86)) >= v86) and (1 + 0)) or (0 + 0);
				end
			end
		end
	end
	local function v21()
		local v34 = 1065 - ((185 - (32 + 85)) + 978 + 19);
		local v35;
		while true do
			if (v34 == 1) then
				return v35;
			end
			if (v34 == 0) then
				v35 = v1(v16, v18, v18);
				v18 = v18 + (1271 - (226 + 1044));
				v34 = 4 - 3;
			end
		end
	end
	local function v22()
		local v36, v37 = v1(v16, v18, v18 + 1 + 1);
		v18 = v18 + (959 - (892 + 65));
		return (v37 * 256) + v36;
	end
	local function v23()
		local v38, v39, v40, v41 = v1(v16, v18, v18 + (5 - (2 + 0)));
		v18 = v18 + (7 - 3);
		return (v41 * 16777216) + (v40 * (65886 - (87 + 263))) + (v39 * ((1497 - 887) - 354)) + v38;
	end
	local function v24()
		local v42 = v23();
		local v43 = v23();
		local v44 = 1 + 0;
		local v45 = (v20(v43, 1, 79 - (77 - (10 + 8))) * ((954 - (802 + 150)) ^ 32)) + v42;
		local v46 = v20(v43, 56 - 35, 31);
		local v47 = ((v20(v43, 57 - 25) == (1 + 0)) and -1) or (998 - (915 + 82));
		if (v46 == (0 - 0)) then
			if (v45 == (0 - 0)) then
				return v47 * (0 + 0);
			else
				local v90 = 0 - 0;
				while true do
					if (v90 == (1187 - (1069 + 118))) then
						v46 = 2 - 1;
						v44 = 0 - 0;
						break;
					end
				end
			end
		elseif (v46 == (2489 - (416 + 26))) then
			return ((v45 == (0 + 0)) and (v47 * ((1 - 0) / (0 + (0 - 0))))) or (v47 * NaN);
		end
		return v8(v47, v46 - 1023) * (v44 + (v45 / (((341 + 452) - (368 + 423)) ^ (163 - 111))));
	end
	local function v25(v48)
		local v49 = 0 - 0;
		local v50;
		local v51;
		while true do
			if (v49 == (2 + 1)) then
				return v6(v51);
			end
			if (v49 == (0 - (1423 - (630 + 793)))) then
				v50 = nil;
				if not v48 then
					local v97 = 0 - (0 - 0);
					while true do
						if (v97 == (859 - (814 + (213 - 168)))) then
							v48 = v23();
							if (v48 == ((173 + 265) - (145 + 293))) then
								return "";
							end
							break;
						end
					end
				end
				v49 = 3 - 2;
			end
			if (v49 == (432 - (44 + 386))) then
				v51 = {};
				for v91 = 1487 - (998 + (2235 - (760 + 987))), #v50 do
					v51[v91] = v2(v1(v3(v50, v91, v91)));
				end
				v49 = 1 + 2;
			end
			if (v49 == (1 + 0)) then
				v50 = v3(v16, v18, (v18 + v48) - (773 - (201 + 571)));
				v18 = v18 + v48;
				v49 = 1140 - (116 + 1022);
			end
		end
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v52 = (function()
			return 0 + 0;
		end)();
		local v53 = (function()
			return;
		end)();
		local v54 = (function()
			return;
		end)();
		local v55 = (function()
			return;
		end)();
		local v56 = (function()
			return;
		end)();
		local v57 = (function()
			return;
		end)();
		local v58 = (function()
			return;
		end)();
		local v59 = (function()
			return;
		end)();
		while true do
			local v66 = (function()
				return 0;
			end)();
			while true do
				if (0 == v66) then
					if ((0 + 0) == v52) then
						v53 = (function()
							return function(v108, v109, v110)
								local v111 = (function()
									return 0 + 0;
								end)();
								while true do
									if (v111 ~= 0) then
									else
										v108[v109 - #"!"] = (function()
											return v110();
										end)();
										return v108, v109, v110;
									end
								end
							end;
						end)();
						v54 = (function()
							return {};
						end)();
						v55 = (function()
							return {};
						end)();
						v52 = (function()
							return 837 - (660 + 176);
						end)();
					end
					if ((1 + 0) ~= v52) then
					else
						v56 = (function()
							return {};
						end)();
						v57 = (function()
							return {v54,v55,nil,v56};
						end)();
						v58 = (function()
							return v23();
						end)();
						v52 = (function()
							return 2;
						end)();
					end
					v66 = (function()
						return 1;
					end)();
				end
				if (v66 ~= (676 - (534 + 141))) then
				else
					if (v52 == (2 + 1)) then
						for v100 = #"|", v23() do
							local v101 = (function()
								return v21();
							end)();
							if (v20(v101, #"]", #"<") == 0) then
								local v112 = (function()
									return 0;
								end)();
								local v113 = (function()
									return;
								end)();
								local v114 = (function()
									return;
								end)();
								local v115 = (function()
									return;
								end)();
								while true do
									if (v112 ~= 3) then
									else
										if (v20(v114, #"xnx", #"asd") == #" ") then
											v115[#"http"] = (function()
												return v59[v115[#"asd1"]];
											end)();
										end
										v54[v100] = (function()
											return v115;
										end)();
										break;
									end
									if (v112 == (0 + 0)) then
										local v118 = (function()
											return 0;
										end)();
										local v119 = (function()
											return;
										end)();
										while true do
											if (v118 ~= (0 + 0)) then
											else
												v119 = (function()
													return 0 - 0;
												end)();
												while true do
													if (v119 ~= (1 - 0)) then
													else
														v112 = (function()
															return 1;
														end)();
														break;
													end
													if (v119 == 0) then
														local v761 = (function()
															return 0 - 0;
														end)();
														while true do
															if (v761 == 0) then
																v113 = (function()
																	return v20(v101, 2, #"xxx");
																end)();
																v114 = (function()
																	return v20(v101, #"asd1", 6);
																end)();
																v761 = (function()
																	return 1;
																end)();
															end
															if (1 == v761) then
																v119 = (function()
																	return 1 + 0;
																end)();
																break;
															end
														end
													end
												end
												break;
											end
										end
									end
									if (v112 == (1 + 0)) then
										local v120 = (function()
											return 396 - (115 + 281);
										end)();
										while true do
											if (v120 == (0 - 0)) then
												v115 = (function()
													return {v22(),v22(),nil,nil};
												end)();
												if (v113 == (0 - 0)) then
													local v739 = (function()
														return 0 - 0;
													end)();
													local v740 = (function()
														return;
													end)();
													while true do
														if (v739 ~= 0) then
														else
															v740 = (function()
																return 867 - (550 + 317);
															end)();
															while true do
																if (v740 ~= 0) then
																else
																	v115[#"xnx"] = (function()
																		return v22();
																	end)();
																	v115[#"0313"] = (function()
																		return v22();
																	end)();
																	break;
																end
															end
															break;
														end
													end
												elseif (v113 == #" ") then
													v115[#"gha"] = (function()
														return v23();
													end)();
												elseif (v113 == (2 - 0)) then
													v115[#"nil"] = (function()
														return v23() - (2 ^ 16);
													end)();
												elseif (v113 == #"xnx") then
													local v2837 = (function()
														return 0 - 0;
													end)();
													local v2838 = (function()
														return;
													end)();
													while true do
														if (v2837 == 0) then
															v2838 = (function()
																return 0;
															end)();
															while true do
																if ((0 - 0) ~= v2838) then
																else
																	v115[#"nil"] = (function()
																		return v23() - ((287 - (134 + 151)) ^ (1681 - (970 + 695)));
																	end)();
																	v115[#"0836"] = (function()
																		return v22();
																	end)();
																	break;
																end
															end
															break;
														end
													end
												end
												v120 = (function()
													return 1 - 0;
												end)();
											end
											if (v120 == 1) then
												v112 = (function()
													return 1992 - (582 + 1408);
												end)();
												break;
											end
										end
									end
									if (v112 == (6 - 4)) then
										if (v20(v114, #"[", #"{") ~= #"{") then
										else
											v115[2] = (function()
												return v59[v115[2 - 0]];
											end)();
										end
										if (v20(v114, 7 - 5, 1826 - (1195 + 629)) == #",") then
											v115[#"nil"] = (function()
												return v59[v115[#"-19"]];
											end)();
										end
										v112 = (function()
											return 3;
										end)();
									end
								end
							end
						end
						for v102 = #"~", v23() do
							v55, v102, v28 = (function()
								return v53(v55, v102, v28);
							end)();
						end
						return v57;
					end
					if (v52 ~= (2 - 0)) then
					else
						v59 = (function()
							return {};
						end)();
						for v103 = #" ", v58 do
							local v104 = (function()
								return 0;
							end)();
							local v105 = (function()
								return;
							end)();
							local v106 = (function()
								return;
							end)();
							local v107 = (function()
								return;
							end)();
							while true do
								if (v104 ~= 1) then
								else
									v107 = (function()
										return nil;
									end)();
									while true do
										if (0 == v105) then
											local v121 = (function()
												return 0;
											end)();
											while true do
												if (1 == v121) then
													v105 = (function()
														return 242 - (187 + 54);
													end)();
													break;
												end
												if (v121 == 0) then
													v106 = (function()
														return v21();
													end)();
													v107 = (function()
														return nil;
													end)();
													v121 = (function()
														return 1;
													end)();
												end
											end
										end
										if (v105 == 1) then
											if (v106 == #"|") then
												v107 = (function()
													return v21() ~= (780 - (162 + 618));
												end)();
											elseif (v106 == 2) then
												v107 = (function()
													return v24();
												end)();
											elseif (v106 == #"xxx") then
												v107 = (function()
													return v25();
												end)();
											end
											v59[v103] = (function()
												return v107;
											end)();
											break;
										end
									end
									break;
								end
								if (v104 == 0) then
									v105 = (function()
										return 0;
									end)();
									v106 = (function()
										return nil;
									end)();
									v104 = (function()
										return 1;
									end)();
								end
							end
						end
						v57[#"91("] = (function()
							return v21();
						end)();
						v52 = (function()
							return 3;
						end)();
					end
					break;
				end
			end
		end
	end
	local function v29(v60, v61, v62)
		local v63 = v60[1 + 0];
		local v64 = v60[2 + 0];
		local v65 = v60[6 - 3];
		return function(...)
			local v67 = v63;
			local v68 = v64;
			local v69 = v65;
			local v70 = v27;
			local v71 = 1 - 0;
			local v72 = -(1 + 0);
			local v73 = {};
			local v74 = {...};
			local v75 = v12("#", ...) - (1001 - ((1204 - 753) + 549));
			local v76 = {};
			local v77 = {};
			for v87 = 0, v75 do
				if (v87 >= v69) then
					v73[v87 - v69] = v74[v87 + 1];
				else
					v77[v87] = v74[v87 + 1 + 0];
				end
			end
			local v78 = (v75 - v69) + (1 - 0);
			local v79;
			local v80;
			while true do
				v79 = v67[v71];
				v80 = v79[1 - 0];
				if (v80 <= (1467 - (746 + (1450 - (284 + 528))))) then
					if ((2883 == 2883) and (v80 <= 41)) then
						if (v80 <= (8 + 12)) then
							if (v80 <= 9) then
								if (v80 <= (1023 - (867 + 152))) then
									if (v80 <= (1 - (1106 - (709 + 397)))) then
										if ((989 < 2603) and (v80 > (341 - (218 + 123)))) then
											local v126;
											local v127, v128;
											local v129;
											v77[v79[1583 - (1535 + 46)]] = v77[v79[3 + (0 - 0)]][v79[1 + 3]];
											v71 = v71 + (561 - (306 + 254));
											v79 = v67[v71];
											v77[v79[1 + 1]] = v61[v79[5 - 2]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[(1505 - (21 + 15)) - (899 + 568)]] = v79[2 + 1];
											v71 = v71 + (2 - 1);
											v79 = v67[v71];
											v77[v79[605 - (268 + 335)]] = v79[293 - (60 + 230)];
											v71 = v71 + ((958 - 385) - (426 + 146));
											v79 = v67[v71];
											v129 = v79[1 + 1];
											v127, v128 = v70(v77[v129](v13(v77, v129 + 1, v79[5 - 2])));
											v72 = (v128 + v129) - (1457 - (282 + 1174));
											v126 = 0;
											for v741 = v129, v72 do
												v126 = v126 + 1;
												v77[v741] = v127[v126];
											end
											v71 = v71 + (812 - (569 + 242));
											v79 = v67[v71];
											v129 = v79[5 - (1 + 2)];
											v77[v129] = v77[v129](v13(v77, v129 + 1 + 0, v72));
											v71 = v71 + (1025 - (706 + 318));
											v79 = v67[v71];
											v61[v79[1254 - (721 + 530)]] = v77[v79[1273 - (945 + 326)]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[4 - 2]] = v61[v79[3 + 0]];
											v71 = v71 + (701 - (271 + 429));
											v79 = v67[v71];
											v77[v79[2 + (0 - 0)]] = v62[v79[3]];
											v71 = v71 + (1501 - (1408 + (228 - 136)));
											v79 = v67[v71];
											v77[v79[1 + 1]] = v77[v79[1089 - (461 + 625)]][v79[1292 - (993 + 295)]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v77[v79[1173 - ((553 - (97 + 38)) + 753)]] = v77[v79[(82 - (52 + 28)) + 1]][v79[4]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v77[v79[1 + 1]][v79[1 + 2]] = v77[v79[4]];
											v71 = v71 + (530 - (406 + 123));
											v79 = v67[v71];
											v77[v79[1 + 1]] = v61[v79[1772 - (1749 + (869 - (59 + 790)))]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v77[v79[2]] = v62[v79[1325 - (1249 + 73)]];
											v71 = v71 + 1 + 0 + 0;
											v79 = v67[v71];
											v77[v79[1147 - (466 + 679)]] = v77[v79[6 - 3]][v79[4]];
											v71 = v71 + ((1 + 1) - 1);
											v79 = v67[v71];
											v77[v79[1902 - (106 + 1794)]] = v61[v79[(941 - (467 + 473)) + 2]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[1 + 1]] = v61[v79[3]];
											v71 = v71 + ((9 - 7) - 1);
											v79 = v67[v71];
											v77[v79[5 - 3]] = v61[v79[(319 - 202) - ((9 - 5) + 110)]];
											v71 = v71 + (585 - (57 + 527));
											v79 = v67[v71];
											v129 = v79[1429 - (41 + 1386)];
											v77[v129] = v77[v129](v13(v77, v129 + (104 - (17 + 86)), v79[3 + 0]));
											v71 = v71 + (1 - (0 - 0));
											v79 = v67[v71];
											v77[v79[5 - 3]][v79[169 - (122 + 44)]] = v77[v79[6 - 2]];
											v71 = v71 + (3 - 2);
											v79 = v67[v71];
											v77[v79[2 + 0]] = v79[1 + 2];
										else
											local v168;
											v77[v79[3 - 1]] = v77[v79[68 - (30 + 14 + 21)]][v79[3 + 1]];
											v71 = v71 + (1258 - (1043 + 214));
											v79 = v67[v71];
											v77[v79[2]] = v61[v79[11 - 8]];
											v71 = v71 + (1213 - ((712 - 389) + 889));
											v79 = v67[v71];
											v77[v79[5 - 3]] = v79[583 - (361 + (875 - 656))];
											v71 = v71 + (321 - (53 + 267));
											v79 = v67[v71];
											v77[v79[2]] = v79[1 + 2];
											v71 = v71 + (414 - (15 + 398));
											v79 = v67[v71];
											v168 = v79[2];
											v77[v168] = v77[v168](v13(v77, v168 + 1, v79[985 - (18 + 964)]));
											v71 = v71 + (3 - 2);
											v79 = v67[v71];
											v77[v79[(2 - 0) + 0]] = v61[v79[3]];
											v71 = v71 + 1 + 0 + 0;
											v79 = v67[v71];
											v168 = v79[852 - (20 + 830)];
											v77[v168] = v77[v168](v13(v77, v168 + 1 + 0, v79[129 - (116 + 10)]));
											v71 = v71 + 1;
											v79 = v67[v71];
											v61[v79[1 + 1 + 1]] = v77[v79[740 - (542 + 196)]];
											v71 = v71 + (1 - 0);
											v79 = v67[v71];
											v77[v79[2]] = v61[v79[1 + 2]];
											v71 = v71 + 1 + 0 + 0;
											v79 = v67[v71];
											v77[v79[1 + 1]][v79[7 - 4]] = v77[v79[4]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[4 - 2]] = v79[1554 - (1126 + 425)];
										end
									elseif ((v80 <= (407 - (118 + 287))) or (3432 == 4319)) then
										local v189 = (237 - (58 + 179)) - 0;
										local v190;
										local v191;
										while true do
											if (v189 == 6) then
												v191 = v79[1123 - (118 + (2449 - 1446))];
												v77[v191] = v77[v191](v13(v77, v191 + (2 - 1), v79[3]));
												v71 = v71 + 1;
												v79 = v67[v71];
												v189 = 384 - (142 + 235);
											end
											if (v189 == (22 - 17)) then
												v79 = v67[v71];
												v77[v79[1 + 1]] = v79[980 - (553 + 424)];
												v71 = v71 + ((1254 - (677 + 576)) - 0);
												v79 = v67[v71];
												v189 = 6 + 0;
											end
											if ((0 + 0 + 0) == v189) then
												v190 = nil;
												v191 = nil;
												v191 = v79[2 + 0];
												v77[v191] = v77[v191](v13(v77, v191 + (1 - 0) + (220 - (88 + 132)), v79[2 + 1]));
												v189 = 2 - 1;
											end
											if ((v189 == (5 - 3)) or (1938 < 1109)) then
												v79 = v67[v71];
												v191 = v79[4 - 2];
												v190 = v77[v79[1 + 0 + 2]];
												v77[v191 + (4 - 3)] = v190;
												v189 = 756 - (239 + 514);
											end
											if (v189 == (3 + 4)) then
												v77[v79[1331 - (797 + 532)]] = v79[(14 - 11) + 0] ~= 0;
												break;
											end
											if (v189 == (2 + 2)) then
												v71 = v71 + (2 - (3 - 2));
												v79 = v67[v71];
												v77[v79[2]] = v79[1205 - (373 + 829)];
												v71 = v71 + 1;
												v189 = 5;
											end
											if (v189 == (734 - (476 + 255))) then
												v77[v191] = v190[v79[1134 - (369 + 761)]];
												v71 = v71 + 1 + 0;
												v79 = v67[v71];
												v77[v79[2 - 0]] = v77[v79[5 - 2]];
												v189 = 242 - (64 + 174);
											end
											if (v189 == (1 + 0)) then
												v71 = v71 + (1 - (291 - (12 + 279)));
												v79 = v67[v71];
												v77[v79[(605 - 267) - (144 + 192)]] = v62[v79[219 - (42 + 174)]];
												v71 = v71 + 1;
												v189 = 2 + 0;
											end
										end
									elseif (v80 == (3 + 0)) then
										v77[v79[1 + 1]] = v77[v79[1507 - (363 + 1141)]] % v77[v79[4]];
										v71 = v71 + (1581 - (1183 + 397));
										v79 = v67[v71];
										v77[v79[5 - 3]] = v61[v79[1 + 2 + 0]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[1977 - (1913 + 62)]] = v77[v79[2 + 1]] % v77[v79[4]];
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v77[v79[1935 - (565 + 1368)]] = v77[v79[11 - 8]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v79[1664 - (1477 + 184)];
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v77[v79[2 + 0]] = v79[859 - (564 + 292)];
										v71 = v71 + 1;
										v79 = v67[v71];
										v71 = v79[4 - 1];
									else
										local v774;
										local v775;
										local v776, v777;
										local v778;
										v77[v79[5 - 3]] = v61[v79[3]];
										v71 = v71 + (305 - (244 + 60));
										v79 = v67[v71];
										v77[v79[2 + 0]] = v79[3];
										v71 = v71 + (477 - (41 + 435));
										v79 = v67[v71];
										v77[v79[2]] = v79[950 - (652 + 295)];
										v71 = v71 + (1002 - (938 + 63));
										v79 = v67[v71];
										v778 = v79[2 + 0];
										v77[v778] = v77[v778](v13(v77, v778 + ((74 + 1052) - (936 + 189)), v79[1 + 2]));
										v71 = v71 + (1614 - (1565 + 48));
										v79 = v67[v71];
										v77[v79[2 + 0 + 0]] = v61[v79[1141 - (782 + 356)]];
										v71 = v71 + (268 - (176 + 91));
										v79 = v67[v71];
										v77[v79[4 - 2]] = v79[4 - 1];
										v71 = v71 + (1093 - (975 + 117));
										v79 = v67[v71];
										v77[v79[1877 - ((1146 - (848 + 141)) + 1718)]] = v79[3 + 0];
										v71 = v71 + 1;
										v79 = v67[v71];
										v778 = v79[2];
										v776, v777 = v70(v77[v778](v13(v77, v778 + (3 - 2), v79[10 - 7])));
										v72 = (v777 + v778) - (1019 - (697 + 321));
										v775 = 0 - 0;
										for v1238 = v778, v72 do
											local v1239 = 0;
											while true do
												if (v1239 == (0 - 0)) then
													v775 = v775 + (2 - 1);
													v77[v1238] = v776[v775];
													break;
												end
											end
										end
										v71 = v71 + 1;
										v79 = v67[v71];
										v778 = v79[2];
										v77[v778] = v77[v778](v13(v77, v778 + 1 + 0, v72));
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[3 - 1]] = v77[v79[7 - 4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v778 = v79[2];
										v774 = v77[v79[3]];
										v77[v778 + (1228 - (322 + 905))] = v774;
										v77[v778] = v774[v79[615 - ((1342 - (372 + 368)) + 9)]];
										v71 = v71 + (1190 - (260 + 189 + 740));
										v79 = v67[v71];
										v77[v79[874 - (826 + 46)]] = v61[v79[3]];
										v71 = v71 + (948 - (245 + 702));
										v79 = v67[v71];
										v77[v79[6 - 4]] = v79[1 + 2];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[1900 - (260 + 1638)]] = v79[(1573 - (542 + 588)) - ((1200 - (6 + 812)) + 58)];
										v71 = v71 + (3 - 2);
										v79 = v67[v71];
										v778 = v79[2 + 0];
										v77[v778] = v77[v778](v13(v77, v778 + (1 - 0), v79[8 - 5]));
										v71 = v71 + (1206 - (902 + 303));
										v79 = v67[v71];
										v77[v79[3 - 1]] = v77[v79[6 - 3]][v79[1 + 3]];
										v71 = v71 + (1691 - (1121 + 569));
										v79 = v67[v71];
										v77[v79[216 - (22 + 192)]] = v77[v79[686 - (483 + 200)]][v79[4]];
										v71 = v71 + (1464 - ((3109 - (1599 + 106)) + 59));
										v79 = v67[v71];
										v77[v79[5 - 3]] = v62[v79[3 - 0]];
										v71 = v71 + (766 - (468 + 297));
										v79 = v67[v71];
										v77[v79[564 - (334 + 228)]] = v77[v79[10 - 7]][v79[8 - 4]];
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v77[v79[(2 - 1) + 1]] = v79[3];
										v71 = v71 + (237 - (141 + 95));
										v79 = v67[v71];
										v77[v79[2]] = v79[3 + 0];
										v71 = v71 + ((1 + 1) - 1);
										v79 = v67[v71];
										v77[v79[(2 + 2) - 2]] = v79[1 + (7 - 5)];
										v71 = v71 + 1;
										v79 = v67[v71];
										v778 = v79[5 - 3];
										v776, v777 = v70(v77[v778](v13(v77, v778 + 1 + 0, v79[2 + 1])));
										v72 = (v777 + v778) - (1 - 0);
										v775 = 0 + 0;
										for v1240 = v778, v72 do
											local v1241 = 0;
											while true do
												if (v1241 == (163 - (92 + 71))) then
													v775 = v775 + 1 + 0;
													v77[v1240] = v776[v775];
													break;
												end
											end
										end
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v778 = v79[767 - (574 + 191)];
										v77[v778] = v77[v778](v13(v77, v778 + 1 + 0, v72));
										v71 = v71 + (2 - (1 - 0));
										v79 = v67[v71];
										v77[v79[2 + 0]] = v77[v79[852 - (254 + 595)]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[128 - (55 + 71)]] = v79[3 - 0];
										v71 = v71 + (1791 - (573 + 1217));
										v79 = v67[v71];
										v71 = v79[1 + 2];
									end
								elseif (v80 <= (16 - 10)) then
									if ((v80 == 5) or (4667 <= 4562)) then
										local v192;
										local v193;
										local v194, v195;
										local v196;
										v196 = v79[1 + 1];
										v77[v196](v77[v196 + (1 - 0)]);
										v71 = v71 + (940 - (714 + 225));
										v79 = v67[v71];
										v77[v79[5 - 3]] = v77[v79[3 - (0 + 0)]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2 - 0]] = v77[v79[809 - (118 + 688)]];
										v71 = v71 + ((12 + 37) - (25 + 23));
										v79 = v67[v71];
										v77[v79[2]] = v79[1 + 1 + 1];
										v71 = v71 + (1887 - (255 + 672 + (2888 - (1690 + 239))));
										v79 = v67[v71];
										v77[v79[2]] = v79[10 - 7];
										v71 = v71 + (733 - (16 + 716));
										v79 = v67[v71];
										v196 = v79[2];
										v194, v195 = v70(v77[v196](v13(v77, v196 + (1 - 0), v79[100 - ((37 - 26) + 86)])));
										v72 = (v195 + v196) - (2 - 1);
										v193 = 0;
										for v744 = v196, v72 do
											local v745 = (211 + 74) - ((379 - 204) + 110);
											while true do
												if (v745 == ((0 - 0) - 0)) then
													v193 = v193 + (4 - 3);
													v77[v744] = v194[v193];
													break;
												end
											end
										end
										v71 = v71 + (1797 - (341 + 162 + 1293));
										v79 = v67[v71];
										v196 = v79[2];
										v77[v196](v13(v77, v196 + (2 - 1), v72));
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2]] = v62[v79[1064 - (810 + 251)]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v196 = v79[1 + 1];
										v192 = v77[v79[11 - 8]];
										v77[v196 + 1 + 0] = v192;
										v77[v196] = v192[v79[537 - (43 + 490)]];
										v71 = v71 + (734 - (711 + 22));
										v79 = v67[v71];
										v77[v79[7 - 5]] = v77[v79[862 - (240 + 619)]];
									else
										local v214;
										v77[v79[1 + (1869 - (1736 + 132))]] = v77[v79[4 - 1]][v79[4]];
										v71 = v71 + 1 + 0 + 0;
										v79 = v67[v71];
										v77[v79[1746 - (1344 + 400)]] = -v77[v79[9 - 6]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[407 - (255 + 150)]] = v79[3 + (0 - 0)] ^ v77[v79[3 + 1]];
										v71 = v71 + (4 - (1 + 2));
										v79 = v67[v71];
										v77[v79[6 - 4]] = v77[v79[1742 - (404 + 1335)]] * v77[v79[410 - (183 + 223)]];
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v214 = v79[34 - (27 + 5)];
										do
											return v77[v214](v13(v77, v214 + 1, v79[2 + 1]));
										end
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v214 = v79[339 - (10 + 327)];
										do
											return v13(v77, v214, v72);
										end
										v71 = v71 + 1;
										v79 = v67[v71];
										v71 = v79[3 + 0];
									end
								elseif ((v80 <= (345 - (118 + 220))) or (2320 == 133)) then
									v77[v79[1 + 1]]();
								elseif (v80 == (457 - (108 + 341))) then
									v77[v79[1 + 1]] = {};
								else
									local v820 = 0;
									local v821;
									while true do
										if (v820 == ((0 + 0) - 0)) then
											v821 = v79[1495 - (711 + 782)];
											do
												return v13(v77, v821, v821 + v79[5 - 2]);
											end
											break;
										end
									end
								end
							elseif (v80 <= 14) then
								if (v80 <= (480 - (270 + 199))) then
									if (v80 > (4 + 6)) then
										v77[v79[1821 - (415 + 165 + 463 + 776)]] = v29(v68[v79[8 - (2 + 3)]], nil, v62);
									else
										local v225 = 0 + 0;
										local v226;
										local v227;
										local v228;
										local v229;
										while true do
											if ((v225 == (1 + 0)) or (3172 < 802)) then
												v71 = v71 + 1;
												v79 = v67[v71];
												v77[v79[2]] = v79[3];
												v71 = v71 + 1 + 0 + 0;
												v225 = 4 - 2;
											end
											if ((0 + 0) == v225) then
												v226 = nil;
												v227, v228 = nil;
												v229 = nil;
												v77[v79[1119 - (771 + 346)]] = v77[v79[3]];
												v225 = 1168 - (645 + (2156 - (1577 + 57)));
											end
											if ((1049 <= 3100) and ((5 - 2) == v225)) then
												v229 = v79[1792 - (1010 + 780)];
												v227, v228 = v70(v77[v229](v13(v77, v229 + 1 + 0, v79[3])));
												v72 = (v228 + v229) - (4 - 3);
												v226 = 0 - 0;
												v225 = 1840 - (1045 + 791);
											end
											if (v225 == 2) then
												v79 = v67[v71];
												v77[v79[4 - (1082 - (684 + 396))]] = v79[(11 - 7) - 1];
												v71 = v71 + (506 - ((1547 - (700 + 496)) + 154));
												v79 = v67[v71];
												v225 = 1577 - (1281 + 293);
											end
											if (v225 == (271 - (28 + 238))) then
												v77[v229] = v77[v229](v13(v77, v229 + (2 - (1 + 0)), v72));
												v71 = v71 + (1560 - (1381 + 178));
												v79 = v67[v71];
												if (v77[v79[2 + 0]] or (1266 < 166)) then
													v71 = v71 + 1 + 0;
												else
													v71 = v79[2 + 1];
												end
												break;
											end
											if (v225 == (13 - 9)) then
												for v1813 = v229, v72 do
													v226 = v226 + 1 + 0;
													v77[v1813] = v227[v226];
												end
												v71 = v71 + (253 - (65 + 187));
												v79 = v67[v71];
												v229 = v79[(1411 - (827 + 112)) - (381 + 63 + 26)];
												v225 = 5 + 0;
											end
										end
									end
								elseif (v80 <= 12) then
									v77[v79[2]] = v79[3 + 0] ~= (0 - (0 - 0));
								elseif (v80 == (1169 - (1074 + 82))) then
									local v822 = 0;
									local v823;
									local v824;
									local v825;
									local v826;
									local v827;
									while true do
										if ((843 <= 1104) and (1 == v822)) then
											v827 = v79[2];
											v826 = v77[v79[(15 - 9) - 3]];
											v77[v827 + (1785 - (214 + 1570))] = v826;
											v77[v827] = v826[v79[4]];
											v822 = (7007 - 5550) - (990 + 465);
										end
										if ((3 + 4) == v822) then
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											if v77[v79[2 + 0]] then
												v71 = v71 + (3 - 2);
											else
												v71 = v79[1729 - (1668 + 58)];
											end
											break;
										end
										if (v822 == (631 - (107 + 405 + 114))) then
											v824, v825 = v70(v77[v827](v13(v77, v827 + ((1 + 1) - 1), v79[5 - 2])));
											v72 = (v825 + v827) - (3 - 2);
											v823 = 0;
											for v2775 = v827, v72 do
												local v2776 = 0;
												while true do
													if ((4059 > 2205) and ((0 + 0) == v2776)) then
														v823 = v823 + 1 + 0;
														v77[v2775] = v824[v823];
														break;
													end
												end
											end
											v822 = 6 + 0;
										end
										if ((v822 == (13 - (1205 - (551 + 645)))) or (1422 > 2419)) then
											v77[v79[2]] = v79[1997 - (109 + 1885)];
											v71 = v71 + (1470 - ((1612 - (166 + 177)) + 200));
											v79 = v67[v71];
											v827 = v79[3 - 1];
											v822 = 820 - (98 + 717);
										end
										if (v822 == (832 - (802 + 24))) then
											v71 = v71 + (1 - 0);
											v79 = v67[v71];
											v827 = v79[2 - 0];
											v77[v827] = v77[v827](v13(v77, v827 + 1 + 0, v72));
											v822 = 6 + 1;
										end
										if (v822 == (0 + 0)) then
											v823 = nil;
											v824, v825 = nil;
											v826 = nil;
											v827 = nil;
											v822 = 1 + 0;
										end
										if (v822 == (8 - 5)) then
											v79 = v67[v71];
											v77[v79[6 - 4]] = v79[2 + 1];
											v71 = v71 + 1;
											v79 = v67[v71];
											v822 = 2 + 2;
										end
										if ((2324 == 2324) and (v822 == (2 + 0))) then
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v77[v79[1 + 1]] = v77[v79[1436 - (797 + 636)]];
											v71 = v71 + (4 - 3);
											v822 = 1622 - (1427 + 192);
										end
									end
								else
									local v828 = 0 + 0;
									local v829;
									local v830;
									local v831;
									local v832;
									local v833;
									local v834;
									while true do
										if ((2245 < 3440) and (v828 == (4 - 2))) then
											v71 = v71 + (1857 - (1361 + 495)) + 0;
											v79 = v67[v71];
											v77[v79[1 + 1]] = v62[v79[329 - (192 + 134)]];
											v71 = v71 + (1277 - (316 + 960));
											v828 = 2 + 1;
										end
										if ((1773 >= 1450) and (v828 == (0 - 0))) then
											v829 = nil;
											v830 = nil;
											v831 = nil;
											v832 = nil;
											v828 = 1;
										end
										if (v828 == (5 + 1)) then
											v833 = {};
											for v2777 = 1 + 0, #v76 do
												v832 = v76[v2777];
												for v2840 = 0 - 0, #v832 do
													local v2841 = 551 - (83 + 468);
													while true do
														if (v2841 == 0) then
															v831 = v832[v2840];
															v830 = v831[(907 + 900) - (1202 + (1351 - 747))];
															v2841 = 4 - 3;
														end
														if (((1 + 0) - 0) == v2841) then
															v829 = v831[5 - (227 - (148 + 76))];
															if ((v830 == v77) and (v829 >= v834)) then
																local v2911 = 325 - (45 + (1046 - 766));
																while true do
																	if ((1196 <= 3597) and (v2911 == 0)) then
																		v833[v829] = v830[v829];
																		v831[1 + 0] = v833;
																		break;
																	end
																end
															end
															break;
														end
													end
												end
											end
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v828 = 3 + 4;
										end
										if (v828 == ((10 - 6) + 2 + 1)) then
											do
												return;
											end
											break;
										end
										if ((v828 == (1 + 2)) or (1077 >= 2430)) then
											v79 = v67[v71];
											v77[v79[2]] = v77[v79[5 - 2]][v79[1915 - (340 + 1571)]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v828 = 1776 - (1733 + (1781 - (735 + 1007)));
										end
										if ((2979 > 2305) and (v828 == (13 - 8))) then
											v77[v834](v77[v834 + (1035 - ((404 - (111 + 168)) + 500 + 409))]);
											v71 = v71 + (1949 - (1096 + 852));
											v79 = v67[v71];
											v834 = v79[1 + 1];
											v828 = 7 - 1;
										end
										if ((673 < 1187) and (v828 == (1 + 0))) then
											v833 = nil;
											v834 = nil;
											v834 = v79[514 - (409 + 103)];
											v77[v834](v77[v834 + (237 - (46 + 190))]);
											v828 = 97 - (51 + 44);
										end
										if (v828 == 4) then
											v77[v79[1 + 1]] = v77[v79[1320 - (1114 + 203)]];
											v71 = v71 + (727 - (228 + 43 + 455));
											v79 = v67[v71];
											v834 = v79[2];
											v828 = 2 + 3;
										end
									end
								end
							elseif ((v80 <= (10 + (13 - 6))) or (388 >= 3981)) then
								if ((v80 <= (678 - (174 + 489))) or (4491 < 4255)) then
									local v231 = 0;
									while true do
										if ((0 - 0) == v231) then
											v77[v79[1907 - (830 + 1075)]] = v61[v79[527 - (303 + 221)]];
											v71 = v71 + (1270 - (231 + 1038));
											v79 = v67[v71];
											v231 = 1;
										end
										if (v231 == (4 + 0)) then
											v77[v79[2]][v79[1165 - (171 + 18 + 973)]] = v77[v79[16 - (10 + 2)]];
											break;
										end
										if (v231 == 2) then
											v77[v79[5 - 3]] = v77[v79[7 - 4]][v79[4 + 0]];
											v71 = v71 + (3 - 2);
											v79 = v67[v71];
											v231 = 8 - 5;
										end
										if (v231 == (4 - 1)) then
											v77[v79[6 - (1 + 3)]] = v77[v79[1251 - (111 + (4845 - 3708))]][v79[162 - (91 + 67)]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v231 = 11 - 7;
										end
										if (v231 == (1 + 0)) then
											v77[v79[2]] = v77[v79[3]][v79[527 - (423 + 100)]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v231 = 1 + 1;
										end
									end
								elseif (v80 > (43 - 27)) then
									v77[v79[2]] = v77[v79[2 + 1]] * v79[775 - (326 + 445)];
								else
									local v836 = 0;
									local v837;
									while true do
										if ((2861 < 4985) and (v836 == ((7 + 6) - 10))) then
											v79 = v67[v71];
											v837 = v79[4 - 2];
											v77[v837](v77[v837 + (2 - 1)]);
											v836 = (1647 - (147 + 785)) - (530 + 181);
										end
										if (v836 == (888 - (614 + (933 - (483 + 183))))) then
											v71 = v71 + (33 - (19 + 13));
											v79 = v67[v71];
											v77[v79[2 - 0]] = v77[v79[6 - 3]][v79[11 - 7]];
											v836 = 8;
										end
										if (v836 == 4) then
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v77[v79[3 - 1]] = v61[v79[6 - 3]];
											v836 = 1817 - (1293 + 519);
										end
										if (v836 == 8) then
											v71 = v71 + (1 - 0);
											v79 = v67[v71];
											v77[v79[4 - 2]] = v79[5 - 2];
											break;
										end
										if ((v836 == (5 - 3)) or (499 <= 289)) then
											v79 = v67[v71];
											v77[v79[8 - 6]] = v77[v79[6 - 3]][v79[3 + 1]];
											v71 = v71 + 1 + 0;
											v836 = 6 - 3;
										end
										if ((4361 > 740) and (v836 == 5)) then
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v77[v79[1 + 1]] = v77[v79[2 + 1]][v79[1100 - (709 + 317 + 70)]];
											v836 = 1864 - (673 + (3096 - (1790 + 121)));
										end
										if (v836 == (2 - 1)) then
											v79 = v67[v71];
											v77[v79[6 - 4]] = v77[v79[4 - 1]][v79[3 + 1]];
											v71 = v71 + 1 + 0;
											v836 = 2;
										end
										if (v836 == (0 - 0)) then
											v837 = nil;
											v77[v79[2]] = v61[v79[(3 - 2) + 2]];
											v71 = v71 + (1 - (1539 - (259 + 1280)));
											v836 = 1;
										end
										if (v836 == (11 - 5)) then
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[1882 - (446 + (3018 - (160 + 1424)))]] = v77[v79[1286 - (1040 + 243)]][v79[11 - (7 + 0)]];
											v836 = 1854 - (559 + 1288);
										end
									end
								end
							elseif (v80 <= ((623 + 1326) - (609 + 1322))) then
								local v232 = v79[456 - (13 + (1211 - (479 + 291)))];
								local v233 = v77[v79[10 - 7]];
								v77[v232 + (2 - 1)] = v233;
								v77[v232] = v233[v79[19 - 15]];
							elseif ((v80 > (1 + 18)) or (4525 == 578)) then
								v62[v79[10 - (13 - 6)]] = v77[v79[1 + (972 - (569 + 402))]];
							else
								local v840 = 0 + 0;
								local v841;
								local v842;
								local v843;
								local v844;
								while true do
									if (v840 == (5 - 3)) then
										for v2779 = v841, v72 do
											local v2780 = 1305 - (635 + 670);
											while true do
												if (v2780 == 0) then
													v844 = v844 + 1 + 0;
													v77[v2779] = v842[v844];
													break;
												end
											end
										end
										break;
									end
									if (v840 == 1) then
										v72 = (v843 + v841) - (1 - 0);
										v844 = 0 + 0;
										v840 = 2 + 0;
									end
									if (v840 == (0 + 0)) then
										v841 = v79[2 + (0 - 0)];
										v842, v843 = v70(v77[v841](v13(v77, v841 + 1 + 0, v72)));
										v840 = 434 - (153 + 280);
									end
								end
							end
						elseif ((v80 <= (86 - 56)) or (2815 <= 618)) then
							if ((2526 == 2526) and (v80 <= 25)) then
								if (v80 <= 22) then
									if ((457 <= 786) and (v80 > ((75 - 56) + 2))) then
										v77[v79[1 + 1]] = #v77[v79[3]];
									elseif (v79[2 + 0] == v77[v79[4 + 0]]) then
										v71 = v71 + 1 + (598 - (42 + 556));
									else
										v71 = v79[4 - 1];
									end
								elseif (v80 <= (15 + 8)) then
									if (v79[669 - (89 + 578)] <= v77[v79[(1404 - (1246 + 155)) + (733 - (31 + 701))]]) then
										v71 = v71 + (1 - 0);
									else
										v71 = v79[3];
									end
								elseif ((206 < 4013) and (v80 == (1073 - (572 + 477)))) then
									v77[v79[1 + 1]] = v61[v79[2 + 1]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[1 + 1]] = v61[v79[89 - (84 + 2)]];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v77[v79[2]] = v77[v79[3 + 0]][v79[846 - (497 + (1152 - 807))]];
									v71 = v71 + 1 + (499 - (393 + 106));
									v79 = v67[v71];
									v77[v79[1 + 1]] = v77[v79[3]] - v79[1337 - (605 + 728)];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[2]][v79[6 - 3]] = v77[v79[1 + (1174 - (727 + 444))]];
									v71 = v71 + (3 - 2);
									v79 = v67[v71];
									do
										return;
									end
								else
									local v855 = v79[2 + 0];
									v77[v855] = v77[v855](v13(v77, v855 + (2 - 1), v79[3 + 0]));
								end
							elseif (v80 <= 27) then
								if (v80 == ((1494 - 979) - (457 + 32))) then
									local v238 = 0 + 0;
									local v239;
									while true do
										if ((2120 < 4246) and (v238 == (1404 - (832 + 570)))) then
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[2 + 0]] = v77[v79[1 + 2]][v79[13 - 9]];
											v71 = v71 + 1;
											v238 = 3;
										end
										if (v238 == 6) then
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[1 + 1]] = v77[v79[2 + (654 - (269 + 384))]] / v79[800 - (588 + 208)];
											v71 = v71 + (1570 - (598 + 971));
											v238 = 18 - 11;
										end
										if (v238 == 0) then
											v239 = nil;
											v77[v79[1802 - (884 + 916)]] = v77[v79[6 - 3]] % v79[4];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v238 = 654 - (232 + 421);
										end
										if ((v238 == (1894 - (1569 + 320))) or (914 >= 1399)) then
											v77[v79[2]] = v62[v79[1 + 2]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v77[v79[6 - 4]] = v77[v79[608 - (316 + 289)]][v79[10 - 6]];
											v238 = 1 + 5;
										end
										if (v238 == (1456 - (666 + 787))) then
											v79 = v67[v71];
											v77[v79[2]] = v77[v79[428 - (360 + 65)]] / v79[4 + 0];
											v71 = v71 + ((97 + 158) - (79 + 175));
											v79 = v67[v71];
											v238 = 5 - (3 - 2);
										end
										if ((3211 >= 2180) and (v238 == 4)) then
											v239 = v79[2 + 0];
											v77[v239] = v77[v239](v77[v239 + 1]);
											v71 = v71 + (2 - 1);
											v79 = v67[v71];
											v238 = 9 - 4;
										end
										if (v238 == 1) then
											v77[v79[2]] = v77[v79[902 - (503 + 396)]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[(859 - 676) - (92 + 89)]] = v62[v79[5 - 2]];
											v238 = (5 - 3) + 0;
										end
										if ((6 + 4) == v238) then
											v71 = v71 + (3 - (1447 - (800 + 645)));
											v79 = v67[v71];
											v71 = v79[1 + 0 + 2];
											break;
										end
										if (v238 == (20 - 11)) then
											v77[v79[(792 - (687 + 103)) + 0]] = v77[v79[2 + 1]];
											v71 = v71 + (2 - (1163 - (142 + 1020)));
											v79 = v67[v71];
											v77[v79[1 + 1]] = v79[6 - 3];
											v238 = (3 + 12) - 5;
										end
										if ((2537 <= 3952) and (v238 == (1251 - (485 + 759)))) then
											v79 = v67[v71];
											v239 = v79[4 - 2];
											v77[v239] = v77[v239](v77[v239 + 1]);
											v71 = v71 + 1;
											v238 = 1197 - (442 + (1260 - (306 + 207)));
										end
										if (v238 == 8) then
											v79 = v67[v71];
											v77[v79[(2541 - (112 + 1292)) - (832 + 303)]] = v77[v79[949 - (88 + 858)]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v238 = 3 + 6;
										end
									end
								else
									local v240;
									v77[v79[2 + 0]] = v62[v79[3]];
									v71 = v71 + 1 + 0 + 0;
									v79 = v67[v71];
									v77[v79[791 - (766 + 23)]] = v77[v79[(966 - (587 + 365)) - 11]][v79[5 - 1]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[4 - 2]] = v77[v79[3]] / v79[4];
									v71 = v71 + (3 - (1717 - (829 + 886)));
									v79 = v67[v71];
									v77[v79[1075 - (1036 + 37)]] = v79[3 + 0];
									v71 = v71 + ((2 - 1) - 0);
									v79 = v67[v71];
									v240 = v79[2 + 0];
									v77[v240] = v77[v240](v13(v77, v240 + 1 + 0, v79[(5884 - 4401) - ((2039 - 1398) + 815 + 24)]));
									v71 = v71 + (914 - (408 + 502 + 3));
									v79 = v67[v71];
									v77[v79[2]] = v77[v79[7 - 4]] / v79[1688 - (1466 + (372 - 154))];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[2]] = v77[v79[1151 - (556 + 592)]] + v77[v79[4]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[979 - (613 + 364)]][v79[2 + 1]] = v77[v79[812 - (329 + 479)]];
									v71 = v71 + (855 - (174 + 680));
									v79 = v67[v71];
									v77[v79[2]] = v61[v79[10 - 7]];
									v71 = v71 + ((1 + 0) - 0);
									v79 = v67[v71];
									v77[v79[2 + 0]][v79[742 - (396 + 343)]] = v77[v79[1 + 3]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[1479 - (29 + 1448)]] = v61[v79[1392 - (135 + 1254)]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[2]] = v61[v79[3]];
									v71 = v71 + (3 - (1 + 1));
									v79 = v67[v71];
									v77[v79[2]] = v77[v79[13 - 10]][v79[3 + 1]];
									v71 = v71 + (1528 - (389 + 1138));
									v79 = v67[v71];
									if ((1210 >= 1140) and (v79[576 - (102 + 472)] < v77[v79[4]])) then
										v71 = v79[3 + 0];
									else
										v71 = v71 + 1 + 0;
									end
								end
							elseif (v80 <= (27 + 1)) then
								local v261 = 1545 - (320 + 1225);
								local v262;
								while true do
									if ((1417 <= 1461) and (v261 == (0 - 0))) then
										v262 = v79[2 + 0];
										v77[v262] = v77[v262]();
										break;
									end
								end
							elseif (v80 > 29) then
								local v858;
								local v859, v860;
								local v861;
								v77[v79[1466 - (157 + 292 + 1015)]] = v61[v79[(4254 - 2392) - (821 + 1038)]];
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v77[v79[1 + 1]] = v79[4 - 1];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[4 - 2]] = v79[1029 - (834 + 192)];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v861 = v79[1 + 1];
								v859, v860 = v70(v77[v861](v13(v77, v861 + 1, v79[1 + 2])));
								v72 = (v860 + v861) - (1 - 0);
								v858 = 304 - ((1077 - 777) + 4);
								for v1306 = v861, v72 do
									v858 = v858 + 1 + 0;
									v77[v1306] = v859[v858];
								end
								v71 = v71 + (2 - (2 - 1));
								v79 = v67[v71];
								v861 = v79[(238 + 126) - (112 + 250)];
								v77[v861] = v77[v861](v13(v77, v861 + 1 + 0, v72));
								v71 = v71 + ((1941 - (1467 + 472)) - 1);
								v79 = v67[v71];
								if v77[v79[2 + 0]] then
									v71 = v71 + 1 + 0;
								else
									v71 = v79[3 + (0 - 0)];
								end
							else
								local v872 = 0 + 0;
								local v873;
								local v874;
								local v875;
								local v876;
								while true do
									if ((v872 == (4 + 1)) or (2022 <= 688)) then
										v77[v876] = v77[v876](v13(v77, v876 + (1415 - (1001 + 413)), v72));
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[4 - 2]] = v61[v79[885 - (244 + 638)]];
										v872 = 699 - ((2174 - (1077 + 470)) + 66);
									end
									if (v872 == 7) then
										v79 = v67[v71];
										if (v77[v79[5 - 3]] == v77[v79[606 - (512 + 90)]]) then
											v71 = v71 + (1907 - (1665 + 241));
										else
											v71 = v79[720 - (8 + 365 + 344)];
										end
										break;
									end
									if ((v872 == (1 + 0)) or (4091 <= 3232)) then
										v71 = v71 + 1 + 0 + 0;
										v79 = v67[v71];
										v77[v79[2]] = v79[7 - 4];
										v71 = v71 + (1 - 0);
										v872 = 1101 - (35 + 1064);
									end
									if ((v872 == 0) or (3939 <= 1933)) then
										v873 = nil;
										v874, v875 = nil;
										v876 = nil;
										v77[v79[2 + 0]] = v61[v79[6 - 3]];
										v872 = 1 + 0;
									end
									if (v872 == ((5637 - 4397) - (298 + 938))) then
										for v2781 = v876, v72 do
											local v2782 = 1259 - (233 + 1026);
											while true do
												if (v2782 == 0) then
													v873 = v873 + ((2096 - (12 + 417)) - (636 + 1030));
													v77[v2781] = v874[v873];
													break;
												end
											end
										end
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v876 = v79[2 + 0];
										v872 = (4 - 2) + 3;
									end
									if (v872 == (1 + 1)) then
										v79 = v67[v71];
										v77[v79[223 - (55 + 166)]] = v79[1 + 2];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v872 = 11 - 8;
									end
									if (v872 == (303 - (36 + 193 + 68))) then
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v77[v79[1370 - (34 + 1334)]] = v77[v79[2 + 1]][v79[4]];
										v71 = v71 + 1 + 0;
										v872 = 1290 - (1035 + (329 - 81));
									end
									if (v872 == (24 - ((40 - 20) + 1))) then
										v876 = v79[2 + 0];
										v874, v875 = v70(v77[v876](v13(v77, v876 + (320 - (134 + 185)), v79[3])));
										v72 = (v875 + v876) - (1134 - (549 + 584));
										v873 = 685 - (314 + 371);
										v872 = 13 - 9;
									end
								end
							end
						elseif (v80 <= ((1902 - 899) - (478 + 141 + 349))) then
							if (v80 <= (17 + 15)) then
								if (v80 == (1203 - (786 + 386))) then
									local v263;
									local v264;
									v77[v79[6 - 4]] = v77[v79[3]][v79[4]];
									v71 = v71 + (1380 - (1055 + 324));
									v79 = v67[v71];
									v77[v79[1342 - (1093 + 247)]] = v77[v79[3 + 0]][v79[1 + 3]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[7 - 5]] = v61[v79[9 - 6]];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[4 - 2]] = v79[2 + 1];
									v71 = v71 + (3 - 2);
									v79 = v67[v71];
									v77[v79[6 - 4]] = v79[3 + 0 + 0];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v264 = v79[690 - (364 + 324)];
									v77[v264] = v77[v264](v13(v77, v264 + (2 - 1), v79[(17 - 11) - 3]));
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[1 + 1]] = v77[v79[12 - 9]][v77[v79[5 - 1]]];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v264 = v79[1270 - (1249 + 19)];
									v263 = v77[v79[3 + 0]];
									v77[v264 + (3 - 2)] = v263;
									v77[v264] = v263[v79[1090 - (686 + 400)]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v264 = v79[2 + (1105 - (924 + 181))];
									v77[v264] = v77[v264](v77[v264 + (230 - ((870 - (263 + 534)) + 156))]);
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[813 - (721 + 90)]] = v77[v79[1 + 1 + 1]] / v79[12 - 8];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[472 - (213 + 11 + 246)]] = v61[v79[4 - 1]];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v77[v79[1 + 1]] = v77[v79[1 + 2]][v79[4]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v264 = v79[3 - 1];
									v77[v264] = v77[v264]();
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[(8 - 5) - 1]] = v77[v79[9 - 6]];
									v71 = v71 + (514 - (203 + 310));
									v79 = v67[v71];
									v77[v79[(1225 + 770) - (1238 + (1462 - (562 + 145)))]] = v79[1 + 2];
								else
									local v293;
									local v294;
									local v295;
									v77[v79[1536 - (709 + 825)]] = v77[v79[4 - (1 + 0)]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[2 - 0]] = v79[2 + 1];
									v71 = v71 + ((338 + 527) - (196 + 668));
									v79 = v67[v71];
									v77[v79[(1 + 6) - (1 + 4)]] = #v77[v79[5 - (3 - 1)]];
									v71 = v71 + (834 - (171 + 662));
									v79 = v67[v71];
									v77[v79[95 - (4 + 89)]] = v79[3];
									v71 = v71 + (3 - 2);
									v79 = v67[v71];
									v295 = v79[1 + 0 + 1];
									v294 = v77[v295];
									v293 = v77[v295 + (8 - 6)];
									if (v293 > (0 + 0)) then
										if (v294 > v77[v295 + ((6876 - 5389) - (35 + 1451))]) then
											v71 = v79[1456 - (28 + 1425)];
										else
											v77[v295 + (1996 - (941 + 1052))] = v294;
										end
									elseif (v294 < v77[v295 + 1 + 0]) then
										v71 = v79[(551 + 966) - (822 + 451 + 241)];
									else
										v77[v295 + (3 - 0)] = v294;
									end
								end
							elseif (v80 <= (16 + 17)) then
								local v307 = 297 - (45 + 252);
								local v308;
								local v309;
								while true do
									if (v307 == (1 + 0)) then
										for v1821 = 1, #v76 do
											local v1822 = v76[v1821];
											for v1977 = 0, #v1822 do
												local v1978 = 0 + 0;
												local v1979;
												local v1980;
												local v1981;
												while true do
													if (v1978 == (0 - 0)) then
														v1979 = v1822[v1977];
														v1980 = v1979[1];
														v1978 = (2310 - (1459 + 417)) - (114 + 319);
													end
													if (v1978 == 1) then
														v1981 = v1979[2 - 0];
														if ((v1980 == v77) and (v1981 >= v308)) then
															v309[v1981] = v1980[v1981];
															v1979[1 - 0] = v309;
														end
														break;
													end
												end
											end
										end
										break;
									end
									if (v307 == (0 + 0)) then
										v308 = v79[2 - 0];
										v309 = {};
										v307 = 1 - 0;
									end
								end
							elseif (v80 == 34) then
								local v877 = 1963 - (556 + 1407);
								local v878;
								while true do
									if (v877 == 3) then
										v71 = v71 + (1207 - (741 + 465));
										v79 = v67[v71];
										if ((1530 < 2138) and (v79[467 - (170 + 295)] < v77[v79[3 + 1]])) then
											v71 = v71 + 1 + 0;
										else
											v71 = v79[7 - 4];
										end
										break;
									end
									if ((1 + 0) == v877) then
										v79 = v67[v71];
										v77[v79[2 + (286 - (194 + 92))]] = v61[v79[2 + 1]];
										v71 = v71 + (1386 - (1057 + 328));
										v79 = v67[v71];
										v877 = 1232 - (957 + 273);
									end
									if ((515 == 515) and (v877 == 2)) then
										v77[v79[1 + 1]] = v77[v79[2 + 1]][v79[15 - 11]];
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]] - v77[v79[10 - 6]];
										v877 = 9 - 6;
									end
									if (((0 - 0) == v877) or (170 >= 939)) then
										v878 = nil;
										v878 = v79[(8676 - 6894) - (389 + 1391)];
										v77[v878] = v77[v878]();
										v71 = v71 + 1 + 0;
										v877 = (533 - (5 + 527)) + 0;
									end
								end
							else
								local v879 = v79[4 - (2 + 0)];
								v77[v879](v13(v77, v879 + 1, v72));
							end
						elseif ((v80 <= 38) or (901 > 1621)) then
							if ((3870 > 2325) and (v80 <= (987 - (783 + 168)))) then
								v77[v79[6 - 4]] = v77[v79[3 + 0]] % v79[315 - (309 + 2)];
							elseif (v80 == (113 - 76)) then
								local v880 = 1212 - (1090 + 122);
								while true do
									if ((1 + (780 - (342 + 438))) == v880) then
										v62[v79[3]] = v77[v79[6 - 4]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v880 = (502 + 618) - (628 + 490);
									end
									if (2 == v880) then
										v77[v79[1 + 1]] = v79[1 + 0 + 2];
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v880 = 13 - 10;
									end
									if (v880 == (777 - (431 + 343))) then
										v77[v79[2]] = v79[5 - 2] ^ v77[v79[11 - (13 - 6)]];
										v71 = v71 + 1 + 0 + 0;
										v79 = v67[v71];
										v880 = 1 + 1 + 2;
									end
									if (v880 == 0) then
										v77[v79[1697 - (556 + 1139)]] = {};
										v71 = v71 + (16 - (6 + 9));
										v79 = v67[v71];
										v880 = 1 + (0 - 0);
									end
									if (v880 == 4) then
										v77[v79[(2 - 0) + 0]] = v62[v79[172 - (28 + 141)]];
										break;
									end
								end
							else
								v77[v79[2]] = v77[v79[3]] + v79[2 + 2];
							end
						elseif (v80 <= (47 - 8)) then
							if (v77[v79[2 + 0]] <= v77[v79[1321 - (486 + 831)]]) then
								v71 = v71 + (2 - 1);
							else
								v71 = v79[10 - 7];
							end
						elseif ((v80 > ((20 - (6 + 6)) + (95 - 63))) or (878 > 4169)) then
							local v883 = (0 - 0) - (0 + 0);
							while true do
								if (v883 == (1264 - (668 + 595))) then
									v77[v79[2]] = v77[v79[3 + 0]] * v77[v79[1 + 3]];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v883 = 2;
								end
								if (v883 == (294 - (23 + 267))) then
									do
										return v77[v79[(3199 - (206 + 1047)) - (1129 + 815)]];
									end
									v71 = v71 + (388 - ((1483 - (470 + 642)) + 16));
									v79 = v67[v71];
									v883 = 1755 - (1326 + 107 + 317);
								end
								if (((5 - 2) == v883) or (2885 == 3440)) then
									v77[v79[7 - 5]] = v77[v79[121 - (88 + 30)]] % v77[v79[4]];
									v71 = v71 + (772 - (720 + 51));
									v79 = v67[v71];
									v883 = 8 - (1071 - (552 + 515));
								end
								if (v883 == (1781 - (421 + 1355))) then
									v71 = v79[(4 + 0) - 1];
									break;
								end
								if (((1 + 1) == v883) or (242 == 4032)) then
									v77[v79[1085 - (286 + 797)]] = v61[v79[10 - 7]];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v883 = 442 - (397 + 42);
								end
								if (v883 == (0 + 0)) then
									v77[v79[2]] = v79[3] ^ v77[v79[4]];
									v71 = v71 + (801 - (24 + 776));
									v79 = v67[v71];
									v883 = 1 - 0;
								end
							end
						else
							do
								return v77[v79[787 - (222 + 563)]];
							end
						end
					elseif (v80 <= 62) then
						if ((970 == 970) and (v80 <= 51)) then
							if (v80 <= 46) then
								if ((v80 <= (94 - 51)) or (3715 <= 3322)) then
									if ((430 <= 2829) and (v80 == (31 + 11))) then
										v77[v79[2 + 0]] = v77[v79[193 - (23 + 167)]] / v79[1802 - (670 + 20 + 1108)];
									else
										local v312 = 0 + 0;
										local v313;
										local v314;
										local v315;
										local v316;
										local v317;
										while true do
											if (v312 == (5 + 1)) then
												v314, v315 = v70(v77[v317](v13(v77, v317 + (849 - (40 + 808)), v72)));
												v72 = (v315 + v317) - (1 + 0 + 0);
												v313 = (0 + 0) - (0 + 0);
												for v1823 = v317, v72 do
													v313 = v313 + 1 + 0;
													v77[v1823] = v314[v313];
												end
												v71 = v71 + 1;
												v79 = v67[v71];
												v312 = 4 + 3;
											end
											if ((v312 == (2 + 0)) or (653 > 1090)) then
												v79 = v67[v71];
												v317 = v79[573 - (47 + 524)];
												v316 = v77[v79[2 + 1]];
												v77[v317 + 1] = v316;
												v77[v317] = v316[v79[10 - 6]];
												v71 = v71 + 1;
												v312 = 4 - 1;
											end
											if ((v312 == (0 - (1051 - (701 + 350)))) or (714 > 2277)) then
												v313 = nil;
												v314, v315 = nil;
												v316 = nil;
												v317 = nil;
												v77[v79[(878 + 850) - (1165 + 561)]][v79[1 + 2]] = v77[v79[12 - 8]];
												v71 = v71 + 1 + 0;
												v312 = 480 - (341 + 138);
											end
											if ((v312 == (2 + 2)) or (651 > 4917)) then
												v79 = v67[v71];
												v77[v79[3 - 1]] = v79[329 - (89 + 127 + 110)];
												v71 = v71 + (3 - 2);
												v79 = v67[v71];
												v317 = v79[3 - 1];
												v314, v315 = v70(v77[v317](v13(v77, v317 + (882 - (581 + 300)), v79[1223 - (855 + 365)])));
												v312 = 5;
											end
											if (v312 == (16 - 9)) then
												v317 = v79[1 + 1];
												v77[v317] = v77[v317](v13(v77, v317 + (1236 - (1030 + 205)), v72));
												break;
											end
											if (v312 == (1 + 0 + 0)) then
												v79 = v67[v71];
												v77[v79[2]] = v62[v79[3]];
												v71 = v71 + 1;
												v79 = v67[v71];
												v77[v79[(2 - 0) + 0]] = v62[v79[3]];
												v71 = v71 + (287 - (156 + 130));
												v312 = 2;
											end
											if (v312 == (6 - 3)) then
												v79 = v67[v71];
												v77[v79[2]] = v77[v79[4 - 1]];
												v71 = v71 + 1;
												v79 = v67[v71];
												v77[v79[3 - 1]] = v79[3];
												v71 = v71 + 1 + 0;
												v312 = 4;
											end
											if (v312 == (3 + 2)) then
												v72 = (v315 + v317) - (70 - (10 + 59));
												v313 = 0 + 0;
												for v1826 = v317, v72 do
													local v1827 = 0 - 0;
													while true do
														if ((1163 - (671 + 492)) == v1827) then
															v313 = v313 + 1 + 0;
															v77[v1826] = v314[v313];
															break;
														end
													end
												end
												v71 = v71 + (1216 - ((1150 - 781) + 846));
												v79 = v67[v71];
												v317 = v79[2];
												v312 = 2 + 3 + 1;
											end
										end
									end
								elseif (v80 <= (38 + 6)) then
									local v318 = 1945 - (1036 + 909);
									local v319;
									while true do
										if ((3672 >= 155) and ((2 + 0) == v318)) then
											v71 = v71 + (1 - 0);
											v79 = v67[v71];
											v319 = v79[205 - (11 + 192)];
											v77[v319] = v77[v319](v13(v77, v319 + 1 + 0, v79[178 - (135 + 40)]));
											v318 = 6 - 3;
										end
										if (v318 == (1 + 0)) then
											v77[v79[4 - 2]] = v79[4 - 1];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[178 - (50 + 126)]] = v79[8 - 5];
											v318 = 1 + 1;
										end
										if ((v318 == (1416 - (1233 + 180))) or (1609 < 727)) then
											v71 = v71 + (970 - (522 + 447));
											v79 = v67[v71];
											v77[v79[1423 - (107 + 1314)]][v77[v79[2 + 1]]] = v79[11 - (17 - 10)];
											v71 = v71 + 1 + 0;
											v318 = (1 + 6) - 3;
										end
										if ((v318 == (15 - (9 + 2))) or (304 < 148)) then
											v79 = v67[v71];
											for v1828 = v79[1912 - (716 + 1194)], v79[1 + 2] do
												v77[v1828] = nil;
											end
											break;
										end
										if ((0 == v318) or (3126 > 4879)) then
											v319 = nil;
											v77[v79[2]] = v77[v79[1 + 2]];
											v71 = v71 + (504 - (74 + 429));
											v79 = v67[v71];
											v318 = 1 - 0;
										end
									end
								elseif (v80 > 45) then
									local v884 = v79[2];
									local v885 = {v77[v884](v77[v884 + (2 - 1)])};
									local v886 = (0 - 0) + 0;
									for v1351 = v884, v79[12 - 8] do
										v886 = v886 + 1;
										v77[v1351] = v885[v886];
									end
								else
									local v887 = (1346 - (281 + 1065)) - 0;
									local v888;
									while true do
										if ((v887 == (440 - (279 + 154))) or (187 > 762)) then
											v71 = v71 + (779 - (454 + 324));
											v79 = v67[v71];
											v77[v79[2 + 0]] = v77[v79[20 - (12 + 5)]] / v79[3 + 1];
											v71 = v71 + ((9 - 7) - 1);
											v79 = v67[v71];
											v77[v79[2]] = v77[v79[2 + 1]] + v77[v79[1097 - (277 + 816)]];
											v71 = v71 + (4 - 3);
											v887 = (4460 - 3269) - (1058 + (1336 - (1114 + 97)));
										end
										if (v887 == ((2 - 0) + (1919 - (279 + 1634)))) then
											v79 = v67[v71];
											v77[v79[977 - (815 + 160)]] = v79[12 - 9];
											v71 = v71 + (2 - 1);
											v79 = v67[v71];
											v888 = v79[2];
											v77[v888] = v77[v888](v13(v77, v888 + 1, v79[1 + 2]));
											v71 = v71 + (2 - 1);
											v887 = 9;
										end
										if (v887 == (1902 - (41 + 1857))) then
											v79 = v67[v71];
											v77[v79[1895 - (1222 + 671)]] = v62[v79[7 - (1284 - (1213 + 67))]];
											v71 = v71 + (1 - 0);
											v79 = v67[v71];
											v77[v79[1184 - (229 + 953)]] = v77[v79[3]][v79[4]];
											v71 = v71 + (1775 - ((1302 - (65 + 126)) + 663));
											v79 = v67[v71];
											v887 = 1584 - (874 + 646 + 59);
										end
										if (v887 == (1 + 4)) then
											v77[v79[2]] = v62[v79[3 + 0]];
											v71 = v71 + (1 - 0);
											v79 = v67[v71];
											v77[v79[1 + 1]] = v77[v79[3]][v79[683 - ((1727 - (189 + 896)) + 37)]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[1 + 1]] = v77[v79[1 + 0 + 2]];
											v887 = 14 - 8;
										end
										if ((1791 == 1791) and (v887 == 0)) then
											v888 = nil;
											v77[v79[456 - (233 + 221)]] = v61[v79[6 - 3]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v77[v79[1543 - (718 + (2786 - (1872 + 91)))]] = v77[v79[2 + 1]][v79[4]];
											v71 = v71 + (806 - (266 + 539));
											v79 = v67[v71];
											v887 = 2 - 1;
										end
										if (v887 == (1226 - (636 + 589))) then
											v77[v79[4 - 2]] = v77[v79[5 - 2]][v79[4 + 0]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v77[v79[1017 - (657 + 358)]] = v61[v79[7 - 4]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[4 - (4 - 2)]] = v77[v79[1190 - (1151 + 36)]][v79[4 + 0]];
											v887 = 1 + 1;
										end
										if (v887 == (17 - 11)) then
											v71 = v71 + (1833 - (1552 + 280));
											v79 = v67[v71];
											v77[v79[836 - (64 + 770)]] = v79[3];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v888 = v79[4 - 2];
											v77[v888] = v77[v888](v13(v77, v888 + 1 + 0, v79[(1221 + 25) - (157 + 1086)]));
											v887 = 13 - 6;
										end
										if ((v887 == (39 - 30)) or (3815 <= 204)) then
											v79 = v67[v71];
											v77[v79[2 - 0]] = v77[v79[3]];
											v71 = v71 + (1 - 0);
											v79 = v67[v71];
											v77[v79[821 - (599 + 220)]] = v79[5 - 2];
											break;
										end
										if ((367 < 1923) and (v887 == (1934 - (1813 + (419 - 301))))) then
											v79 = v67[v71];
											v888 = v79[2 + 0];
											v77[v888] = v77[v888](v13(v77, v888 + 1, v79[1220 - (841 + 355 + 21)]));
											v71 = v71 + (1 - 0);
											v79 = v67[v71];
											v77[v79[1 + 1]] = v77[v79[8 - 5]];
											v71 = v71 + (860 - (464 + 395));
											v887 = 4;
										end
										if (v887 == 2) then
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[(3 + 2) - 3]] = v77[v79[2 + 1]][v79[841 - (467 + 370)]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[2]] = v77[v79[3]];
											v71 = v71 + 1;
											v887 = 3;
										end
									end
								end
							elseif ((2944 <= 3679) and (v80 <= 48)) then
								if (v80 > (97 - 50)) then
									local v320 = 0 - 0;
									local v321;
									local v322;
									local v323;
									local v324;
									local v325;
									local v326;
									while true do
										if (((80 - (22 + 54)) + 1) == v320) then
											v77[v326] = v325[v79[13 - 9]];
											v71 = v71 + (2 - 1) + 0;
											v79 = v67[v71];
											v77[v79[4 - 2]] = v61[v79[523 - ((377 - 227) + 370)]];
											v71 = v71 + (1283 - (74 + 1208));
											v79 = v67[v71];
											v77[v79[2]] = v79[3];
											v71 = v71 + (2 - 1);
											v320 = 28 - 22;
										end
										if (v320 == (6 + 2)) then
											v71 = v71 + (391 - (14 + 376));
											v79 = v67[v71];
											v326 = v79[3 - 1];
											v321 = v77[v326];
											for v1830 = v326 + 1 + 0, v72 do
												v7(v321, v77[v1830]);
											end
											break;
										end
										if (v320 == 4) then
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v77[v79[2]] = v62[v79[3 + 0]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v326 = v79[5 - 3];
											v325 = v77[v79[3 + 0 + 0]];
											v77[v326 + 1] = v325;
											v320 = 83 - (23 + 55);
										end
										if ((6 - 3) == v320) then
											v323, v324 = v70(v77[v326](v13(v77, v326 + 1, v79[3 + 0])));
											v72 = (v324 + v326) - (1 + 0);
											v322 = 0 - 0;
											for v1831 = v326, v72 do
												local v1832 = 0;
												while true do
													if (v1832 == (0 + 0)) then
														v322 = v322 + ((3525 - 2623) - (652 + 249));
														v77[v1831] = v323[v322];
														break;
													end
												end
											end
											v71 = v71 + (2 - (1535 - (553 + 981)));
											v79 = v67[v71];
											v326 = v79[1870 - (708 + 1160)];
											v77[v326] = v77[v326](v13(v77, v326 + 1, v72));
											v320 = 10 - 6;
										end
										if ((v320 == (1 - 0)) or (3995 < 771)) then
											v326 = v79[29 - (10 + 0 + 17)];
											v325 = v77[v79[1 + 2]];
											v77[v326 + (1733 - (1400 + 206 + 126))] = v325;
											v77[v326] = v325[v79[7 - 3]];
											v71 = v71 + (1909 - (242 + 1666));
											v79 = v67[v71];
											v77[v79[1 + 1]] = v61[v79[2 + 1]];
											v71 = v71 + 1 + 0;
											v320 = 2 + 0;
										end
										if (v320 == ((2784 - 1844) - (850 + 90))) then
											v321 = nil;
											v322 = nil;
											v323, v324 = nil;
											v325 = nil;
											v326 = nil;
											v77[v79[3 - 1]] = v62[v79[1393 - (360 + (1532 - 502))]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v320 = 2 - 1;
										end
										if (v320 == (7 - 1)) then
											v79 = v67[v71];
											v77[v79[1663 - (909 + 752)]] = v79[(3123 - (1320 + 577)) - (109 + 1114)];
											v71 = v71 + 1;
											v79 = v67[v71];
											v326 = v79[2];
											v323, v324 = v70(v77[v326](v13(v77, v326 + (1 - 0), v79[(851 - (667 + 182)) + 1])));
											v72 = (v324 + v326) - 1;
											v322 = 242 - (6 + 236);
											v320 = 5 + 2;
										end
										if ((6 + 1) == v320) then
											for v1833 = v326, v72 do
												local v1834 = 0 - 0;
												while true do
													if ((1345 <= 1927) and (v1834 == (0 - 0))) then
														v322 = v322 + 1;
														v77[v1833] = v323[v322];
														break;
													end
												end
											end
											v71 = v71 + 1;
											v79 = v67[v71];
											v326 = v79[1135 - (1076 + 57)];
											v323, v324 = v70(v77[v326](v13(v77, v326 + 1 + 0, v72)));
											v72 = (v324 + v326) - (690 - (579 + 110));
											v322 = 0 + 0;
											for v1835 = v326, v72 do
												v322 = v322 + 1 + 0;
												v77[v1835] = v323[v322];
											end
											v320 = 5 + 3;
										end
										if ((250 <= 2837) and ((409 - (174 + 233)) == v320)) then
											v79 = v67[v71];
											v77[v79[2]] = v79[3];
											v71 = v71 + ((1290 - (1115 + 173)) - 1);
											v79 = v67[v71];
											v77[v79[3 - 1]] = v79[2 + 1];
											v71 = v71 + (1175 - (663 + 511));
											v79 = v67[v71];
											v326 = v79[2 + (0 - 0)];
											v320 = 3 + 0;
										end
									end
								else
									local v327 = 1755 - (1375 + 380);
									local v328;
									local v329;
									local v330;
									local v331;
									while true do
										if (v327 == (1 + 1)) then
											for v1838 = v328, v72 do
												local v1839 = 0 + 0;
												while true do
													if ((0 - 0) == v1839) then
														v331 = v331 + 1;
														v77[v1838] = v329[v331];
														break;
													end
												end
											end
											break;
										end
										if (v327 == 1) then
											v72 = (v330 + v328) - 1;
											v331 = 0 + 0;
											v327 = 4 - 2;
										end
										if (v327 == (0 - 0)) then
											v328 = v79[2];
											v329, v330 = v70(v77[v328](v13(v77, v328 + 1 + 0, v79[5 - 2])));
											v327 = 1;
										end
									end
								end
							elseif (v80 <= (35 + 14)) then
								local v332 = 0;
								local v333;
								local v334;
								local v335;
								local v336;
								while true do
									if (v332 == (1 + 1)) then
										v79 = v67[v71];
										v77[v79[724 - (478 + 244)]] = v79[520 - (440 + 77)];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v332 = 29 - (12 + 14);
									end
									if (v332 == (14 - 10)) then
										for v1840 = v336, v72 do
											local v1841 = (3751 - 2195) - (655 + 901);
											while true do
												if ((0 == v1841) or (4038 == 4048)) then
													v333 = v333 + 1 + 0;
													v77[v1840] = v334[v333];
													break;
												end
											end
										end
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v336 = v79[2];
										v332 = 5;
									end
									if ((0 + 0) == v332) then
										v333 = nil;
										v334, v335 = nil;
										v336 = nil;
										v77[v79[7 - 5]] = v77[v79[1448 - (695 + 750)]];
										v332 = 1;
									end
									if (v332 == ((19 - 10) - 6)) then
										v336 = v79[2 - 0];
										v334, v335 = v70(v77[v336](v13(v77, v336 + (3 - (4 - 2)), v79[354 - (285 + 66)])));
										v72 = (v335 + v336) - (2 - (2 - 1));
										v333 = 0;
										v332 = 1314 - (682 + 628);
									end
									if (v332 == (1 + 4)) then
										v77[v336](v13(v77, v336 + 1, v72));
										break;
									end
									if ((1057 < 2569) and (v332 == (300 - ((271 - 95) + 123)))) then
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2 + 0]] = v79[3];
										v71 = v71 + 1;
										v332 = 2;
									end
								end
							elseif (v80 == (319 - (239 + 30))) then
								if (v77[v79[1 + 1]] < v79[4]) then
									v71 = v79[3 + 0];
								else
									v71 = v71 + (1 - 0);
								end
							else
								local v889;
								v77[v79[5 - 3]] = v77[v79[3]][v79[319 - (306 + 9)]];
								v71 = v71 + (3 - 2);
								v79 = v67[v71];
								v77[v79[2 - 0]] = v79[1 + 2];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2 + 0]] = v79[2 + 1];
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v77[v79[1377 - (1140 + 235)]] = v79[2 + 1];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v889 = v79[1 + (732 - (354 + 377))];
								v77[v889] = v77[v889](v13(v77, v889 + (53 - (33 + (89 - 70))), v79[2 + 1]));
							end
						elseif (v80 <= (167 - 111)) then
							if (v80 <= (24 + 29)) then
								if ((v80 > (101 - 49)) or (486 == 2061)) then
									v77[v79[2 + 0]] = v77[v79[692 - (586 + 103)]][v77[v79[1 + 3]]];
								else
									v77[v79[5 - 3]] = v77[v79[1491 - ((3518 - 2209) + 179)]] * v77[v79[6 - 2]];
								end
							elseif (v80 <= (24 + 30)) then
								local v340 = 0 - 0;
								local v341;
								while true do
									if (v340 == (2 + 0)) then
										v79 = v67[v71];
										v77[v79[3 - 1]] = v77[v79[5 - 2]][v79[613 - (295 + 314)]];
										v71 = v71 + (2 - 1);
										v340 = 1965 - (1300 + 662);
									end
									if ((v340 == (3 - 2)) or (1767 >= 4205)) then
										v79 = v67[v71];
										v77[v79[2]] = v61[v79[1758 - (1178 + 577)]];
										v71 = v71 + 1 + 0;
										v340 = 5 - 3;
									end
									if (v340 == (1411 - ((2833 - (263 + 1719)) + 554))) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2 + 0]] = v79[8 - (3 + 2)];
										v340 = 366 - (335 + 24);
									end
									if (v340 == (8 - 4)) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[304 - (115 + 187)]] = v61[v79[3 + 0]];
										v340 = 5;
									end
									if ((5 + 0) == v340) then
										v71 = v71 + (3 - 2);
										v79 = v67[v71];
										v77[v79[1163 - (160 + 1001)]] = v77[v79[3 + 0]][v79[3 + 1]];
										v340 = 11 - 5;
									end
									if (v340 == 7) then
										v71 = v71 + (359 - (237 + 121));
										v79 = v67[v71];
										v71 = v79[900 - ((1476 - (882 + 69)) + 372)];
										break;
									end
									if ((3962 == 3962) and (v340 == (4 - 1))) then
										v79 = v67[v71];
										v341 = v79[6 - 4];
										v77[v341](v77[v341 + 1]);
										v340 = 146 - (96 + 46);
									end
									if ((4772 > 2530) and (v340 == (777 - (643 + 134)))) then
										v341 = nil;
										v77[v79[1 + (1687 - (657 + 1029))]] = v77[v79[6 - 3]][v79[14 - 10]];
										v71 = v71 + (1201 - (685 + 515)) + 0;
										v340 = 1 - 0;
									end
								end
							elseif ((3615 < 3896) and (v80 == 55)) then
								local v900 = 0 - 0;
								local v901;
								local v902;
								local v903;
								while true do
									if (v900 == (724 - (316 + 403))) then
										v903 = v79[2 + 0];
										v902 = v77[v903];
										v901 = v77[v903 + (5 - 3)];
										if (v901 > 0) then
											if ((1079 <= 1564) and (v902 > v77[v903 + (1639 - (745 + 893))])) then
												v71 = v79[2 + 1];
											else
												v77[v903 + ((2 + 5) - 4)] = v902;
											end
										elseif (v902 < v77[v903 + 1]) then
											v71 = v79[3 + 0];
										else
											v77[v903 + 1 + 2] = v902;
										end
										break;
									end
									if ((1903 <= 4372) and (v900 == (774 - (274 + 498)))) then
										v77[v79[6 - 4]] = v77[v79[14 - 11]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[3 - 1]] = v79[1 + 2];
										v71 = v71 + 1;
										v79 = v67[v71];
										v900 = 5 - (1 + 1);
									end
									if ((v900 == (1 + 0)) or (4904 <= 4858)) then
										v77[v79[5 - 3]] = v61[v79[20 - (12 + 2 + 3)]];
										v71 = v71 + (3 - 2);
										v79 = v67[v71];
										v77[v79[1608 - (1035 + 571)]] = v77[v79[5 - 2]] % v77[v79[4]];
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v900 = 4 - 2;
									end
									if (v900 == (1 + 0 + 2)) then
										v77[v79[2]] = v79[1976 - (1656 + 317)];
										v71 = v71 + 1 + 0 + 0;
										v79 = v67[v71];
										v77[v79[2 + 0]] = v79[3];
										v71 = v71 + 1;
										v79 = v67[v71];
										v900 = 10 - 6;
									end
									if ((3206 <= 4872) and (v900 == (19 - 15))) then
										v77[v79[356 - (5 + 349)]] = v61[v79[14 - 11]];
										v71 = v71 + (1272 - (266 + (3688 - 2683)));
										v79 = v67[v71];
										v77[v79[2]] = v79[2 + 1];
										v71 = v71 + 1;
										v79 = v67[v71];
										v900 = 16 - 11;
									end
									if (v900 == (0 - 0)) then
										v901 = nil;
										v902 = nil;
										v903 = nil;
										v77[v79[2]] = v77[v79[1699 - (561 + 1135)]] % v77[v79[4]];
										v71 = v71 + ((2 - 1) - 0);
										v79 = v67[v71];
										v900 = 1;
									end
								end
							else
								v77[v79[6 - 4]] = v77[v79[1069 - (507 + 559)]];
							end
						elseif ((1843 == 1843) and (v80 <= (147 - 88))) then
							if (v80 <= (176 - 119)) then
								local v342 = 388 - (212 + 176);
								local v343;
								local v344;
								while true do
									if ((1333 > 510) and (v342 == (909 - (236 + 14 + 655)))) then
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v77[v79[2 - 0]] = v77[v79[2 + 1]][v79[5 - 1]];
										v342 = 1961 - ((5740 - 3871) + 87);
									end
									if (v342 == (10 - 7)) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[(2127 - (109 + 115)) - (484 + 1417)]] = v77[v79[6 - 3]][v79[6 - (1401 - (1047 + 352))]];
										v342 = 4;
									end
									if (v342 == (778 - (48 + 725))) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v344 = v79[1767 - (852 + 913)];
										v342 = 6;
									end
									if (v342 == (12 - 4)) then
										v77[v79[5 - 3]] = v77[v79[2 + 1]][v79[10 - 6]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v342 = 3 + 6;
									end
									if (7 == v342) then
										v77[v79[855 - (152 + 701)]] = v61[v79[1314 - (430 + 881)]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v342 = 4 + 4;
									end
									if (((649 + 246) - (557 + 338)) == v342) then
										v343 = nil;
										v344 = nil;
										v344 = v79[1 + 1];
										v342 = 2 - 1;
									end
									if (v342 == 2) then
										v71 = v71 + (3 - 2);
										v79 = v67[v71];
										v77[v79[1347 - (384 + 961)]] = v61[v79[7 - 4]];
										v342 = 3;
									end
									if (v342 == 1) then
										v343 = v77[v79[6 - 3]];
										v77[v344 + (802 - (499 + 302))] = v343;
										v77[v344] = v343[v79[4]];
										v342 = (2035 - 1167) - (39 + 827);
									end
									if (v342 == (16 - 10)) then
										v77[v344] = v77[v344](v13(v77, v344 + 1, v79[6 - (8 - 5)]));
										v71 = v71 + (3 - 2);
										v79 = v67[v71];
										v342 = 10 - 3;
									end
									if (v342 == (1 + 8)) then
										if (v77[v79[5 - 3]] <= v77[v79[1 + 3]]) then
											v71 = v71 + (1 - 0);
										else
											v71 = v79[(391 - 284) - (103 + 1)];
										end
										break;
									end
								end
							elseif (v80 == (612 - (475 + 79))) then
								v77[v79[4 - (594 - (591 + 1))]] = v77[v79[3]] - v79[12 - (2 + 6)];
							else
								local v907 = 0;
								local v908;
								while true do
									if (v907 == (1 + 1)) then
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[1505 - (1395 + 108)]] = v79[(1478 - (218 + 1252)) - 5];
										v71 = v71 + ((925 + 280) - (7 + 1197));
										v907 = 3;
									end
									if ((2 + 2) == v907) then
										v79 = v67[v71];
										v71 = v79[3];
										break;
									end
									if (v907 == (0 + 0)) then
										v908 = nil;
										v77[v79[321 - (27 + 292)]]();
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v907 = 1 - 0;
									end
									if (v907 == (12 - 9)) then
										v79 = v67[v71];
										v908 = v79[3 - 1];
										v77[v908](v77[v908 + (1 - 0)]);
										v71 = v71 + (140 - (43 + 96));
										v907 = 16 - 12;
									end
									if (v907 == (1 - 0)) then
										v77[v79[2 + 0]] = v62[v79[1 + 2]];
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v77[v79[1 + 1]] = v77[v79[(361 - (321 + 35)) - 2]][v79[4]];
										v907 = (395 - (239 + 155)) + 1 + 0;
									end
								end
							end
						elseif (v80 <= (5 + 55)) then
							if (v77[v79[1753 - ((1456 - (41 + 1)) + 337)]] == v77[v79[4]]) then
								v71 = v71 + 1;
							else
								v71 = v79[3];
							end
						elseif ((1452 > 1003) and (v80 > 61)) then
							v77[v79[1942 - (1642 + 298)]] = v61[v79[7 - 4]];
						else
							v77[v79[2]] = v79[8 - 5] * v77[v79[11 - (207 - (80 + 120))]];
						end
					elseif (v80 <= 72) then
						if (v80 <= (56 + 11)) then
							if ((832 == 832) and (v80 <= (22 + 42))) then
								if ((1741 > 400) and (v80 == (50 + 13))) then
									v77[v79[974 - ((674 - 317) + 615)]] = v77[v79[3 + 0]] + v77[v79[4]];
								else
									local v346;
									local v347, v348;
									local v349;
									local v350;
									v77[v79[2]] = v77[v79[6 - (1 + 2)]][v79[4 + 0 + 0]];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[2 + 0]] = v79[1 + 2];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v350 = v79[9 - 7];
									v77[v350](v77[v350 + (1302 - (384 + 917))]);
									v71 = v71 + (698 - (128 + 569));
									v79 = v67[v71];
									v77[v79[1545 - (1407 + 136)]] = v62[v79[3]];
									v71 = v71 + (1888 - (687 + 1200));
									v79 = v67[v71];
									v77[v79[1712 - (556 + 1154)]] = v62[v79[10 - 7]];
									v71 = v71 + (96 - (9 + 86));
									v79 = v67[v71];
									v350 = v79[423 - (275 + 146)];
									v349 = v77[v79[1 + 2]];
									v77[v350 + (65 - (29 + (76 - 41)))] = v349;
									v77[v350] = v349[v79[4]];
									v71 = v71 + (4 - 3);
									v79 = v67[v71];
									v77[v79[5 - 3]] = v61[v79[13 - 10]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[1014 - (53 + 959)]] = v79[411 - ((1321 - 1009) + 96)];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v77[v79[(479 - 192) - (147 + 138)]] = v79[902 - (813 + 40 + 46)];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v350 = v79[2];
									v347, v348 = v70(v77[v350](v13(v77, v350 + 1, v79[4 - 1])));
									v72 = (v348 + v350) - (493 - (18 + 474));
									v346 = 0 + 0;
									for v746 = v350, v72 do
										local v747 = (0 + 0) - 0;
										while true do
											if (v747 == (1086 - (860 + 226))) then
												v346 = v346 + (304 - (121 + 182));
												v77[v746] = v347[v346];
												break;
											end
										end
									end
									v71 = v71 + 1;
									v79 = v67[v71];
									v350 = v79[1 + 1];
									v347, v348 = v70(v77[v350](v13(v77, v350 + (1241 - (19 + 969 + 252)), v72)));
									v72 = (v348 + v350) - (1 + 0);
									v346 = 0 + 0;
									for v748 = v350, v72 do
										local v749 = 0;
										while true do
											if (((1970 - (49 + 1921)) == v749) or (747 == 3711)) then
												v346 = v346 + 1;
												v77[v748] = v347[v346];
												break;
											end
										end
									end
									v71 = v71 + 1;
									v79 = v67[v71];
									v350 = v79[2];
									v77[v350] = v77[v350](v13(v77, v350 + 1, v72));
									v71 = v71 + (891 - (223 + 667));
									v79 = v67[v71];
									v350 = v79[54 - (51 + 1)];
									v77[v350] = v77[v350]();
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v77[v79[3 - (1227 - (165 + 1061))]] = v77[v79[1128 - (131 + 15 + 979)]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[607 - (250 + 61 + 294)]] = v79[8 - 5];
									v71 = v71 + 1;
									v79 = v67[v71];
									v71 = v79[2 + 1];
								end
							elseif ((4552 == 4552) and (v80 <= (1508 - (496 + 947)))) then
								local v380;
								local v381;
								v381 = v79[1360 - (1233 + 125)];
								v77[v381] = v77[v381](v13(v77, v381 + 1 + (1643 - (596 + 1047)), v79[3]));
								v71 = v71 + 1 + 0 + 0;
								v79 = v67[v71];
								v77[v79[1 + 1]] = v62[v79[1648 - (963 + 682)]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v381 = v79[1506 - (504 + 1000)];
								v380 = v77[v79[3 + 0]];
								v77[v381 + 1 + 0] = v380;
								v77[v381] = v380[v79[4]];
								v71 = v71 + 1 + 0 + 0;
								v79 = v67[v71];
								v77[v79[2]] = v77[v79[3]];
								v71 = v71 + (1 - (0 - 0));
								v79 = v67[v71];
								v77[v79[2 + 0]] = v79[3];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2]] = v79[185 - (156 + 26)];
								v71 = v71 + 1;
								v79 = v67[v71];
								v381 = v79[2 + 0];
								v77[v381] = v77[v381](v13(v77, v381 + (1 - 0), v79[3]));
								v71 = v71 + (165 - (80 + 69 + 15));
								v79 = v67[v71];
								v77[v79[962 - (890 + (807 - (185 + 552)))]] = v79[3] ~= (117 - (39 + 78));
							elseif (v80 > 66) then
								v77[v79[484 - (14 + 468)]] = v79[6 - 3];
							else
								local v915 = 0 - 0;
								local v916;
								local v917;
								local v918;
								local v919;
								while true do
									if ((0 + 0) == v915) then
										v916 = nil;
										v917, v918 = nil;
										v919 = nil;
										v77[v79[2]] = v77[v79[2 + 0 + 1]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2]] = v61[v79[2 + 1]];
										v71 = v71 + 1 + 0;
										v915 = 1 - 0;
									end
									if ((3723 > 238) and (v915 == 11)) then
										v79 = v67[v71];
										v919 = v79[2 + 0];
										v917, v918 = v70(v77[v919](v77[v919 + (3 - 2)]));
										v72 = (v918 + v919) - (1 + 0);
										v916 = 51 - (12 + 39);
										for v2783 = v919, v72 do
											local v2784 = 0;
											while true do
												if (v2784 == (0 + 0)) then
													v916 = v916 + (2 - 1);
													v77[v2783] = v917[v916];
													break;
												end
											end
										end
										v71 = v71 + (3 - (603 - (507 + 94)));
										v79 = v67[v71];
										v915 = 4 + 8;
									end
									if (v915 == ((13 - 10) + 2)) then
										v79 = v67[v71];
										v77[v79[4 - 2]] = v61[v79[2 + 1]];
										v71 = v71 + (4 - 3);
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]];
										v71 = v71 + (1711 - (1596 + 114));
										v79 = v67[v71];
										v77[v79[(2 + 2) - 2]] = #v77[v79[716 - (164 + 549)]];
										v915 = 1444 - (1059 + 379);
									end
									if ((3 - 0) == v915) then
										v77[v79[2 + 0]] = v77[v79[3]] + v79[1 + 3];
										v71 = v71 + ((653 - 260) - (145 + 247));
										v79 = v67[v71];
										v919 = v79[2 + 0];
										v917, v918 = v70(v77[v919](v13(v77, v919 + 1, v79[2 + 1])));
										v72 = (v918 + v919) - (2 - 1);
										v916 = 0 + 0;
										for v2785 = v919, v72 do
											v916 = v916 + 1 + 0;
											v77[v2785] = v917[v916];
										end
										v915 = 6 - 2;
									end
									if ((6 == v915) or (4666 < 399)) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[722 - (254 + (2203 - (569 + 1168)))]] = v77[v79[563 - (544 + 16)]] % v77[v79[12 - 8]];
										v71 = v71 + (629 - (294 + 334));
										v79 = v67[v71];
										v77[v79[2]] = v79[256 - (236 + 17)] + v77[v79[(3 - 1) + 2]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v915 = (11 - 5) + 1;
									end
									if (v915 == 1) then
										v79 = v67[v71];
										v77[v79[7 - 5]] = v61[v79[(365 - (118 + 233)) - 11]];
										v71 = v71 + 1 + (344 - (279 + 65));
										v79 = v67[v71];
										v77[v79[2 + (0 - 0)]] = v61[v79[797 - (413 + 381)]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[3 - 1]] = v61[v79[3]];
										v915 = 2;
									end
									if ((2920 >= 2628) and ((17 - 10) == v915)) then
										v77[v79[1972 - (582 + 1388)]] = #v77[v79[4 - 1]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[367 - (326 + 38)]] % v77[v79[11 - (12 - 5)]];
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v77[v79[622 - (47 + 573)]] = v79[2 + 1] + v77[v79[16 - 12]];
										v71 = v71 + (1 - 0);
										v915 = 8;
									end
									if (v915 == (1666 - ((2590 - 1321) + 395))) then
										v71 = v71 + (493 - (76 + 416));
										v79 = v67[v71];
										v77[v79[445 - ((892 - 573) + 124)]] = v77[v79[6 - 3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[1010 - (564 + 443)]];
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v915 = 461 - (337 + (1939 - (1414 + 404)));
									end
									if (v915 == 10) then
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v919 = v79[6 - (760 - (347 + 409))];
										v77[v919] = v77[v919](v13(v77, v919 + (1912 - (1261 + 650)), v72));
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3 - 0]] % v79[1821 - (772 + 1045)];
										v71 = v71 + 1;
										v915 = 11;
									end
									if (v915 == 12) then
										v919 = v79[1 + 1];
										v77[v919](v13(v77, v919 + (145 - (61 + 41 + 42)), v72));
										break;
									end
									if (v915 == (1852 - (1520 + 4 + 320))) then
										v79 = v67[v71];
										v77[v79[1272 - (1049 + 221)]] = v77[v79[159 - (18 + 138)]] + v79[9 - 5];
										v71 = v71 + 1;
										v79 = v67[v71];
										v919 = v79[1104 - (67 + 1035)];
										v917, v918 = v70(v77[v919](v13(v77, v919 + ((189 + 160) - (41 + 95 + 212)), v79[(1590 - (420 + 1158)) - 9])));
										v72 = (v918 + v919) - (1 + 0);
										v916 = 0;
										v915 = (21 - 12) + 0;
									end
									if ((245 < 2021) and (v915 == (1613 - (240 + 1364)))) then
										for v2788 = v919, v72 do
											local v2789 = 1082 - (1050 + 32);
											while true do
												if ((v2789 == ((611 - (406 + 205)) - 0)) or (4200 <= 2719)) then
													v916 = v916 + 1 + 0;
													v77[v2788] = v917[v916];
													break;
												end
											end
										end
										v71 = v71 + (1056 - ((1126 - 795) + 724));
										v79 = v67[v71];
										v919 = v79[1 + 1];
										v917, v918 = v70(v77[v919](v13(v77, v919 + (645 - (269 + 375)), v72)));
										v72 = (v918 + v919) - (726 - (267 + 458));
										v916 = 0 + 0;
										for v2790 = v919, v72 do
											v916 = v916 + 1 + 0;
											v77[v2790] = v917[v916];
										end
										v915 = 19 - 9;
									end
									if (4 == v915) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v919 = v79[2 + 0];
										v77[v919] = v77[v919](v13(v77, v919 + (819 - (667 + 151)), v72));
										v71 = v71 + (1498 - (1410 + 87));
										v79 = v67[v71];
										v77[v79[1899 - (1504 + 393)]] = v61[v79[8 - 5]];
										v71 = v71 + (2 - 1);
										v915 = 12 - 7;
									end
								end
							end
						elseif ((2498 > 1827) and (v80 <= (865 - (461 + 335)))) then
							if (v80 > ((70 - (28 + 33)) + 59)) then
								local v398;
								local v399;
								v77[v79[1763 - (184 + 1546 + 31)]] = v77[v79[1670 - (728 + 939)]][v79[4]];
								v71 = v71 + (3 - 2);
								v79 = v67[v71];
								v399 = v79[3 - 1];
								v77[v399] = v77[v399]();
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v77[v79[2]][v79[1071 - (138 + (1937 - (858 + 149)))]] = v77[v79[4 + 0]];
								v71 = v71 + 1 + 0 + 0;
								v79 = v67[v71];
								v399 = v79[2 + (0 - 0)];
								v398 = v77[v79[12 - 9]];
								v77[v399 + (1767 - (459 + 1307))] = v398;
								v77[v399] = v398[v79[(3381 - (829 + 678)) - (474 + 1022 + 374)]];
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v77[v79[2]] = v79[3 + 0];
								v71 = v71 + 1;
								v79 = v67[v71];
								v399 = v79[(1217 - (143 + 1073)) + 1];
								v77[v399](v13(v77, v399 + (2 - 1), v79[1 + 2]));
								v71 = v71 + (3 - (1817 - (898 + 917)));
								v79 = v67[v71];
								v77[v79[8 - (11 - 5)]] = v79[594 - (562 + 29)];
								v71 = v71 + 1;
								v79 = v67[v71];
								v71 = v79[3 + 0];
							else
								v77[v79[1421 - (374 + 1045)]] = -v77[v79[3 + 0]];
							end
						elseif (v80 <= (217 - 147)) then
							local v417;
							local v418;
							local v419;
							v419 = v79[2];
							v418 = v77[v79[(305 + 336) - ((1917 - (882 + 587)) + 190)]];
							v77[v419 + 1 + 0] = v418;
							v77[v419] = v418[v79[4]];
							v71 = v71 + 1;
							v79 = v67[v71];
							v77[v79[1 + 1]] = v79[2 + 1];
							v71 = v71 + (3 - 2);
							v79 = v67[v71];
							v77[v79[5 - 3]] = v62[v79[3 + 0]];
							v71 = v71 + (1495 - (1307 + 187));
							v79 = v67[v71];
							v77[v79[1 + 1]] = v77[v79[11 - 8]][v79[8 - 4]];
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v77[v79[685 - (232 + (715 - (140 + 124)))]] = v61[v79[3 + 0]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[566 - (510 + 51 + 3)]] = v77[v79[5 - 2]][v79[40 - (13 + 23)]];
							v71 = v71 + (1 - 0);
							v79 = v67[v71];
							v77[v79[2 - (1535 - (1105 + 430))]] = v77[v79[4 - (2 - 1)]][v79[1092 - (830 + 258)]];
							v71 = v71 + (3 - 2);
							v79 = v67[v71];
							v77[v79[2 + 0]] = v77[v79[3 + 0]];
							v71 = v71 + (3 - 2);
							v79 = v67[v71];
							v419 = v79[1443 - (860 + 581)];
							v77[v419] = v77[v419](v13(v77, v419 + (3 - 2), v79[3 + 0]));
							v71 = v71 + (242 - (237 + 4));
							v79 = v67[v71];
							v77[v79[(8 - 4) - 2]] = {};
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v77[v79[2]] = v61[v79[5 - 2]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[2 + 0]] = v77[v79[11 - 8]][v79[2 + 2]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[2]][v77[v79[1429 - (85 + 1341)]]] = v77[v79[6 - 2]];
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v77[v79[2]] = {};
							v71 = v71 + (373 - (45 + 327));
							v79 = v67[v71];
							v77[v79[3 - 1]] = v77[v79[3]][v79[506 - (444 + 58)]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[3 - 1]] = v77[v79[3]][v79[1 + 3]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v419 = v79[5 - 3];
							v417 = v77[v419];
							v418 = v79[1735 - (64 + 1668)];
							for v750 = 1974 - (1227 + 746), v418 do
								v417[v750] = v77[v419 + v750];
							end
						elseif (v80 == (218 - 147)) then
							local v920 = 0 - 0;
							local v921;
							while true do
								if ((494 - (321 + 94 + 79)) == v920) then
									v921 = v79[1 + 1];
									v77[v921](v13(v77, v921 + (492 - (142 + 349)), v79[2 + 1]));
									break;
								end
							end
						else
							local v922;
							v77[v79[2]] = v62[v79[3 - 0]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v922 = v79[2 + 0 + 0];
							v77[v922] = v77[v922]();
							v71 = v71 + 1;
							v79 = v67[v71];
							v77[v79[5 - 3]][v79[1867 - (1050 + 660 + 154)]] = v79[322 - (200 + 118)];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[1 + 1]] = v62[v79[5 - (1993 - (1047 + 944))]];
							v71 = v71 + (1 - 0);
							v79 = v67[v71];
							v922 = v79[2 + 0];
							v77[v922] = v77[v922]();
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[2 + 0]][v79[3]] = v79[1 + 3];
							v71 = v71 + (2 - (1303 - (206 + 1096)));
							v79 = v67[v71];
							v77[v79[(1446 - (30 + 164)) - (363 + 887)]] = {};
							v71 = v71 + 1;
							v79 = v67[v71];
							v77[v79[2 - 0]] = v77[v79[14 - (49 - 38)]];
							v71 = v71 + 1;
							v79 = v67[v71];
							v77[v79[2]] = v79[3];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[1 + 1]] = v79[6 - 3];
						end
					elseif ((v80 <= 77) or (2684 <= 2621)) then
						if ((1547 <= 4537) and (v80 <= 74)) then
							if (v80 > 73) then
								local v451 = 0 + (1474 - (1383 + 91));
								local v452;
								local v453;
								while true do
									if (v451 == (1664 - (674 + 990))) then
										v452 = v79[1 + 1];
										v453 = v77[v452];
										v451 = 1 + 0;
									end
									if (v451 == (1 - 0)) then
										for v1847 = v452 + 1, v72 do
											v7(v453, v77[v1847]);
										end
										break;
									end
								end
							else
								local v454;
								v77[v79[2]][v77[v79[3]]] = v79[1059 - ((1964 - 1457) + 548)];
								v71 = v71 + (838 - ((572 - 283) + 548));
								v79 = v67[v71];
								v77[v79[1820 - (821 + 997)]] = v77[v79[1663 - (1174 + 486)]];
								v71 = v71 + (256 - (195 + 60));
								v79 = v67[v71];
								v77[v79[1 + 1]] = v79[1504 - (251 + (1677 - (172 + 255)))];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[5 - 3]] = v79[(9 - 6) + 0];
								v71 = v71 + 1;
								v79 = v67[v71];
								v454 = v79[1034 - (809 + 223)];
								v77[v454] = v77[v454](v13(v77, v454 + ((2 - 1) - (1528 - (594 + 934))), v79[8 - 5]));
								v71 = v71 + (3 - 2);
								v79 = v67[v71];
								v77[v79[2 + 0]][v77[v79[2 + 1]]] = v79[621 - (14 + 603)];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[131 - (118 + 11)]] = v77[v79[1 + 2]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[5 - 3]] = v79[571 - (211 + 357)];
								v71 = v71 + (950 - (551 + 398));
								v79 = v67[v71];
								v77[v79[2 + 0 + 0]] = v79[2 + 1];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v454 = v79[2];
								v77[v454] = v77[v454](v13(v77, v454 + 1 + 0, v79[4 - 1]));
							end
						elseif (v80 <= (278 - 203)) then
							v77[v79[4 - 2]][v79[1 + 2]] = v77[v79[15 - 11]];
						elseif (v80 == (21 + 55)) then
							local v940 = 0;
							while true do
								if ((v940 == ((63 + 28) - (40 + 49))) or (2812 <= 2739)) then
									v77[v79[7 - 5]] = v77[v79[493 - (99 + 391)]][v79[4 + 0]];
									v71 = v71 + (4 - 3);
									v79 = v67[v71];
									v940 = 7 - 4;
								end
								if ((3 + 0) == v940) then
									v77[v79[5 - 3]] = v77[v79[1607 - (1032 + 572)]][v79[421 - (203 + 214)]];
									v71 = v71 + (1818 - (568 + 1249));
									v79 = v67[v71];
									v940 = 4 + 0;
								end
								if (v940 == (2 - 1)) then
									v77[v79[7 - 5]] = v77[v79[1309 - (913 + 393)]][v79[11 - 7]];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v940 = 412 - (269 + 141);
								end
								if (v940 == 0) then
									v77[v79[4 - 2]] = v61[v79[3]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v940 = 1415 - (159 + 1255);
								end
								if (v940 == (1986 - (362 + 1619))) then
									v71 = v79[1628 - (950 + 675)];
									break;
								end
								if (v940 == (2 + 2 + 0)) then
									v77[v79[1181 - (216 + 963)]] = v79[1290 - (485 + 802)];
									v71 = v71 + (560 - (432 + 127));
									v79 = v67[v71];
									v940 = 5;
								end
							end
						elseif ((9 <= 1022) and (v79[2] < v77[v79[781 - (24 + 753)]])) then
							v71 = v79[1076 - (1065 + 8)];
						else
							v71 = v71 + 1 + 0;
						end
					elseif ((v80 <= (1681 - (307 + 328 + 966))) or (4733 <= 2436)) then
						if (v80 <= (57 + (26 - 5))) then
							v71 = v79[3];
						elseif (v80 == (121 - (5 + 37))) then
							local v941;
							local v942, v943;
							local v944;
							local v945;
							v945 = v79[2];
							v944 = v77[v79[7 - 4]];
							v77[v945 + 1 + 0] = v944;
							v77[v945] = v944[v79[5 - 1]];
							v71 = v71 + 1 + (1132 - (898 + 234));
							v79 = v67[v71];
							v77[v79[2]] = v61[v79[5 - (537 - (333 + 202))]];
							v71 = v71 + (3 - 2);
							v79 = v67[v71];
							v77[v79[3 - 1]] = v79[7 - 4];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[531 - (318 + 211)]] = v79[14 - 11];
							v71 = v71 + (1588 - (963 + 624));
							v79 = v67[v71];
							v945 = v79[1 + 1];
							v942, v943 = v70(v77[v945](v13(v77, v945 + ((367 + 480) - (518 + 328)), v79[2 + 1])));
							v72 = (v943 + v945) - ((3 - 1) - 1);
							v941 = 0 - 0;
							for v1455 = v945, v72 do
								v941 = v941 + ((1597 - (1018 + 261)) - ((765 - 464) + 16));
								v77[v1455] = v942[v941];
							end
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v945 = v79[2];
							v77[v945] = v77[v945](v13(v77, v945 + (2 - 1), v72));
							v71 = v71 + ((133 - (93 + 38)) - 1);
							v79 = v67[v71];
							v77[v79[2]] = v61[v79[3 + 0]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[2 + 0]] = v77[v79[5 - 2]][v79[3 + 1 + 0]];
							v71 = v71 + 1;
							v79 = v67[v71];
							if (v77[v79[1 + 1 + 0]] ~= v77[v79[4]]) then
								v71 = v71 + 1 + 0;
							else
								v71 = v79[(20 - 11) - 6];
							end
						else
							local v962 = 0 + 0;
							local v963;
							local v964;
							while true do
								if (v962 == ((3823 - 2797) - (829 + 190))) then
									v77[v79[7 - (14 - 9)]] = v79[3] ~= (0 - 0);
									break;
								end
								if ((v962 == 3) or (228 >= 475)) then
									v77[v964] = v963[v79[5 - 1]];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[1 + 1]] = v77[v79[3]];
									v962 = 2 + 2;
								end
								if (((5 - 3) == v962) or (2197 < 754)) then
									v79 = v67[v71];
									v964 = v79[2 + 0];
									v963 = v77[v79[(2901 - 2285) - ((1123 - 603) + 93)]];
									v77[v964 + (277 - (259 + 17))] = v963;
									v962 = 1 + 2;
								end
								if (v962 == (1 + 0)) then
									v71 = v71 + (3 - 2);
									v79 = v67[v71];
									v77[v79[(124 + 469) - (396 + (283 - 88))]] = v62[v79[8 - 5]];
									v71 = v71 + 1 + 0;
									v962 = 1763 - (440 + 1321);
								end
								if (v962 == (1829 - (1059 + 770))) then
									v963 = nil;
									v964 = nil;
									v964 = v79[422 - (14 + 406)];
									v77[v964] = v77[v964](v13(v77, v964 + (4 - 3), v79[548 - (424 + 121)]));
									v962 = 1 + 0;
								end
								if ((1352 - (641 + 706)) == v962) then
									v79 = v67[v71];
									v77[v79[1 + 1]] = v79[443 - (249 + 191)];
									v71 = v71 + (4 - 3);
									v79 = v67[v71];
									v962 = 3 + 3;
								end
								if ((v962 == 6) or (4074 > 4451)) then
									v964 = v79[7 - 5];
									v77[v964] = v77[v964](v13(v77, v964 + ((852 - 424) - ((664 - 481) + 244)), v79[1 + 2]));
									v71 = v71 + (1631 - (20 + 1610));
									v79 = v67[v71];
									v962 = 737 - (434 + 296);
								end
								if (v962 == (12 - 8)) then
									v71 = v71 + (513 - (169 + 343));
									v79 = v67[v71];
									v77[v79[2]] = v79[3 + 0];
									v71 = v71 + 1;
									v962 = 8 - 3;
								end
							end
						end
					elseif (v80 <= (237 - 156)) then
						local v477 = v79[2];
						local v478 = v77[v477 + 2 + 0];
						local v479 = v77[v477] + v478;
						v77[v477] = v479;
						if (v478 > ((0 + 0) - 0)) then
							if ((1611 == 1611) and (v479 <= v77[v477 + 1])) then
								v71 = v79[1126 - (651 + 472)];
								v77[v477 + 3 + 0] = v479;
							end
						elseif (v479 >= v77[v477 + (2 - 1) + (0 - 0)]) then
							local v1852 = (517 - (243 + 274)) - 0;
							while true do
								if ((562 < 4641) and (v1852 == (483 - (397 + 86)))) then
									v71 = v79[879 - (423 + 453)];
									v77[v477 + 1 + 2] = v479;
									break;
								end
							end
						end
					elseif ((v80 > 82) or (4513 < 3045)) then
						for v1458 = v79[1 + 1], v79[3 + (1622 - (1437 + 185))] do
							v77[v1458] = nil;
						end
					else
						local v965 = 0 + 0;
						local v966;
						local v967;
						local v968;
						local v969;
						local v970;
						while true do
							if ((v965 == (2 + 0)) or (1511 > 2427)) then
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[1192 - (50 + 1140)]] = v61[v79[3 + (0 - 0)]];
								v71 = v71 + 1 + 0 + 0;
								v79 = v67[v71];
								v970 = v79[1 + 1];
								v965 = 3 - 0;
							end
							if (((19 - 14) + 1) == v965) then
								for v2793 = v970, v72 do
									v967 = v967 + (597 - (157 + 439));
									v77[v2793] = v966[v967];
								end
								v71 = v71 + (1 - (0 + 0));
								v79 = v67[v71];
								v970 = v79[6 - 4];
								v77[v970] = v77[v970](v13(v77, v970 + 1, v72));
								v71 = v71 + 1;
								v965 = 7;
							end
							if ((0 - 0) == v965) then
								v966 = nil;
								v967 = nil;
								v966, v968 = nil;
								v969 = nil;
								v970 = nil;
								v77[v79[920 - (782 + 2 + 134)]] = v62[v79[3]];
								v965 = 856 - (112 + 743);
							end
							if (v965 == 7) then
								v79 = v67[v71];
								v970 = v79[(1989 - (326 + 490)) - (718 + 308 + (348 - (181 + 22)))];
								v969 = v77[v79[1 + 2]];
								v77[v970 + (719 - (493 + 225))] = v969;
								v77[v970] = v969[v79[14 - 10]];
								v71 = v71 + 1 + (75 - (35 + 40));
								v965 = 21 - 13;
							end
							if (v965 == (1 + (11 - 8))) then
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v77[v79[1 + (1 - 0)]] = v79[4 - 1];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v79[1598 - (210 + 1385)];
								v965 = 1694 - (1201 + 488);
							end
							if (v965 == (6 + 3)) then
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v970 = v79[2 - 0];
								v966 = {v77[v970](v13(v77, v970 + (2 - 1), v72))};
								v967 = 0;
								for v2796 = v970, v79[4] do
									v967 = v967 + 1 + 0 + 0;
									v77[v2796] = v966[v967];
								end
								v965 = 28 - 18;
							end
							if ((584 - (489 + 85)) == v965) then
								v71 = v71 + (1502 - (277 + 1224));
								v79 = v67[v71];
								v71 = v79[1496 - (663 + 830)];
								break;
							end
							if (v965 == 3) then
								v969 = v77[v79[3 + 0]];
								v77[v970 + (2 - 1)] = v969;
								v77[v970] = v969[v79[879 - (461 + 414)]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[1 + 1]] = v61[v79[3]];
								v965 = 1 + 3;
							end
							if (((5 + 0) == v965) or (5 > 1784)) then
								v71 = v71 + (251 - (172 + 78));
								v79 = v67[v71];
								v970 = v79[2];
								v966, v968 = v70(v77[v970](v13(v77, v970 + (1 - (878 - (297 + 581))), v79[2 + 1])));
								v72 = (v968 + v970) - (1 - 0);
								v967 = 0;
								v965 = 2 + 4;
							end
							if (v965 == (1 + 2 + 5)) then
								v79 = v67[v71];
								v970 = v79[2 - 0];
								v966, v968 = v70(v77[v970](v77[v970 + (1 - 0)]));
								v72 = (v968 + v970) - (3 - 2);
								v967 = 0 - 0;
								for v2799 = v970, v72 do
									local v2800 = 0;
									while true do
										if ((v2800 == (0 + 0)) or (3220 >= 3909)) then
											v967 = v967 + 1 + 0;
											v77[v2799] = v966[v967];
											break;
										end
									end
								end
								v965 = 4 + 5;
							end
							if (v965 == (3 - 2)) then
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[(15 - 11) - 2]] = v77[v79[1 + 2]][v79[3 + 1]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[449 - (133 + 314)]] = v62[v79[1 + 2]];
								v965 = 215 - (199 + 14);
							end
						end
					end
				elseif (v80 <= (447 - 322)) then
					if (v80 <= (1653 - (647 + 902))) then
						if (v80 <= ((1236 - 957) - 186)) then
							if (v80 <= (321 - (85 + 148))) then
								if (v80 <= ((3111 - (1505 + 232)) - (426 + 863))) then
									if (v80 > (393 - 309)) then
										local v481 = 1654 - (873 + 781);
										while true do
											if ((1752 <= 3992) and (v481 == 1)) then
												v71 = v71 + 1;
												v79 = v67[v71];
												v77[v79[2]][v79[3]] = v79[4 - 0];
												v71 = v71 + ((1320 - (415 + 903)) - (2 - 1));
												v481 = 1 + 1;
											end
											if (v481 == (11 - 8)) then
												v71 = v79[3 - 0];
												break;
											end
											if (v481 == (0 - 0)) then
												v77[v79[2]][v79[1950 - (414 + 1533)]] = v79[4 + 0];
												v71 = v71 + (556 - (443 + (180 - 68)));
												v79 = v67[v71];
												v77[v79[1481 - (888 + 591)]] = v61[v79[7 - 4]];
												v481 = 1 + 0;
											end
											if ((v481 == (7 - 5)) or (86 > 2873)) then
												v79 = v67[v71];
												v77[v79[1 + 1]] = v79[3];
												v71 = v71 + 1;
												v79 = v67[v71];
												v481 = 720 - (155 + 562);
											end
										end
									else
										local v482;
										local v483;
										v77[v79[1 + 1]] = v77[v79[1 + 0 + 2]][v79[7 - 3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[3 - 1]] = v77[v79[1681 - (136 + 1542)]][v79[(129 - (71 + 46)) - 8]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2 - 0]] = v61[v79[3]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[489 - ((105 - 37) + 418)]][v79[(695 - (436 + 249)) - 6]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[3 - 1]] = v77[v79[3 + 0]][v79[1096 - (770 + 322)]];
										v71 = v71 + (1622 - (56 + 1565)) + 0;
										v79 = v67[v71];
										v77[v79[1 + 1]] = v77[v79[1 + 0 + 2]] - v77[v79[5 - 1]];
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v77[v79[5 - 3]] = v77[v79[10 - (991 - (80 + 904))]][v79[4]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2 - 0]] = v61[v79[2 + 1]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v483 = v79[2 + 0];
										v482 = v77[v79[1 + 2]];
										v77[v483 + (3 - (802 - (595 + 205)))] = v482;
										v77[v483] = v482[v79[4 - 0]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[1 + 1]] = v77[v79[13 - 10]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v483 = v79[6 - 4];
										v77[v483] = v77[v483](v13(v77, v483 + 1 + 0, v79[14 - 11]));
										v71 = v71 + (832 - (762 + 69));
										v79 = v67[v71];
										v77[v79[6 - 4]] = v77[v79[3 + 0]] - v79[4];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[4 - 2]] = v77[v79[3]] * v77[v79[2 + 2]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[11 - 8]] + v77[v79[161 - (8 + 149)]];
									end
								elseif (v80 <= (1406 - (1199 + 121))) then
									local v506 = 0 - 0;
									local v507;
									while true do
										if ((v506 == (0 - 0)) or (4938 <= 3183)) then
											v507 = v79[(2 - 1) + (2 - 1)];
											v77[v507](v77[v507 + (3 - 2)]);
											break;
										end
									end
								elseif (v80 > 87) then
									local v971 = 0;
									while true do
										if ((2193 == 2193) and (v971 == (11 - 6))) then
											v71 = v79[3 + 0 + 0];
											break;
										end
										if (v971 == ((733 + 1075) - (518 + 1289))) then
											v77[v79[2]] = v77[v79[3]][v79[6 - 2]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v971 = 2 - 0;
										end
										if ((v971 == (0 + 0)) or (2001 <= 373)) then
											v77[v79[2]] = v77[v79[3]][v79[4]];
											v71 = v71 + (470 - (304 + 165));
											v79 = v67[v71];
											v971 = 1;
										end
										if (v971 == (2 + 0)) then
											v77[v79[2]] = v77[v79[163 - (54 + 106)]] * v77[v79[4]];
											v71 = v71 + (1970 - (1618 + (1135 - 784)));
											v79 = v67[v71];
											v971 = 3 + 0;
										end
										if (v971 == 4) then
											v77[v79[1018 - (10 + 1006)]] = v79[1 + 2];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v971 = 15 - 10;
										end
										if (v971 == (2 + 1)) then
											v77[v79[(1700 - (400 + 265)) - (912 + 121)]] = v77[v79[2 + 1]] + v77[v79[1293 - (1140 + 149)]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v971 = 3 + 1;
										end
									end
								else
									local v972;
									v77[v79[2 - 0]] = v77[v79[1 + 2]] % v79[7 - 3];
									v71 = v71 + (3 - 2);
									v79 = v67[v71];
									v77[v79[3 - 1]] = v77[v79[1 + 1 + 1]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[6 - 4]] = v62[v79[189 - (165 + 21)]];
									v71 = v71 + (112 - (61 + 50));
									v79 = v67[v71];
									v77[v79[1 + 1]] = v77[v79[3]][v79[4]];
									v71 = v71 + (4 - 3);
									v79 = v67[v71];
									v77[v79[3 - 1]] = v77[v79[6 - 3]] / v79[2 + 2];
									v71 = v71 + (1461 - (1295 + 165));
									v79 = v67[v71];
									v972 = v79[1 + 1];
									v77[v972] = v77[v972](v77[v972 + 1 + 0]);
									v71 = v71 + (1398 - (314 + 505 + 578));
									v79 = v67[v71];
									v77[v79[1404 - (331 + 1071)]] = v62[v79[746 - (588 + 155)]];
									v71 = v71 + (1283 - (546 + (2407 - (962 + 709))));
									v79 = v67[v71];
									v77[v79[2]] = v77[v79[1940 - (1834 + 103)]][v79[3 + 1 + 0]];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[1768 - (1536 + 230)]] = v77[v79[3]] / v79[4];
									v71 = v71 + 1;
									v79 = v67[v71];
									v972 = v79[2];
									v77[v972] = v77[v972](v77[v972 + 1]);
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[493 - (128 + 363)]] = v77[v79[1 + 2]];
									v71 = v71 + ((2 + 0) - 1);
									v79 = v67[v71];
									v77[v79[1 + 1]] = v77[v79[(3 + 1) - 1]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[5 - 3]] = v79[3];
								end
							elseif (v80 <= (218 - 128)) then
								if (v80 == (62 + 27)) then
									local v508 = 1009 - (615 + (1541 - 1147));
									local v509;
									local v510;
									local v511;
									while true do
										if (v508 == (2 + 0)) then
											v71 = v71 + (2 - 1) + 0;
											v79 = v67[v71];
											v77[v79[5 - 3]] = v61[v79[13 - 10]];
											v71 = v71 + (652 - ((840 - (636 + 145)) + (887 - (282 + 13))));
											v79 = v67[v71];
											v77[v79[4 - 2]] = v77[v79[4 - 1]][v79[3 + 1]];
											v71 = v71 + (172 - (70 + 101));
											v79 = v67[v71];
											v508 = 3;
										end
										if (v508 == ((1150 - (366 + 782)) - 1)) then
											v79 = v67[v71];
											v77[v79[2 + 0]] = v79[7 - 4];
											v71 = v71 + (242 - (123 + 118));
											v79 = v67[v71];
											v77[v79[1 + 1]] = v62[v79[3]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v77[v79[1401 - (653 + 746)]] = v77[v79[4 - 1]][v79[5 - 1]];
											v508 = 5 - 3;
										end
										if (((2 + 1) == v508) or (4498 <= 1257)) then
											v77[v79[91 - (10 + 79)]] = v77[v79[(1709 - (1297 + 410)) + 1]][v79[4 + 0]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[6 - 4]] = v62[v79[1 + 2]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v77[v79[2 + 0]] = v77[v79[7 - 4]][v79[4 + 0]];
											v71 = v71 + ((279 - (262 + 16)) - 0);
											v508 = (2635 - 1397) - (885 + 349);
										end
										if (v508 == 6) then
											v79 = v67[v71];
											v77[v79[2 + 0]] = {};
											v71 = v71 + (2 - 1);
											v79 = v67[v71];
											v77[v79[5 - 3]] = v77[v79[3]][v79[4]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[970 - (915 + 53)]] = v77[v79[804 - (768 + 33)]][v79[15 - 11]];
											v508 = (7 + 4) - 4;
										end
										if ((v508 == 0) or (2212 == 460)) then
											v509 = nil;
											v510 = nil;
											v511 = nil;
											v511 = v79[2];
											v510 = v77[v79[331 - (287 + 41)]];
											v77[v511 + 1] = v510;
											v77[v511] = v510[v79[851 - (638 + 209)]];
											v71 = v71 + 1 + 0;
											v508 = 1687 - (12 + 84 + 1590);
										end
										if (v508 == 5) then
											v77[v79[1674 - (741 + 931)]] = v61[v79[2 + 1]];
											v71 = v71 + (2 - 1);
											v79 = v67[v71];
											v77[v79[2]] = v77[v79[1853 - (1056 + 794)]][v79[18 - 14]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[1 + 1]][v77[v79[2 + 1]]] = v77[v79[(1350 - (741 + 607)) + 2]];
											v71 = v71 + (3 - 2);
											v508 = 2 + 4;
										end
										if ((v508 == 4) or (4064 <= 3064)) then
											v79 = v67[v71];
											v511 = v79[1 + 1];
											v77[v511] = v77[v511](v13(v77, v511 + (4 - 3), v79[3 + 0]));
											v71 = v71 + (495 - (64 + 430));
											v79 = v67[v71];
											v77[v79[2 + 0]] = {};
											v71 = v71 + (364 - (106 + 257));
											v79 = v67[v71];
											v508 = 4 + 1;
										end
										if ((3203 <= 4477) and (7 == v508)) then
											v71 = v71 + (722 - (496 + 225));
											v79 = v67[v71];
											v511 = v79[1758 - (730 + 1026)];
											v509 = v77[v511];
											v510 = v79[5 - 2];
											for v1853 = 4 - 3, v510 do
												v509[v1853] = v77[v511 + v1853];
											end
											break;
										end
									end
								else
									v77[v79[1660 - (256 + 1402)]][v79[1902 - (30 + 1869)]] = v79[1373 - ((2006 - (248 + 1545)) + 1156)];
								end
							elseif (v80 <= (279 - (96 + 92))) then
								local v514 = 0 + 0;
								while true do
									if (v514 == (900 - (142 + 757))) then
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[1 + 1]] = v77[v79[82 - (32 + (1039 - (191 + 801)))]] - v77[v79[1981 - (1053 + 924)]];
										v71 = v71 + 1 + 0;
										v514 = 2 - (0 - 0);
									end
									if (3 == v514) then
										if ((v77[v79[1650 - (685 + 963)]] < v77[v79[7 - 3]]) or (1357 >= 3528)) then
											v71 = v71 + (1 - 0);
										else
											v71 = v79[1712 - (541 + 1168)];
										end
										break;
									end
									if (v514 == (1599 - (645 + 952))) then
										v79 = v67[v71];
										v77[v79[840 - (669 + 169)]] = v77[v79[3]][v79[13 - 9]];
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v514 = 2 + 1;
									end
									if (0 == v514) then
										v77[v79[(561 - (478 + 82)) + 1]] = v77[v79[768 - (181 + (2291 - (434 + 1273)))]][v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[1397 - (665 + 730)]] = v77[v79[8 - 5]][v79[7 - 3]];
										v514 = 1351 - (540 + 810);
									end
								end
							elseif ((v80 > (367 - 275)) or (379 == 1276)) then
								local v994 = 0 - 0;
								local v995;
								while true do
									if ((7 + 1) == v994) then
										v79 = v67[v71];
										v77[v79[205 - (166 + 37)]] = v77[v79[1884 - (22 + 1859)]];
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v995 = v79[1774 - (843 + 929)];
										v994 = 271 - (30 + 183 + 49);
									end
									if (v994 == 3) then
										v79 = v67[v71];
										v77[v79[5 - 3]] = v61[v79[780 - ((229 - 174) + (1295 - (349 + 224)))]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v995 = v79[3 - 1];
										v994 = (2543 - (275 + 589)) - (78 + (2907 - 1310));
									end
									if ((1368 < 4493) and (v994 == 6)) then
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2 + 0]] = v77[v79[3 + 0]][v79[4]];
										v71 = v71 + (550 - (305 + 244));
										v79 = v67[v71];
										v994 = 7;
									end
									if (v994 == (7 + (0 - 0))) then
										v77[v79[1534 - (1064 + 468)]] = v77[v79[108 - (95 + 10)]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[6 - 4]] = v77[v79[3 - 0]];
										v71 = v71 + ((559 + 204) - (592 + 170));
										v994 = 8;
									end
									if (((31 - 22) == v994) or (4803 < 3829)) then
										v77[v995] = v77[v995](v13(v77, v995 + (2 - 1), v79[2 + 1]));
										v71 = v71 + 1 + 0 + 0;
										v79 = v67[v71];
										v77[v79[4 - 2]][v79[3]] = v77[v79[1 + 3]];
										v71 = v71 + (1 - 0);
										v994 = 10;
									end
									if (v994 == (512 - (353 + 154))) then
										v79 = v67[v71];
										v77[v79[2 - 0]] = v61[v79[3 - 0]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2]] = v62[v79[3]];
										v994 = (21 - 16) + 1;
									end
									if ((2726 >= 361) and (v994 == (7 + 3))) then
										v79 = v67[v71];
										v77[v79[2 - 0]] = v79[(708 - (676 + 27)) - 2];
										v71 = v71 + ((5 - 3) - 1);
										v79 = v67[v71];
										v71 = v79[(1516 - (48 + 1379)) - (6 + 1 + 79)];
										break;
									end
									if (v994 == (0 + 0)) then
										v995 = nil;
										v77[v79[183 - (24 + 157)]] = v77[v79[3]][v79[7 - 3]];
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v77[v79[1 + 1]] = v61[v79[7 - 4]];
										v994 = 381 - (262 + 118);
									end
									if ((v994 == (1084 - (1038 + 45))) or (276 > 1935)) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[3 - (1 + 0)]] = v77[v79[233 - (19 + 211)]] / v79[117 - (88 + 25)];
										v71 = v71 + 1;
										v79 = v67[v71];
										v994 = 4 - 2;
									end
									if (v994 == 4) then
										v77[v995] = v77[v995](v13(v77, v995 + (1 - 0), v79[3]));
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2 + 0]] = v77[v79[1039 - (1007 + 29)]];
										v71 = v71 + 1 + 0;
										v994 = (9 + 3) - 7;
									end
									if (v994 == (9 - 7)) then
										v77[v79[1 + 1]] = v77[v79[814 - ((455 - (79 + 36)) + 471)]] + v77[v79[4]];
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v77[v79[591 - (276 + 313)]] = v61[v79[6 - 3]];
										v71 = v71 + 1 + 0;
										v994 = (6 - 4) + 1;
									end
								end
							else
								local v996;
								local v997;
								v997 = v79[2];
								v996 = v77[v79[1 + 2]];
								v77[v997 + 1] = v996;
								v77[v997] = v996[v79[4]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v997 = v79[2];
								v77[v997](v77[v997 + (1973 - (495 + 1477))]);
								v71 = v71 + ((1 + 1) - 1);
								v79 = v67[v71];
								for v1528 = v79[2 + 0 + 0], v79[3] do
									v77[v1528] = nil;
								end
								v71 = v71 + (404 - (342 + 18 + 43));
								v79 = v67[v71];
								v61[v79[2 + 1 + 0]] = v77[v79[167 - (4 + 161)]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v71 = v79[2 + 1];
							end
						elseif (v80 <= (307 - (486 - 277))) then
							if (v80 <= (249 - 154)) then
								if ((4510 >= 1950) and (v80 > 94)) then
									local v515 = 497 - (322 + 175);
									while true do
										if (v515 == (564 - (173 + 390))) then
											v77[v79[1 + 1]] = v77[v79[317 - (203 + 111)]] * v77[v79[1 + 3]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v515 = 5 - 3;
										end
										if (v515 == (2 + 2)) then
											do
												return v77[v79[2]];
											end
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v515 = 711 - (57 + 649);
										end
										if ((386 - (328 + 56)) == v515) then
											v77[v79[1 + 1]] = v61[v79[3]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v515 = 515 - (433 + 79);
										end
										if ((1 + 2) == v515) then
											v77[v79[2 + 0]] = v77[v79[9 - (3 + 3)]] % v77[v79[(1032 - (631 + 383)) - 14]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v515 = 4;
										end
										if ((1196 <= 4037) and (v515 == (0 + 0))) then
											v77[v79[(2673 - (445 + 1190)) - (562 + 474)]] = v79[6 - 3] ^ v77[v79[4]];
											v71 = v71 + (1 - 0);
											v79 = v67[v71];
											v515 = (2331 - (810 + 615)) - (76 + 829);
										end
										if ((3635 > 3570) and (v515 == (1678 - (1506 + 167)))) then
											v71 = v79[5 - (1296 - (819 + 475))];
											break;
										end
									end
								else
									local v516;
									local v517;
									v517 = v79[268 - (58 + 208)];
									v516 = v77[v79[2 + (1336 - (243 + 1092))]];
									v77[v517 + (2 - 1) + 0] = v516;
									v77[v517] = v516[v79[3 + 1]];
									v71 = v71 + (3 - 2);
									v79 = v67[v71];
									v77[v79[2]] = v77[v79[(212 + 128) - (258 + 79)]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v517 = v79[1 + 1];
									v77[v517] = v77[v517](v13(v77, v517 + 1, v79[5 - 2]));
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[1472 - (1219 + 251)]] = v77[v79[1674 - (1231 + 440)]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v517 = v79[60 - (34 + 24)];
									v516 = v77[v79[2 + 0 + 1]];
									v77[v517 + (1 - 0)] = v516;
									v77[v517] = v516[v79[2 + 2]];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[6 - 4]] = v77[v79[(1 + 6) - 4]][v79[13 - 9]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v517 = v79[4 - 2];
									v77[v517] = v77[v517](v13(v77, v517 + 1, v79[1592 - (877 + 712)]));
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[756 - (242 + 512)]] = v77[v79[6 - 3]];
									v71 = v71 + (628 - (92 + 519 + 16));
									v79 = v67[v71];
									v77[v79[2]] = v77[v79[3 + 0]][v79[7 - 3]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[1 + 1]] = v79[10 - 7];
								end
							elseif (v80 <= 96) then
								if v77[v79[2 + 0]] then
									v71 = v71 + (1 - 0) + 0;
								else
									v71 = v79[1 + 2];
								end
							elseif ((3310 < 3400) and (v80 == ((551 - 358) - 96))) then
								local v1008;
								local v1009, v1010;
								local v1011;
								v77[v79[2 - 0]] = v77[v79[1788 - (1476 + 309)]];
								v71 = v71 + (1285 - (299 + (1509 - (119 + 405))));
								v79 = v67[v71];
								v77[v79[(2 - 1) + 1]] = v79[9 - 6];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v79[96 - (86 + 7)];
								v71 = v71 + (4 - 3);
								v79 = v67[v71];
								v1011 = v79[1 + 1];
								v1009, v1010 = v70(v77[v1011](v13(v77, v1011 + (881 - (672 + 208)), v79[2 + (3 - 2)])));
								v72 = (v1010 + v1011) - (133 - (14 + 118));
								v1008 = (1054 - (352 + 257)) - (339 + 106);
								for v1541 = v1011, v72 do
									v1008 = v1008 + 1 + 0;
									v77[v1541] = v1009[v1008];
								end
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v1011 = v79[2];
								v77[v1011](v13(v77, v1011 + (1396 - (440 + 955)), v72));
							else
								local v1021 = 0 + 0;
								local v1022;
								local v1023;
								while true do
									if (v1021 == 1) then
										v77[v79[3 - (1 + 0)]] = v77[v79[1 + 2]][v79[9 - 5]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[355 - (260 + 93)]] = v61[v79[3 + 0]];
										v71 = v71 + (2 - 1);
										v1021 = 3 - 1;
									end
									if ((1978 - (1181 + 793)) == v1021) then
										v77[v79[2]] = v77[v79[1 + 2]][v79[311 - (105 + 202)]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v61[v79[3 + 0]];
										v71 = v71 + (811 - (352 + 458));
										v1021 = 20 - (1178 - (88 + 1075));
									end
									if (v1021 == (1076 - (477 + 594))) then
										v79 = v67[v71];
										v1023 = v79[4 - 2];
										v1022 = v77[v79[3 + 0]];
										v77[v1023 + (2 - 1)] = v1022;
										v77[v1023] = v1022[v79[953 - (438 + 511)]];
										v1021 = 1389 - (1262 + 121);
									end
									if (((1076 - (728 + 340)) == v1021) or (698 == 550)) then
										v71 = v71 + (1791 - (816 + (1697 - (328 + 395))));
										v79 = v67[v71];
										v77[v79[506 - (164 + 340)]] = v77[v79[3]] * v77[v79[4]];
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v1021 = 32 - 23;
									end
									if (v1021 == (339 - (163 + 176))) then
										v1022 = nil;
										v1023 = nil;
										v77[v79[2]] = v77[v79[3]][v79[10 - 6]];
										v71 = v71 + (4 - 3);
										v79 = v67[v71];
										v1021 = 1 + 0;
									end
									if (v1021 == (1813 - ((2369 - 805) + 246))) then
										v71 = v71 + (346 - (124 + 221));
										v79 = v67[v71];
										v77[v79[2 + 0]] = v77[v79[(1094 - 640) - (115 + 336)]] - v77[v79[4]];
										v71 = v71 + (1 - (1229 - (1008 + 221)));
										v79 = v67[v71];
										v1021 = 1 + 3;
									end
									if (v1021 == (53 - (45 + (1512 - (1025 + 486))))) then
										v1023 = v79[2];
										v77[v1023] = v77[v1023](v13(v77, v1023 + 1, v79[1 + 2]));
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[1993 - (1282 + 708)]] - v79[1216 - (583 + 629)];
										v1021 = 2 + (13 - 7);
									end
									if (v1021 == (23 - 14)) then
										v77[v79[2 + 0]] = v77[v79[1173 - (943 + 227)]] + v77[v79[2 + 2]];
										break;
									end
									if ((3662 == 3662) and (v1021 == (1633 - (1539 + 92)))) then
										v79 = v67[v71];
										v77[v79[1948 - (706 + (3469 - 2229))]] = v77[v79[261 - (81 + 177)]][v79[10 - 6]];
										v71 = v71 + (258 - (212 + 45));
										v79 = v67[v71];
										v77[v79[6 - 4]] = v77[v79[(2168 - (108 + 111)) - (708 + 1238)]][v79[1 + 3]];
										v1021 = 3;
									end
									if (v1021 == 6) then
										v71 = v71 + (99 - (82 + 16)) + 0;
										v79 = v67[v71];
										v77[v79[1669 - (586 + 1081)]] = v77[v79[514 - (348 + 163)]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v1021 = 287 - (215 + 65);
									end
								end
							end
						elseif (v80 <= (257 - 156)) then
							if (v80 <= 99) then
								local v541 = 1859 - (1541 + 318);
								local v542;
								while true do
									if (v541 == (4 + 0)) then
										v79 = v67[v71];
										if not v77[v79[2 + 0]] then
											v71 = v71 + 1 + 0;
										else
											v71 = v79[1753 - (1036 + 714)];
										end
										break;
									end
									if (v541 == (1 + 0)) then
										v77[v79[(1731 - (533 + 1196)) + 0]] = v79[1283 - (883 + 397)];
										v71 = v71 + (591 - (563 + 27));
										v79 = v67[v71];
										v77[v79[2]] = v79[3];
										v541 = 7 - 5;
									end
									if ((103 == 103) and ((1988 - (1369 + 617)) == v541)) then
										v71 = v71 + (1488 - ((129 - 44) + (1614 - (161 + 51))));
										v79 = v67[v71];
										v77[v79[1 + 1]] = v79[7 - 4];
										v71 = v71 + (404 - (274 + (563 - (294 + 140))));
										v541 = 220 - ((49 - 37) + 205);
									end
									if (v541 == (0 + 0)) then
										v542 = nil;
										v77[v79[7 - 5]] = v77[v79[(841 - (717 + 121)) + 0]][v79[388 - (27 + 357)]];
										v71 = v71 + (481 - ((142 - 51) + 389));
										v79 = v67[v71];
										v541 = 298 - (90 + 207);
									end
									if (v541 == (1 + 2)) then
										v79 = v67[v71];
										v542 = v79[2];
										v77[v542] = v77[v542](v13(v77, v542 + (862 - (706 + 155)), v79[1798 - (730 + 1039 + 26)]));
										v71 = v71 + (1564 - (1339 + 224));
										v541 = 3 + 1;
									end
								end
							elseif (v80 == 100) then
								local v1024 = 0 + 0;
								local v1025;
								local v1026;
								local v1027;
								local v1028;
								while true do
									if (v1024 == (7 - 2)) then
										v1025 = 843 - (268 + 575);
										for v2801 = v1028, v72 do
											v1025 = v1025 + (1295 - (919 + 375));
											v77[v2801] = v1026[v1025];
										end
										v71 = v71 + (2 - 1);
										v1024 = (155 + 822) - (180 + 791);
									end
									if (v1024 == 2) then
										v77[v79[1807 - (323 + 1482)]] = v79[(3631 - (1001 + 709)) - (1177 + 741)];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v1024 = 11 - 8;
									end
									if (v1024 == (1 + 0 + 0)) then
										v77[v79[(1123 - (242 + 878)) - 1]] = v61[v79[(1784 - (1395 + 388)) + 2]];
										v71 = v71 + (110 - (48 + 48 + 13));
										v79 = v67[v71];
										v1024 = 2;
									end
									if (v1024 == (1928 - (962 + 959))) then
										v71 = v71 + 1;
										v79 = v67[v71];
										if v77[v79[4 - 2]] then
											v71 = v71 + 1 + 0;
										else
											v71 = v79[1354 - (461 + 648 + 242)];
										end
										break;
									end
									if (v1024 == (5 + 1)) then
										v79 = v67[v71];
										v1028 = v79[7 - 5];
										v77[v1028] = v77[v1028](v13(v77, v1028 + (244 - (19 + 224)), v72));
										v1024 = 7;
									end
									if (((3 + 0) == v1024) or (4418 <= 1456)) then
										v77[v79[2]] = v79[201 - (37 + 161)];
										v71 = v71 + 1;
										v79 = v67[v71];
										v1024 = 4;
									end
									if ((v1024 == (2 + 2)) or (4792 < 4096)) then
										v1028 = v79[1 + 1];
										v1026, v1027 = v70(v77[v1028](v13(v77, v1028 + 1 + 0 + 0, v79[64 - (60 + 1)])));
										v72 = (v1027 + v1028) - (924 - (826 + 44 + 53));
										v1024 = 5 + 0;
									end
									if ((v1024 == 0) or (2950 == 503)) then
										v1025 = nil;
										v1026, v1027 = nil;
										v1028 = nil;
										v1024 = 3 - 2;
									end
								end
							elseif ((1231 > 917) and (v77[v79[3 - 1]] < v77[v79[4]])) then
								v71 = v71 + (686 - (375 + 310));
							else
								v71 = v79[2002 - ((3811 - (1289 + 658)) + 135)];
							end
						elseif (v80 <= (262 - 160)) then
							local v543 = 0 + 0 + 0;
							local v544;
							while true do
								if (v543 == (0 + 0)) then
									v544 = v79[4 - 2];
									v77[v544] = v77[v544](v13(v77, v544 + 1, v72));
									break;
								end
							end
						elseif ((v80 > (1234 - (314 + (1368 - 551)))) or (541 > 1252)) then
							local v1029 = 0 + 0;
							local v1030;
							local v1031;
							local v1032;
							local v1033;
							while true do
								if (v1029 == (217 - (32 + 182))) then
									v1033 = v79[2 + 0];
									v1031, v1032 = v70(v77[v1033](v13(v77, v1033 + (3 - 2), v79[68 - (39 + 26)])));
									v72 = (v1032 + v1033) - 1;
									v1030 = 144 - (54 + 72 + 18);
									v1029 = 4;
								end
								if (0 == v1029) then
									v1030 = nil;
									v1031, v1032 = nil;
									v1033 = nil;
									v77[v79[(155 + 45) - (45 + 153)]] = v61[v79[2 + 1]];
									v1029 = 553 - (457 + 95);
								end
								if (((4 + 0) == v1029) or (728 > 4322)) then
									for v2804 = v1033, v72 do
										v1030 = v1030 + 1;
										v77[v2804] = v1031[v1030];
									end
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v1033 = v79[4 - 2];
									v1029 = 18 - 13;
								end
								if (v1029 == (1 + 1)) then
									v79 = v67[v71];
									v77[v79[2]] = v79[10 - 7];
									v71 = v71 + 1;
									v79 = v67[v71];
									v1029 = 8 - 5;
								end
								if ((v1029 == (749 - (485 + 263))) or (4531 == 3134)) then
									v71 = v71 + (708 - (575 + 132));
									v79 = v67[v71];
									v77[v79[2]] = v79[864 - (750 + 111)];
									v71 = v71 + (1011 - (445 + 565));
									v1029 = 2 + 0;
								end
								if ((v1029 == (1 + 4)) or (167 == 432)) then
									v77[v1033](v13(v77, v1033 + ((1 - 0) - 0), v72));
									v71 = v71 + 1;
									v79 = v67[v71];
									v71 = v79[2 + 1];
									break;
								end
							end
						else
							local v1034 = 310 - (189 + 121);
							while true do
								if ((2021 >= 195) and (v1034 == 2)) then
									v79 = v67[v71];
									v77[v79[2]] = v77[v79[1 + 2]][v79[1351 - ((2610 - (337 + 1639)) + 713)]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v1034 = 3;
								end
								if (v1034 == 3) then
									v77[v79[540 - (493 + 45)]] = v77[v79[971 - (493 + 475)]][v79[4]];
									v71 = v71 + 1 + 0 + 0;
									v79 = v67[v71];
									v77[v79[786 - (158 + 626)]][v79[2 + 1]] = v77[v79[5 - 1]];
									v1034 = 1 + 3;
								end
								if (v1034 == (1 + 3)) then
									v71 = v71 + ((1974 - 882) - (1035 + 56));
									v79 = v67[v71];
									v77[v79[2]] = v79[962 - (114 + 845)];
									break;
								end
								if ((0 + (0 - 0)) == v1034) then
									v77[v79[5 - (6 - 3)]][v79[3 + 0]] = v79[1053 - (179 + 870)];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v77[v79[880 - ((2564 - (630 + 1107)) + 51)]] = v61[v79[7 - 4]];
									v1034 = 1;
								end
								if (v1034 == (1 + 0 + 0 + 0)) then
									v71 = v71 + (474 - (95 + 378));
									v79 = v67[v71];
									v77[v79[2]] = v62[v79[3]];
									v71 = v71 + (1 - 0);
									v1034 = 2;
								end
							end
						end
					elseif (v80 <= (9 + 105)) then
						if ((4181 > 3970) and (v80 <= ((69 + 84) - 44))) then
							if (v80 <= (94 + 12)) then
								if (v80 > (1116 - (334 + 677))) then
									local v545;
									local v546, v547;
									local v548;
									local v549;
									v549 = v79[7 - 5];
									v548 = v77[v79[(884 + 175) - (1049 + (68 - (13 + 48)))]];
									v77[v549 + (4 - 3)] = v548;
									v77[v549] = v548[v79[7 - 3]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[5 - 3]] = v77[v79[5 - 2]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[1422 - (1004 + 416)]] = v79[1960 - (1621 + 336)];
									v71 = v71 + (1940 - (337 + 1602));
									v79 = v67[v71];
									v77[v79[1519 - (1014 + 503)]] = v79[3];
									v71 = v71 + (1016 - (446 + 569));
									v79 = v67[v71];
									v549 = v79[2];
									v546, v547 = v70(v77[v549](v13(v77, v549 + 1, v79[(700 - (658 + 41)) + 2])));
									v72 = (v547 + v549) - 1;
									v545 = 0 - 0;
									for v753 = v549, v72 do
										v545 = v545 + 1 + 0;
										v77[v753] = v546[v545];
									end
									v71 = v71 + 1;
									v79 = v67[v71];
									v549 = v79[3 - 1];
									v77[v549] = v77[v549](v13(v77, v549 + 1 + 0, v72));
									v71 = v71 + (506 - (223 + 282));
									v79 = v67[v71];
									if v77[v79[2]] then
										v71 = v71 + 1;
									else
										v71 = v79[3];
									end
								else
									local v564 = 0;
									local v565;
									while true do
										if (v564 == (1 + 2)) then
											v71 = v71 + 1;
											v79 = v67[v71];
											if (v77[v79[2]] <= v77[v79[5 - 1]]) then
												v71 = v71 + (1 - 0);
											else
												v71 = v79[673 - (623 + (99 - 52))];
											end
											break;
										end
										if (v564 == (47 - (32 + 13))) then
											v77[v565] = v77[v565](v77[v565 + 1 + 0]);
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v77[v79[2]] = v61[v79[3]];
											v564 = 1804 - (1070 + 731);
										end
										if (v564 == 0) then
											v565 = nil;
											v77[v79[2 + 0]] = v77[v79[1407 - (1257 + 147)]][v79[4]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v564 = 1 - 0;
										end
										if (v564 == (134 - ((2005 - (1591 + 316)) + 35))) then
											v77[v79[1 + (1 - 0)]] = v77[v79[10 - 7]];
											v71 = v71 + (3 - 2);
											v79 = v67[v71];
											v565 = v79[2 + 0];
											v564 = 2;
										end
									end
								end
							elseif ((1145 < 1205) and (v80 <= (95 + 12))) then
								local v566 = 0;
								local v567;
								local v568;
								local v569;
								while true do
									if (v566 == (1 + 1)) then
										for v1857 = 1, v79[561 - (98 + 297 + 87 + 75)] do
											local v1858 = 0 - 0;
											local v1859;
											while true do
												if ((v1858 == (0 + 0)) or (2728 < 1073)) then
													v71 = v71 + (1942 - (816 + (2401 - (1241 + 35))));
													v1859 = v67[v71];
													v1858 = (41 - (18 + 22)) - (0 - 0);
												end
												if ((v1858 == (1149 - (701 + 447))) or (2223 > 4886)) then
													if ((1727 < 2511) and (v1859[1 - 0] == 56)) then
														v569[v1857 - (1 - (0 + 0))] = {v77,v1859[3]};
													else
														v569[v1857 - (2 - 1)] = {v61,v1859[3 + 0]};
													end
													v76[#v76 + 1 + 0] = v569;
													break;
												end
											end
										end
										v77[v79[7 - 5]] = v29(v567, v568, v62);
										break;
									end
									if ((v566 == ((2825 - (697 + 605)) - (251 + 1271))) or (3104 <= 750)) then
										v569 = {};
										v568 = v10({}, {__index=function(v1860, v1861)
											local v1862 = 0 + 0;
											local v1863;
											while true do
												if (v1862 == (0 - 0)) then
													v1863 = v569[v1861];
													return v1863[2 - 1][v1863[2 - 0]];
												end
											end
										end,__newindex=function(v1864, v1865, v1866)
											local v1867 = v569[v1865];
											v1867[1260 - (1147 + 112)][v1867[1 + 1]] = v1866;
										end});
										v566 = 3 - 1;
									end
									if ((2519 >= 1057) and (v566 == 0)) then
										v567 = v68[v79[3]];
										v568 = nil;
										v566 = 1 + 0 + (0 - 0);
									end
								end
							elseif (v80 > 108) then
								local v1036 = 697 - (335 + 362);
								local v1037;
								local v1038;
								local v1039;
								local v1040;
								local v1041;
								while true do
									if (4 == v1036) then
										v1038 = 0 + 0;
										for v2807 = v1041, v72 do
											v1038 = v1038 + (1 - (329 - (188 + 141)));
											v77[v2807] = v1039[v1038];
										end
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v1036 = 18 - 13;
									end
									if ((4875 >= 3370) and (v1036 == 5)) then
										v1041 = v79[(38 - 29) - 7];
										v77[v1041] = v77[v1041](v13(v77, v1041 + (2 - 1), v72));
										v71 = v71 + (567 - (237 + 329));
										v79 = v67[v71];
										v1036 = 21 - 15;
									end
									if (((1 + 0) == v1036) or (4402 <= 1842)) then
										v77[v79[2 + 0]] = v61[v79[1127 - ((964 - 556) + 716)]];
										v71 = v71 + (3 - 2);
										v79 = v67[v71];
										v77[v79[823 - (344 + 477)]] = v79[3];
										v1036 = 1 + (951 - (34 + 916));
									end
									if (v1036 == (1763 - (1188 + 573))) then
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v77[v79[2 + 0]] = v79[3];
										v71 = v71 + (3 - 2);
										v1036 = 3;
									end
									if (v1036 == (8 - 2)) then
										v1041 = v79[4 - (1739 - (357 + 1380))];
										v1037 = v77[v79[1532 - (508 + 937 + 84)]];
										v77[v1041 + 1 + 0 + 0] = v1037;
										v77[v1041] = v1037[v79[1170 - (228 + 938)]];
										break;
									end
									if (v1036 == 3) then
										v79 = v67[v71];
										v1041 = v79[687 - (332 + 353)];
										v1039, v1040 = v70(v77[v1041](v13(v77, v1041 + (1 - 0), v79[7 - 4])));
										v72 = (v1040 + v1041) - (1 + 0);
										v1036 = 1 + 2 + (1928 - (178 + 1749));
									end
									if (((0 - 0) - 0) == v1036) then
										v1037 = nil;
										v1038 = nil;
										v1039, v1040 = nil;
										v1041 = nil;
										v1036 = 1;
									end
								end
							else
								local v1042 = 423 - (18 + 405);
								local v1043;
								while true do
									if ((v1042 == (0 + (1415 - (142 + 1273)))) or (3260 >= 4359)) then
										v1043 = nil;
										v77[v79[2 + 0]] = v77[v79[3 - 0]][v79[982 - (194 + 784)]];
										v71 = v71 + (1771 - (694 + 1076));
										v1042 = 1;
									end
									if ((4979 >= 4797) and ((595 - (284 + 309)) == v1042)) then
										v79 = v67[v71];
										v1043 = v79[(1559 + 347) - (122 + 1782)];
										v77[v1043] = v77[v1043](v77[v1043 + 1 + 0]);
										v1042 = 3 + 0;
									end
									if (v1042 == (1 + 0)) then
										v79 = v67[v71];
										v77[v79[2 + 0]] = v77[v79[8 - 5]];
										v71 = v71 + 1;
										v1042 = 2;
									end
									if ((v1042 == (4 + 0)) or (4407 == 1671)) then
										v71 = v71 + 1;
										v79 = v67[v71];
										if ((203 < 3041) and (v77[v79[1972 - (214 + 1756)]] <= v77[v79[(709 - (622 + 68)) - 15]])) then
											v71 = v71 + 1 + 0;
										else
											v71 = v79[1 + 2];
										end
										break;
									end
									if (v1042 == ((301 + 287) - (217 + 368))) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[5 - 3]] = v61[v79[2 + 1]];
										v1042 = 3 + 1;
									end
								end
							end
						elseif (v80 <= (4 + (242 - 135))) then
							if (v80 == 110) then
								local v570 = 889 - (844 + 45);
								local v571;
								local v572;
								local v573;
								local v574;
								local v575;
								while true do
									if (v570 == (284 - (242 + 42))) then
										v571 = nil;
										v572, v573 = nil;
										v574 = nil;
										v575 = nil;
										v575 = v79[2 + 0];
										v570 = 1;
									end
									if (v570 == (7 - 3)) then
										v572, v573 = v70(v77[v575](v13(v77, v575 + 1, v79[3])));
										v72 = (v573 + v575) - (2 - 1);
										v571 = 1200 - (132 + 1068);
										for v1869 = v575, v72 do
											v571 = v571 + (1 - (0 + 0));
											v77[v1869] = v572[v571];
										end
										v71 = v71 + 1;
										v570 = 1628 - (214 + 1409);
									end
									if (v570 == 1) then
										v574 = v77[v79[3 + 0]];
										v77[v575 + ((3533 - (855 + 1043)) - (497 + 1137))] = v574;
										v77[v575] = v574[v79[944 - ((19 - 10) + 931)]];
										v71 = v71 + (290 - (181 + 108));
										v79 = v67[v71];
										v570 = 2 + 0;
									end
									if (v570 == (4 - 2)) then
										v77[v79[5 - 3]] = v77[v79[1 + 2]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[478 - (296 + 180)]] = v79[1406 - (1183 + 220)];
										v71 = v71 + 1;
										v570 = 1268 - ((3535 - 2498) + 228);
									end
									if (v570 == (9 - 6)) then
										v79 = v67[v71];
										v77[v79[2 - 0]] = v79[3];
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v575 = v79[6 - (783 - (576 + 203))];
										v570 = 738 - (527 + 207);
									end
									if ((4059 == 4059) and (v570 == 6)) then
										if v77[v79[529 - (187 + 340)]] then
											v71 = v71 + (1871 - (1298 + 572));
										else
											v71 = v79[6 - 3];
										end
										break;
									end
									if ((v570 == (175 - ((366 - 222) + (42 - 16)))) or (3371 <= 2640)) then
										v79 = v67[v71];
										v575 = v79[4 - 2];
										v77[v575] = v77[v575](v13(v77, v575 + (2 - 1), v72));
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v570 = 16 - (1994 - (709 + 1275));
									end
								end
							else
								v77[v79[4 - (2 + 0)]] = v77[v79[14 - 11]] % v77[v79[3 + 1]];
							end
						elseif (v80 <= ((514 - 363) - 39)) then
							local v577;
							v77[v79[2]] = v77[v79[3]][v79[4 + 0]];
							v71 = v71 + 1;
							v79 = v67[v71];
							v77[v79[1 + 1]] = v61[v79[205 - ((18 - 13) + 197)]];
							v71 = v71 + (119 - (31 + 87));
							v79 = v67[v71];
							v577 = v79[2];
							v77[v577](v77[v577 + 1]);
							v71 = v71 + (687 - (339 + 347));
							v79 = v67[v71];
							v77[v79[4 - (133 - (44 + 87))]] = v61[v79[3]];
							v71 = v71 + (3 - 2);
							v79 = v67[v71];
							v77[v79[2]] = v77[v79[3]][v79[380 - (365 + (40 - 29))]];
							v71 = v71 + 1;
							v79 = v67[v71];
							if v77[v79[2 + 0 + 0]] then
								v71 = v71 + (3 - (4 - 2));
							else
								v71 = v79[3];
							end
						elseif ((v80 == 113) or (3446 <= 963)) then
							local v1045 = 0 - 0;
							local v1046;
							while true do
								if (v1045 == ((2665 - 1739) - (837 + (873 - (284 + 502))))) then
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v1046 = v79[1672 - (837 + 833)];
									do
										return v77[v1046](v13(v77, v1046 + 1 + 0, v79[(902 + 488) - (356 + 1031)]));
									end
									v1045 = 2 + 1;
								end
								if (v1045 == (1649 - (73 + 1573))) then
									v71 = v71 + 1;
									v79 = v67[v71];
									v1046 = v79[1390 - (1307 + 81)];
									do
										return v13(v77, v1046, v72);
									end
									v1045 = 238 - (7 + 227);
								end
								if ((v1045 == (1 - (1186 - (124 + 1062)))) or (4457 <= 2180)) then
									v77[v79[(1195 - (847 + 180)) - (90 + 76)]] = v79[9 - 6] ^ v77[v79[2 + 2]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[2 + 0]] = v77[v79[3 + 0]] * v77[v79[15 - 11]];
									v1045 = 262 - (149 + 48 + (262 - 199));
								end
								if (4 == v1045) then
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v71 = v79[(1364 - (369 + 994)) + 2];
									break;
								end
								if ((0 + 0) == v1045) then
									v1046 = nil;
									v77[v79[1 + 1]] = v77[v79[3]][v79[(967 - (583 + 380)) - 0]];
									v71 = v71 + ((300 + 1070) - (618 + 751));
									v79 = v67[v71];
									v1045 = 1 + 0;
								end
							end
						else
							local v1047;
							v77[v79[1912 - (150 + 56 + 1704)]] = v77[v79[4 - 1]][v79[7 - 3]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[2]] = v77[v79[1278 - (155 + 552 + 568)]][v79[4]];
							v71 = v71 + (1507 - (396 + 1110));
							v79 = v67[v71];
							v77[v79[4 - (1975 - (1085 + 888))]] = v62[v79[1 + 2]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v1047 = v79[2 + 0];
							v77[v1047] = v77[v1047]();
							v71 = v71 + (977 - (230 + 746));
							v79 = v67[v71];
							v77[v79[603 - (473 + 128)]] = v77[v79[51 - (39 + 9)]][v79[270 - (38 + 228)]];
							v71 = v71 + (1 - 0);
							v79 = v67[v71];
							if v77[v79[475 - (106 + 367)]] then
								v71 = v71 + 1 + 0;
							else
								v71 = v79[1865 - (354 + 1508)];
							end
						end
					elseif ((v80 <= (381 - 262)) or (2152 > 2620)) then
						if (v80 <= (85 + 31)) then
							if (v80 > 115) then
								if ((v77[v79[2 + 0]] ~= v77[v79[4]]) or (3942 < 3631)) then
									v71 = v71 + 1;
								else
									v71 = v79[3 - 0];
								end
							else
								local v587 = v79[1246 - (334 + 910)];
								do
									return v13(v77, v587, v72);
								end
							end
						elseif (v80 <= (1012 - (92 + 803))) then
							local v588;
							local v589;
							v589 = v79[2 + 0];
							v77[v589] = v77[v589](v13(v77, v589 + (1182 - (1035 + 146)), v79[619 - (230 + 386)]));
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[1512 - (353 + 1157)]] = v62[v79[1117 - (53 + 1061)]];
							v71 = v71 + 1;
							v79 = v67[v71];
							v589 = v79[1637 - (1568 + 67)];
							v588 = v77[v79[2 + (2 - 1)]];
							v77[v589 + 1 + 0] = v588;
							v77[v589] = v588[v79[9 - 5]];
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v77[v79[2]] = v77[v79[3]];
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v77[v79[2 + 0]] = v79[1215 - (615 + 597)];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[2]] = v79[3 - 0];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v589 = v79[2];
							v77[v589] = v77[v589](v13(v77, v589 + (3 - 2) + 0, v79[2 + 1]));
							v71 = v71 + (1900 - (1056 + 843));
							v79 = v67[v71];
							v77[v79[3 - 1]] = v79[4 - 1] ~= (0 - 0);
						elseif ((v80 == (338 - 220)) or (489 > 2158)) then
							local v1060;
							v77[v79[2 + 0]] = v77[v79[3]][v79[1980 - (286 + 1690)]];
							v71 = v71 + (912 - (98 + 813));
							v79 = v67[v71];
							v77[v79[1 + 1]] = v61[v79[7 - (5 - 1)]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[509 - (263 + 73 + 171)]] = v79[3 + 0];
							v71 = v71 + ((852 + 836) - (1502 + 185));
							v79 = v67[v71];
							v77[v79[1 + 1]] = v79[14 - 11];
							v71 = v71 + (2 - (1 + 0));
							v79 = v67[v71];
							v1060 = v79[1529 - (629 + 898)];
							v77[v1060] = v77[v1060](v13(v77, v1060 + 1, v79[(11 - 3) - 5]));
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v77[v79[2]] = v61[v79[368 - (12 + 353)]];
							v71 = v71 + ((2679 - 767) - (1680 + 197 + 34));
							v79 = v67[v71];
							v1060 = v79[1 + 1];
							v77[v1060] = v77[v1060](v13(v77, v1060 + 1, v79[2 + 1]));
							v71 = v71 + (1150 - (212 + 937));
							v79 = v67[v71];
							v61[v79[2 + 1]] = v77[v79[1064 - (111 + 951)]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[2]] = v61[v79[(22 + 8) - (18 + 9)]];
							v71 = v71 + 1 + 0 + 0;
							v79 = v67[v71];
							v77[v79[536 - (31 + 503)]] = v61[v79[1635 - (595 + 1037)]];
							v71 = v71 + (1445 - (189 + 1255));
							v79 = v67[v71];
							v77[v79[1 + 1]] = v79[4 - 1];
							v71 = v71 + (1280 - ((1384 - (153 + 61)) + 109));
							v79 = v67[v71];
							v77[v79[1819 - ((1291 - (704 + 239)) + 1469)]] = v79[1292 - (1115 + 174)];
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v1060 = v79[1016 - (85 + 431 + 498)];
							v77[v1060] = v77[v1060](v13(v77, v1060 + 1 + 0, v79[1870 - (1151 + 716)]));
							v71 = v71 + (1387 - (740 + 646));
							v79 = v67[v71];
							v77[v79[2]][v79[2 + 1]] = v77[v79[4]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[1706 - (95 + 1609)]] = v79[10 - 7];
						else
							v77[v79[760 - (364 + 394)]] = v77[v79[3]] % v77[v79[4 + 0]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[1 + 1]] = v61[v79[3 + 0]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[2]] = v77[v79[2 + 1 + 0]] - v79[2 + 2];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[1 + 1]] = v77[v79[959 - (719 + 237)]] - v77[v79[11 - 7]];
							v71 = v71 + 1;
							v79 = v67[v71];
							do
								return v77[v79[2 + 0]];
							end
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v71 = v79[8 - 5];
						end
					elseif (v80 <= (289 - 167)) then
						if (v80 <= (2111 - (761 + 1230))) then
							local v606;
							v77[v79[195 - (80 + 113)]] = v79[2 + 1];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v606 = v79[1 + 1];
							v77[v606] = v77[v606](v13(v77, v606 + (3 - 2), v79[3]));
							v71 = v71 + 1;
							v79 = v67[v71];
							v77[v79[1 + 1]][v77[v79[1 + 2]]] = v79[4];
							v71 = v71 + (1244 - (965 + 278));
							v79 = v67[v71];
							v77[v79[1731 - (1391 + 338)]] = v77[v79[7 - 4]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[3 - 1]] = v79[1 + 2];
							v71 = v71 + (1409 - (496 + 912));
							v79 = v67[v71];
							v77[v79[6 - 4]] = v79[1 + 2];
							v71 = v71 + (1 - 0);
							v79 = v67[v71];
							v606 = v79[1332 - (1190 + 140)];
							v77[v606] = v77[v606](v13(v77, v606 + 1 + 0, v79[721 - (317 + 401)]));
							v71 = v71 + (950 - (303 + 646));
							v79 = v67[v71];
							v77[v79[6 - 4]] = v62[v79[1735 - (1675 + 57)]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v606 = v79[2];
							v77[v606] = v77[v606]();
							v71 = v71 + 1;
							v79 = v67[v71];
							v77[v79[4 - 2]][v77[v79[1 + 2]]] = v77[v79[981 - (338 + 639)]];
						elseif (v80 == (500 - (320 + 59))) then
							local v1093 = 0;
							local v1094;
							local v1095;
							while true do
								if ((1612 <= 4553) and (v1093 == (2 + 1))) then
									v77[v1095] = v77[v1095](v13(v77, v1095 + 1, v79[3]));
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[734 - (628 + 104)]] = v77[v79[3 - 0]];
									v71 = v71 + (1892 - (439 + 1452));
									v79 = v67[v71];
									v1093 = 4;
								end
								if (0 == v1093) then
									v1094 = nil;
									v1095 = nil;
									v1095 = v79[1949 - (105 + 1842)];
									v1094 = v77[v79[13 - 10]];
									v77[v1095 + (2 - 1)] = v1094;
									v77[v1095] = v1094[v79[19 - 15]];
									v1093 = 1;
								end
								if (v1093 == (1 + 1)) then
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v77[v79[2 + 0]] = v79[1167 - (274 + 890)];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1095 = v79[2];
									v1093 = 3 + 0;
								end
								if (v1093 == 5) then
									v1095 = v79[1 + 1];
									v77[v1095] = v77[v1095](v13(v77, v1095 + 1 + 0, v79[2 + 1]));
									break;
								end
								if (v1093 == (1 - 0)) then
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[2]] = v77[v79[822 - (731 + 88)]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[2 + 0]] = v79[1 + 2];
									v1093 = 2;
								end
								if (v1093 == (5 - 1)) then
									v77[v79[2]] = v79[8 - 5];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[2]] = v79[6 - 3];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1093 = 1 + 4;
								end
							end
						else
							local v1096 = v79[1 + 1];
							local v1097 = {v77[v1096](v13(v77, v1096 + (159 - (139 + 19)), v72))};
							local v1098 = 0 + 0;
							for v1593 = v1096, v79[1997 - (1687 + 306)] do
								v1098 = v1098 + (3 - 2);
								v77[v1593] = v1097[v1098];
							end
						end
					elseif (v80 <= (1277 - (1018 + 136))) then
						local v624 = v79[1 + 1];
						local v625 = v79[17 - 13];
						local v626 = v624 + (817 - (117 + 698));
						local v627 = {v77[v624](v77[v624 + (482 - (305 + 176))], v77[v626])};
						for v756 = 1 + 0, v625 do
							v77[v626 + v756] = v627[v756];
						end
						local v628 = v627[1 + 0];
						if v628 then
							v77[v626] = v628;
							v71 = v79[5 - 2];
						else
							v71 = v71 + 1 + 0;
						end
					elseif (v80 > (213 - 89)) then
						local v1101 = 0 - 0;
						local v1102;
						while true do
							if (((0 - 0) == v1101) or (2292 > 4911)) then
								v1102 = nil;
								v77[v79[262 - (159 + 101)]] = v77[v79[14 - 11]];
								v71 = v71 + (3 - 2);
								v79 = v67[v71];
								v77[v79[2]] = v79[3];
								v71 = v71 + 1 + 0;
								v1101 = 3 - 2;
							end
							if ((v1101 == (3 - 1)) or (1307 < 752)) then
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2]][v77[v79[269 - (112 + 154)]]] = v79[4];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[4 - 2]] = v77[v79[34 - (21 + 10)]];
								v1101 = 1722 - (531 + 1188);
							end
							if ((v1101 == (1 + 0)) or (2021 <= 1818)) then
								v79 = v67[v71];
								v77[v79[2]] = v79[666 - (96 + 567)];
								v71 = v71 + 1;
								v79 = v67[v71];
								v1102 = v79[2 - 0];
								v77[v1102] = v77[v1102](v13(v77, v1102 + 1, v79[3]));
								v1101 = 1 + 1;
							end
							if (v1101 == (10 - 7)) then
								v71 = v71 + (1696 - (867 + 828));
								v79 = v67[v71];
								v77[v79[4 - 2]] = v79[10 - 7];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v79[6 - 3];
								v1101 = 4;
							end
							if ((v1101 == (7 - 2)) or (3184 > 4881)) then
								v77[v79[1 + 1]][v77[v79[4 - 1]]] = v79[4];
								break;
							end
							if (v1101 == (775 - (134 + 637))) then
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v1102 = v79[1159 - (775 + 382)];
								v77[v1102] = v77[v1102](v13(v77, v1102 + (1 - 0), v79[610 - (45 + 562)]));
								v71 = v71 + (863 - (545 + 317));
								v79 = v67[v71];
								v1101 = 7 - 2;
							end
						end
					else
						local v1103 = 1026 - (763 + 263);
						while true do
							if ((v1103 == (2 + 3)) or (1708 < 564)) then
								v77[v79[1752 - (512 + 1238)]] = v77[v79[3]][v79[4]];
								v71 = v71 + (1595 - (272 + 1322));
								v79 = v67[v71];
								v1103 = 10 - 4;
							end
							if ((1250 - (533 + 713)) == v1103) then
								v77[v79[30 - (14 + 14)]] = v62[v79[828 - (499 + 326)]];
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v1103 = 5;
							end
							if ((v1103 == 6) or (2137 <= 1708)) then
								v77[v79[426 - (104 + 320)]] = v62[v79[2000 - (1929 + 68)]];
								v71 = v71 + (1324 - (1206 + 117));
								v79 = v67[v71];
								v1103 = 5 + 2;
							end
							if ((4030 > 2418) and (v1103 == (1599 - (683 + 909)))) then
								if not v77[v79[5 - 3]] then
									v71 = v71 + (1 - 0);
								else
									v71 = v79[780 - (772 + 5)];
								end
								break;
							end
							if ((v1103 == (1428 - (19 + 1408))) or (4195 <= 1598)) then
								v77[v79[290 - (134 + 154)]] = v77[v79[3]][v79[4]];
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v1103 = 6 - 4;
							end
							if ((4737 > 204) and ((2 + 1) == v1103)) then
								v77[v79[2 + 0]] = v77[v79[205 - (10 + 192)]][v79[51 - (13 + 34)]];
								v71 = v71 + (1290 - (342 + 947));
								v79 = v67[v71];
								v1103 = 4;
							end
							if ((v1103 == (0 - 0)) or (2435 > 3226)) then
								v77[v79[1710 - (119 + 1589)]] = v62[v79[3]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v1103 = 2 - 1;
							end
							if ((v1103 == (2 - 0)) or (3428 <= 2860)) then
								v77[v79[2]] = v62[v79[555 - (545 + 7)]];
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v1103 = 2 + 1;
							end
						end
					end
				elseif (v80 <= (1849 - (494 + 1209))) then
					if ((v80 <= (360 - 225)) or (1277 >= 3501)) then
						if ((v80 <= 130) or (1935 > 2192)) then
							if ((v80 <= (1125 - (197 + 801))) or (4715 < 767)) then
								if (v80 == (253 - 127)) then
									v77[v79[9 - 7]] = v79[957 - (919 + 35)] + v77[v79[4 + 0]];
								else
									local v630;
									v630 = v79[7 - 5];
									v77[v630] = v77[v630]();
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[469 - (369 + 98)]] = v61[v79[1118 - (400 + 715)]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[1 + 1]] = v77[v79[3]][v79[1329 - (744 + 581)]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[1624 - (653 + 969)]] = v77[v79[5 - 2]] - v77[v79[1635 - (12 + 1619)]];
									v71 = v71 + (164 - (103 + 60));
									v79 = v67[v71];
									if ((1319 == 1319) and (v77[v79[9 - 7]] < v79[17 - 13])) then
										v71 = v71 + (4 - 3);
									else
										v71 = v79[3];
									end
								end
							elseif (v80 <= 128) then
								local v639 = 0;
								local v640;
								local v641;
								local v642;
								local v643;
								local v644;
								while true do
									if (2 == v639) then
										v79 = v67[v71];
										v77[v79[1664 - (710 + 952)]] = v79[1871 - (555 + 1313)];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2 + 0]] = v79[3 + 0];
										v71 = v71 + (1469 - (1261 + 207));
										v639 = 255 - (245 + 7);
									end
									if (v639 == (747 - (212 + 535))) then
										v640 = nil;
										v641, v642 = nil;
										v643 = nil;
										v644 = nil;
										v644 = v79[9 - 7];
										v643 = v77[v79[3]];
										v639 = 1477 - (905 + 571);
									end
									if (v639 == (23 - 18)) then
										v644 = v79[2];
										v643 = v77[v79[3 - 0]];
										v77[v644 + 1] = v643;
										v77[v644] = v643[v79[15 - 11]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v639 = 1469 - (522 + 941);
									end
									if (v639 == (1514 - (292 + 1219))) then
										v79 = v67[v71];
										v644 = v79[1114 - (787 + 325)];
										v641, v642 = v70(v77[v644](v13(v77, v644 + 1, v79[8 - 5])));
										v72 = (v642 + v644) - (1 + 0);
										v640 = 0 - 0;
										for v1873 = v644, v72 do
											local v1874 = 0;
											while true do
												if (v1874 == (534 - (424 + 110))) then
													v640 = v640 + 1 + 0;
													v77[v1873] = v641[v640];
													break;
												end
											end
										end
										v639 = 3 + 1;
									end
									if (v639 == (2 + 4)) then
										v77[v79[314 - (33 + 279)]] = v61[v79[3]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[1355 - (1338 + 15)]] = v77[v79[1426 - (528 + 895)]][v79[2 + 2]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v639 = 1931 - (1606 + 318);
									end
									if (v639 == (1826 - (298 + 1521))) then
										v644 = v79[8 - 6];
										v77[v644] = v77[v644](v13(v77, v644 + (311 - (154 + 156)), v79[11 - 8]));
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										if (v77[v79[1117 - (712 + 403)]] or (4502 <= 868)) then
											v71 = v71 + (451 - (168 + 282));
										else
											v71 = v79[5 - 2];
										end
										break;
									end
									if ((3735 >= 172) and (v639 == 4)) then
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v644 = v79[1 + 1];
										v77[v644] = v77[v644](v13(v77, v644 + (2 - 1), v72));
										v71 = v71 + (1452 - (1242 + 209));
										v79 = v67[v71];
										v639 = 5;
									end
									if (v639 == (680 - (20 + 659))) then
										v77[v644 + 1 + 0] = v643;
										v77[v644] = v643[v79[3 + 1]];
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v77[v79[3 - 1]] = v61[v79[622 - (427 + 192)]];
										v71 = v71 + 1;
										v639 = 2;
									end
								end
							elseif (v80 == (289 - 160)) then
								v77[v79[1 + 1]] = v62[v79[3]];
							else
								v77[v79[1949 - (1427 + 520)]] = v79[2 + 1] ~= (0 - 0);
								v71 = v71 + 1 + 0;
							end
						elseif ((v80 <= (1364 - (712 + 520))) or (4844 <= 3394)) then
							if ((2003 <= 3182) and (v80 > (327 - 196))) then
								local v645 = 1346 - (565 + 781);
								local v646;
								local v647;
								local v648;
								local v649;
								local v650;
								while true do
									if ((4436 >= 3624) and (v645 == (565 - (35 + 530)))) then
										v646 = nil;
										v647 = nil;
										v648, v649 = nil;
										v650 = nil;
										v77[v79[1 + 1]] = v61[v79[10 - 7]];
										v71 = v71 + (1379 - (1330 + 48));
										v79 = v67[v71];
										v77[v79[2 + 0]] = v79[1 + 2];
										v71 = v71 + (1 - 0);
										v645 = 4 - 3;
									end
									if ((4444 >= 1701) and (v645 == (1174 - (854 + 315)))) then
										v650 = v79[6 - 4];
										v77[v650] = v77[v650](v13(v77, v650 + 1 + 0, v72));
										v71 = v71 + (45 - (31 + 13));
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[4 - 1]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v650 = v79[4 - 2];
										v646 = v77[v79[3 + 0]];
										v645 = 6;
									end
									if ((v645 == (574 - (281 + 282))) or (3990 < 1842)) then
										v650 = v79[5 - 3];
										v77[v650] = v77[v650](v13(v77, v650 + 1 + 0, v72));
										v71 = v71 + (950 - (216 + 733));
										v79 = v67[v71];
										v77[v79[1849 - (137 + 1710)]] = v77[v79[8 - 5]];
										v71 = v71 + (539 - (100 + 438));
										v79 = v67[v71];
										v77[v79[1367 - (205 + 1160)]] = v79[3 + 0];
										v71 = v71 + 1;
										v645 = 7 + 5;
									end
									if (((1306 - (535 + 770)) == v645) or (3654 > 3853)) then
										v79 = v67[v71];
										v77[v79[1 + 1]] = v79[3];
										v71 = v71 + 1;
										v79 = v67[v71];
										v650 = v79[2 + 0];
										v77[v650] = v77[v650](v13(v77, v650 + (1995 - (211 + 1783)), v79[1 + 2]));
										v71 = v71 + (1430 - (1236 + 193));
										v79 = v67[v71];
										v77[v79[912 - (793 + 117)]] = v77[v79[3]][v79[1896 - (1607 + 285)]];
										v645 = 2;
									end
									if ((867 - (747 + 113)) == v645) then
										v79 = v67[v71];
										v77[v79[1978 - (80 + 1896)]] = v79[3];
										v71 = v71 + (4 - 3);
										v79 = v67[v71];
										v650 = v79[2 - 0];
										v77[v650] = v77[v650](v13(v77, v650 + 1 + 0, v79[3]));
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[4 - 2]] = v77[v79[3]][v79[3 + 1]];
										v645 = 23 - 15;
									end
									if ((4017 >= 2164) and (v645 == (8 + 4))) then
										v79 = v67[v71];
										v71 = v79[1 + 2];
										break;
									end
									if ((2804 > 1147) and ((6 - 3) == v645)) then
										v71 = v71 + (455 - (246 + 208));
										v79 = v67[v71];
										v77[v79[1894 - (614 + 1278)]] = v79[2 + 1];
										v71 = v71 + (315 - (249 + 65));
										v79 = v67[v71];
										v77[v79[2]] = v79[6 - 3];
										v71 = v71 + (1276 - (726 + 549));
										v79 = v67[v71];
										v77[v79[2 + 0]] = v79[1427 - (916 + 508)];
										v645 = 13 - 9;
									end
									if ((v645 == (2 + 0)) or (3106 <= 2293)) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[325 - (140 + 183)]] = v77[v79[3]][v79[4]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[566 - (297 + 267)]] = v62[v79[2 + 1]];
										v71 = v71 + (343 - (37 + 305));
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[1269 - (323 + 943)]][v79[4]];
										v645 = 2 + 1;
									end
									if ((13 - 3) == v645) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v650 = v79[1537 - (394 + 1141)];
										v648, v649 = v70(v77[v650](v13(v77, v650 + 1 + 0, v79[1 + 2])));
										v72 = (v649 + v650) - (1 + 0);
										v647 = 0 - 0;
										for v1875 = v650, v72 do
											v647 = v647 + (1 - 0);
											v77[v1875] = v648[v647];
										end
										v71 = v71 + 1;
										v79 = v67[v71];
										v645 = 11 + 0;
									end
									if (v645 == 6) then
										v77[v650 + 1 + 0] = v646;
										v77[v650] = v646[v79[4]];
										v71 = v71 + (530 - (87 + 442));
										v79 = v67[v71];
										v77[v79[807 - (13 + 792)]] = v61[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2 + 0]] = v79[2 + 1];
										v71 = v71 + 1 + 0;
										v645 = 1872 - (1231 + 634);
									end
									if (v645 == (1775 - (1362 + 404))) then
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v77[v79[2 + 0]] = v79[8 - 5];
										v71 = v71 + (1017 - (660 + 356));
										v79 = v67[v71];
										v77[v79[2]] = v79[4 - 1];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2 + 0]] = v79[1953 - (1111 + 839)];
										v645 = 961 - (496 + 455);
									end
									if ((706 - (66 + 632)) == v645) then
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[1139 - (441 + 695)]][v79[10 - 6]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v62[v79[5 - 2]];
										v71 = v71 + (4 - 3);
										v79 = v67[v71];
										v77[v79[2 + 0]] = v77[v79[1841 - (286 + 1552)]][v79[4]];
										v645 = 1286 - (1016 + 261);
									end
									if ((1324 - (708 + 612)) == v645) then
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v650 = v79[2];
										v648, v649 = v70(v77[v650](v13(v77, v650 + 1 + 0, v79[3])));
										v72 = (v649 + v650) - (380 - (113 + 266));
										v647 = 1170 - (979 + 191);
										for v1878 = v650, v72 do
											v647 = v647 + 1;
											v77[v1878] = v648[v647];
										end
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v645 = 1740 - (339 + 1396);
									end
								end
							else
								local v651;
								v77[v79[2]] = v77[v79[1 + 2]][v79[4 + 0]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[3 - 1]] = v77[v79[3 + 0]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v651 = v79[349 - (187 + 160)];
								v77[v651] = v77[v651](v77[v651 + (2 - 1)]);
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v61[v79[9 - 6]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								if (v77[v79[6 - 4]] <= v77[v79[1 + 3]]) then
									v71 = v71 + 1 + 0;
								else
									v71 = v79[5 - 2];
								end
							end
						elseif (v80 <= 133) then
							local v660;
							local v661;
							v77[v79[330 - (56 + 272)]] = v77[v79[3]][v79[3 + 1]];
							v71 = v71 + 1;
							v79 = v67[v71];
							v661 = v79[2 + 0];
							v660 = v77[v79[6 - 3]];
							v77[v661 + 1] = v660;
							v77[v661] = v660[v79[3 + 1]];
							v71 = v71 + (641 - (455 + 185));
							v79 = v67[v71];
							v661 = v79[790 - (757 + 31)];
							v77[v661](v77[v661 + 1]);
							v71 = v71 + (2000 - (762 + 1237));
							v79 = v67[v71];
							v77[v79[2]] = v62[v79[5 - 2]];
							v71 = v71 + (270 - (265 + 4));
							v79 = v67[v71];
							v661 = v79[2];
							v77[v661] = v77[v661]();
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v77[v79[2]] = v61[v79[3]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[2]] = v77[v79[3]][v79[6 - 2]];
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v77[v79[1 + 1]] = v77[v79[8 - 5]] - v77[v79[8 - 4]];
							v71 = v71 + (1 - 0);
							v79 = v67[v71];
							if (v79[1736 - (1691 + 43)] <= v77[v79[4 + 0]]) then
								v71 = v71 + 1;
							else
								v71 = v79[9 - 6];
							end
						elseif (v80 > (33 + 101)) then
							local v1110 = 0 - 0;
							local v1111;
							local v1112;
							local v1113;
							local v1114;
							local v1115;
							while true do
								if ((v1110 == (191 - (127 + 49))) or (1345 < 838)) then
									v71 = v71 + (1681 - (281 + 1399));
									v79 = v67[v71];
									v77[v79[1661 - (184 + 1475)]] = v79[3];
									v71 = v71 + 1;
									v79 = v67[v71];
									v1115 = v79[2];
									v1112, v1113 = v70(v77[v1115](v13(v77, v1115 + 1, v79[3 - 0])));
									v72 = (v1113 + v1115) - (2 - 1);
									v1111 = 0 - 0;
									for v2810 = v1115, v72 do
										local v2811 = 0 + 0;
										while true do
											if (v2811 == (0 + 0)) then
												v1111 = v1111 + (1292 - (260 + 1031));
												v77[v2810] = v1112[v1111];
												break;
											end
										end
									end
									v1110 = 1193 - (313 + 864);
								end
								if (v1110 == 32) then
									v77[v79[2]][v79[3]] = v79[4];
									break;
								end
								if (v1110 == 22) then
									v1115 = v79[694 - (655 + 37)];
									v77[v1115] = v77[v1115](v13(v77, v1115 + 1, v72));
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[2 - 0]] = v62[v79[6 - 3]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[2 + 0]] = v62[v79[4 - 1]];
									v71 = v71 + (771 - (383 + 387));
									v79 = v67[v71];
									v1110 = 23;
								end
								if ((12 < 783) and (v1110 == 10)) then
									v1111 = 0 + 0;
									for v2812 = v1115, v72 do
										local v2813 = 0 + 0;
										while true do
											if (v2813 == 0) then
												v1111 = v1111 + (3 - 2);
												v77[v2812] = v1112[v1111];
												break;
											end
										end
									end
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1115 = v79[2];
									v77[v1115] = v77[v1115](v13(v77, v1115 + 1 + 0, v72));
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[2]] = v62[v79[513 - (304 + 206)]];
									v71 = v71 + (226 - (182 + 43));
									v1110 = 786 - (264 + 511);
								end
								if ((v1110 == (1 + 0)) or (2281 > 4346)) then
									v77[v1115 + (2 - 1)] = v1114;
									v77[v1115] = v1114[v79[985 - (128 + 853)]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[2]] = v77[v79[3]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v1115 = v79[1704 - (1635 + 67)];
									v77[v1115](v13(v77, v1115 + 1 + 0, v79[2 + 1]));
									v71 = v71 + (198 - (131 + 66));
									v1110 = 6 - 4;
								end
								if (v1110 == 26) then
									v77[v1115] = v77[v1115](v13(v77, v1115 + (4 - 3), v72));
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1115 = v79[2];
									v77[v1115] = v77[v1115]();
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[2 + 0]] = v77[v79[4 - 1]][v79[4]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v1110 = 45 - 18;
								end
								if ((v1110 == 19) or (2429 <= 762)) then
									v79 = v67[v71];
									v1115 = v79[1607 - (306 + 1299)];
									v77[v1115] = v77[v1115](v13(v77, v1115 + 1 + 0, v72));
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[791 - (671 + 118)]] = v62[v79[11 - 8]];
									v71 = v71 + (77 - (73 + 3));
									v79 = v67[v71];
									v1115 = v79[5 - 3];
									v1114 = v77[v79[14 - 11]];
									v1110 = 46 - 26;
								end
								if (v1110 == (1780 - (1668 + 87))) then
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1115 = v79[1901 - (296 + 1603)];
									v1112, v1113 = v70(v77[v1115](v13(v77, v1115 + 1, v72)));
									v72 = (v1113 + v1115) - (107 - (79 + 27));
									v1111 = 0 + 0;
									for v2814 = v1115, v72 do
										local v2815 = 1007 - (700 + 307);
										while true do
											if (v2815 == (0 + 0)) then
												v1111 = v1111 + (1800 - (1477 + 322));
												v77[v2814] = v1112[v1111];
												break;
											end
										end
									end
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1115 = v79[4 - 2];
									v1110 = 26 + 0;
								end
								if (v1110 == (58 - 40)) then
									v79 = v67[v71];
									v77[v79[2 + 0]] = v79[12 - 9];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v1115 = v79[1 + 1];
									v1112, v1113 = v70(v77[v1115](v13(v77, v1115 + (2 - 1), v79[4 - 1])));
									v72 = (v1113 + v1115) - 1;
									v1111 = 0;
									for v2816 = v1115, v72 do
										local v2817 = 0;
										while true do
											if (v2817 == (0 - 0)) then
												v1111 = v1111 + (1787 - (20 + 1766));
												v77[v2816] = v1112[v1111];
												break;
											end
										end
									end
									v71 = v71 + (1 - 0);
									v1110 = 828 - (88 + 721);
								end
								if ((v1110 == (20 + 0)) or (2508 > 3169)) then
									v77[v1115 + 1 + 0] = v1114;
									v77[v1115] = v1114[v79[2 + 2]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[4 - 2]] = v77[v79[5 - 2]];
									v71 = v71 + (438 - (93 + 344));
									v79 = v67[v71];
									v77[v79[1215 - (960 + 253)]] = v79[3];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1110 = 62 - 41;
								end
								if (v1110 == (8 - 5)) then
									v77[v79[1418 - (74 + 1342)]] = v77[v79[3]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[476 - (33 + 441)]] = v79[8 - 5];
									v71 = v71 + (1420 - (64 + 1355));
									v79 = v67[v71];
									v77[v79[2 - 0]] = v79[14 - (5 + 6)];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1115 = v79[1 + 1];
									v1110 = 4;
								end
								if ((475 - (369 + 77)) == v1110) then
									v77[v79[2]][v79[1 + 2]] = v79[4];
									v71 = v71 + (739 - (438 + 300));
									v79 = v67[v71];
									v77[v79[296 - (50 + 244)]] = v62[v79[3]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v1115 = v79[1203 - (95 + 1106)];
									v77[v1115] = v77[v1115]();
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v1110 = 148 - 118;
								end
								if (9 == v1110) then
									v79 = v67[v71];
									v77[v79[1898 - (1741 + 155)]] = v79[3];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[2 - 0]] = v79[5 - 2];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1115 = v79[1 + 1];
									v1112, v1113 = v70(v77[v1115](v13(v77, v1115 + 1 + 0, v79[7 - 4])));
									v72 = (v1113 + v1115) - (2 - 1);
									v1110 = 1787 - (1263 + 514);
								end
								if (v1110 == 12) then
									v77[v79[499 - (73 + 424)]] = v79[7 - 4];
									v71 = v71 + (309 - (93 + 215));
									v79 = v67[v71];
									v77[v79[6 - 4]] = v79[3];
									v71 = v71 + (1936 - (1756 + 179));
									v79 = v67[v71];
									v1115 = v79[2];
									v1112, v1113 = v70(v77[v1115](v13(v77, v1115 + 1, v79[1682 - (550 + 1129)])));
									v72 = (v1113 + v1115) - (108 - (57 + 50));
									v1111 = 629 - (30 + 599);
									v1110 = 4 + 9;
								end
								if (v1110 == 2) then
									v79 = v67[v71];
									v77[v79[2 - 0]] = v62[v79[921 - (794 + 124)]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1115 = v79[1 + 1];
									v1114 = v77[v79[5 - 2]];
									v77[v1115 + (1928 - (1299 + 628))] = v1114;
									v77[v1115] = v1114[v79[8 - 4]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v1110 = 3;
								end
								if ((v1110 == (74 - 47)) or (4359 == 4783)) then
									v77[v79[2 + 0]] = v77[v79[8 - 5]][v79[1449 - (335 + 1110)]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[6 - 4]] = v62[v79[4 - 1]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v1115 = v79[334 - (268 + 64)];
									v77[v1115] = v77[v1115]();
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1110 = 1306 - (243 + 1035);
								end
								if (((31 - 18) == v1110) or (1302 >= 2955)) then
									for v2818 = v1115, v72 do
										local v2819 = 0 - 0;
										while true do
											if (v2819 == (0 - 0)) then
												v1111 = v1111 + 1 + 0;
												v77[v2818] = v1112[v1111];
												break;
											end
										end
									end
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1115 = v79[2 - 0];
									v77[v1115] = v77[v1115](v13(v77, v1115 + (101 - (90 + 10)), v72));
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[806 - (209 + 595)]] = v62[v79[3]];
									v71 = v71 + (806 - (603 + 202));
									v79 = v67[v71];
									v1110 = 9 + 5;
								end
								if (v1110 == (22 - 15)) then
									v72 = (v1113 + v1115) - (1 + 0);
									v1111 = 0 - 0;
									for v2820 = v1115, v72 do
										v1111 = v1111 + 1 + 0;
										v77[v2820] = v1112[v1111];
									end
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v1115 = v79[8 - 6];
									v77[v1115] = v77[v1115](v13(v77, v1115 + (280 - (174 + 105)), v72));
									v71 = v71 + (3 - 2);
									v79 = v67[v71];
									v77[v79[2]] = v62[v79[3]];
									v1110 = 8;
								end
								if (v1110 == (927 - (532 + 381))) then
									v1115 = v79[2];
									v1114 = v77[v79[3 + 0]];
									v77[v1115 + (840 - (137 + 702))] = v1114;
									v77[v1115] = v1114[v79[10 - 6]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[7 - 5]] = v77[v79[1889 - (1819 + 67)]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[1 + 1]] = v79[3];
									v1110 = 1372 - (259 + 1098);
								end
								if (v1110 == (4 + 1)) then
									v77[v79[2]] = v62[v79[1 + 2]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1115 = v79[2];
									v1114 = v77[v79[9 - 6]];
									v77[v1115 + 1 + 0] = v1114;
									v77[v1115] = v1114[v79[4 + 0]];
									v71 = v71 + (4 - 3);
									v79 = v67[v71];
									v77[v79[1708 - (667 + 1039)]] = v77[v79[1022 - (274 + 745)]];
									v1110 = 5 + 1;
								end
								if (v1110 == (5 + 6)) then
									v79 = v67[v71];
									v1115 = v79[432 - (288 + 142)];
									v1114 = v77[v79[1309 - (301 + 1005)]];
									v77[v1115 + 1 + 0] = v1114;
									v77[v1115] = v1114[v79[4]];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[1875 - (674 + 1199)]] = v77[v79[3 + 0]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1110 = 34 - 22;
								end
								if (v1110 == (25 - 19)) then
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[447 - (92 + 353)]] = v79[3 + 0];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[3 - 1]] = v79[8 - 5];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1115 = v79[3 - 1];
									v1112, v1113 = v70(v77[v1115](v13(v77, v1115 + (1 - 0), v79[3])));
									v1110 = 30 - 23;
								end
								if ((v1110 == 21) or (3094 == 3369)) then
									v77[v79[2 + 0]] = v79[5 - 2];
									v71 = v71 + (266 - (34 + 231));
									v79 = v67[v71];
									v1115 = v79[1319 - (930 + 387)];
									v1112, v1113 = v70(v77[v1115](v13(v77, v1115 + 1 + 0, v79[3])));
									v72 = (v1113 + v1115) - (1 + 0);
									v1111 = 0 - 0;
									for v2823 = v1115, v72 do
										local v2824 = 697 - (389 + 308);
										while true do
											if (v2824 == (0 - 0)) then
												v1111 = v1111 + (2 - 1);
												v77[v2823] = v1112[v1111];
												break;
											end
										end
									end
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v1110 = 9 + 13;
								end
								if ((1200 >= 842) and (v1110 == (339 - (125 + 197)))) then
									v1114 = v77[v79[1000 - (339 + 658)]];
									v77[v1115 + 1] = v1114;
									v77[v1115] = v1114[v79[9 - 5]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[3 - 1]] = v77[v79[1351 - (743 + 605)]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[2]] = v79[3];
									v71 = v71 + 1 + 0;
									v1110 = 2 + 16;
								end
								if (v1110 == 30) then
									v77[v79[7 - 5]][v79[8 - 5]] = v79[3 + 1];
									v71 = v71 + (250 - (197 + 52));
									v79 = v67[v71];
									v77[v79[3 - 1]] = v62[v79[3]];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v1115 = v79[2 + 0];
									v77[v1115] = v77[v1115]();
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1110 = 31;
								end
								if (v1110 == 23) then
									v1115 = v79[3 - 1];
									v1114 = v77[v79[10 - 7]];
									v77[v1115 + (2 - 1)] = v1114;
									v77[v1115] = v1114[v79[2 + 2]];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v77[v79[1099 - (97 + 1000)]] = v77[v79[10 - 7]];
									v71 = v71 + (1846 - (143 + 1702));
									v79 = v67[v71];
									v77[v79[3 - 1]] = v79[372 - (40 + 329)];
									v1110 = 24;
								end
								if ((4917 >= 1468) and (v1110 == 0)) then
									v1111 = nil;
									v1112, v1113 = nil;
									v1114 = nil;
									v1115 = nil;
									v1115 = v79[2 + 0];
									v77[v1115] = v77[v1115](v13(v77, v1115 + 1 + 0, v79[3 - 0]));
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1115 = v79[67 - (9 + 56)];
									v1114 = v77[v79[587 - (531 + 53)]];
									v1110 = 1 + 0;
								end
								if (v1110 == (777 - (89 + 684))) then
									v1112, v1113 = v70(v77[v1115](v13(v77, v1115 + 1 + 0, v79[1 + 2])));
									v72 = (v1113 + v1115) - 1;
									v1111 = 0;
									for v2825 = v1115, v72 do
										local v2826 = 0;
										while true do
											if (v2826 == (0 + 0)) then
												v1111 = v1111 + (1 - 0);
												v77[v2825] = v1112[v1111];
												break;
											end
										end
									end
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1115 = v79[2 + 0];
									v77[v1115] = v77[v1115](v13(v77, v1115 + (614 - (238 + 375)), v72));
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1110 = 7 - 2;
								end
								if (v1110 == (23 + 1)) then
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[5 - 3]] = v79[8 - 5];
									v71 = v71 + 1;
									v79 = v67[v71];
									v1115 = v79[3 - 1];
									v1112, v1113 = v70(v77[v1115](v13(v77, v1115 + 1, v79[3])));
									v72 = (v1113 + v1115) - (3 - 2);
									v1111 = 0 - 0;
									for v2827 = v1115, v72 do
										v1111 = v1111 + 1 + 0;
										v77[v2827] = v1112[v1111];
									end
									v1110 = 3 + 22;
								end
								if (v1110 == (4 + 4)) then
									v71 = v71 + (463 - (428 + 34));
									v79 = v67[v71];
									v1115 = v79[1 + 1];
									v1114 = v77[v79[4 - 1]];
									v77[v1115 + (2 - 1)] = v1114;
									v77[v1115] = v1114[v79[9 - 5]];
									v71 = v71 + (919 - (223 + 695));
									v79 = v67[v71];
									v77[v79[6 - 4]] = v77[v79[514 - (329 + 182)]];
									v71 = v71 + 1 + 0;
									v1110 = 14 - 5;
								end
								if (v1110 == 16) then
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1115 = v79[2];
									v77[v1115] = v77[v1115](v13(v77, v1115 + 1 + 0, v72));
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[2]] = v62[v79[6 - 3]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v1115 = v79[2];
									v1110 = 22 - 5;
								end
								if ((v1110 == (1228 - (177 + 1023))) or (2794 <= 878)) then
									v77[v79[2]][v79[5 - 2]] = v79[2 + 2];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[2]] = v62[v79[1468 - (120 + 1345)]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v1115 = v79[339 - (8 + 329)];
									v77[v1115] = v77[v1115]();
									v71 = v71 + (126 - (19 + 106));
									v79 = v67[v71];
									v1110 = 103 - 74;
								end
								if (v1110 == (43 - 12)) then
									v77[v79[2 + 0]][v79[8 - 5]] = v79[10 - 6];
									v71 = v71 + (3 - 2);
									v79 = v67[v71];
									v77[v79[3 - 1]] = v62[v79[3]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v1115 = v79[1 + 1];
									v77[v1115] = v77[v1115]();
									v71 = v71 + 1;
									v79 = v67[v71];
									v1110 = 1535 - (957 + 546);
								end
							end
						else
							local v1116 = 0 - 0;
							while true do
								if ((2398 <= 3265) and (v1116 == (1 + 1))) then
									v77[v79[1 + 1]] = v77[v79[3]][v79[2 + 2]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1116 = 706 - (227 + 476);
								end
								if (v1116 == 5) then
									do
										return;
									end
									break;
								end
								if (v1116 == (0 - 0)) then
									v77[v79[3 - 1]] = v61[v79[3]];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v1116 = 1 - 0;
								end
								if (v1116 == 4) then
									v77[v79[2 - 0]][v79[957 - (166 + 788)]] = v77[v79[990 - (21 + 965)]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v1116 = 701 - (127 + 569);
								end
								if ((1 + 0) == v1116) then
									v77[v79[1 + 1]] = v61[v79[2 + 1]];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v1116 = 2 + 0;
								end
								if (v1116 == (7 - 4)) then
									v77[v79[2]] = v77[v79[2 + 1]] - v79[1 + 3];
									v71 = v71 + 1;
									v79 = v67[v71];
									v1116 = 1296 - (1162 + 130);
								end
							end
						end
					elseif ((901 == 901) and (v80 <= 140)) then
						if (v80 <= (291 - 154)) then
							if (v80 > (96 + 40)) then
								if not v77[v79[2]] then
									v71 = v71 + (2 - 1);
								else
									v71 = v79[939 - (889 + 47)];
								end
							else
								local v677 = v79[2 + 0];
								local v678 = v77[v677];
								local v679 = v77[v677 + (1266 - (1153 + 111))];
								if (v679 > (0 - 0)) then
									if (v678 > v77[v677 + 1 + 0]) then
										v71 = v79[2 + 1];
									else
										v77[v677 + 1 + 2] = v678;
									end
								elseif (v678 < v77[v677 + 1 + 0]) then
									v71 = v79[3];
								else
									v77[v677 + 1 + 2] = v678;
								end
							end
						elseif (v80 <= (259 - 121)) then
							do
								return;
							end
						elseif (v80 == (97 + 42)) then
							if (v77[v79[98 - (23 + 73)]] == v79[4]) then
								v71 = v71 + 1;
							else
								v71 = v79[288 - (26 + 259)];
							end
						else
							local v1118 = v79[1 + 1];
							local v1119 = v77[v1118];
							local v1120 = v79[4 - 1];
							for v1701 = 3 - 2, v1120 do
								v1119[v1701] = v77[v1118 + v1701];
							end
						end
					elseif ((2030 > 228) and (v80 <= (1772 - (1094 + 535)))) then
						if (v80 <= (17 + 124)) then
							local v680;
							local v681, v682;
							local v683;
							v77[v79[2]] = v77[v79[1879 - (1554 + 322)]];
							v71 = v71 + (1426 - (989 + 436));
							v79 = v67[v71];
							v77[v79[1180 - (816 + 362)]] = v79[5 - 2];
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v77[v79[7 - 5]] = v79[4 - 1];
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v683 = v79[2];
							v681, v682 = v70(v77[v683](v13(v77, v683 + (4 - 3), v79[1 + 2])));
							v72 = (v682 + v683) - (764 - (86 + 677));
							v680 = 0 + 0;
							for v759 = v683, v72 do
								local v760 = 0 + 0;
								while true do
									if (v760 == (1026 - (263 + 763))) then
										v680 = v680 + 1 + 0;
										v77[v759] = v681[v680];
										break;
									end
								end
							end
							v71 = v71 + (859 - (649 + 209));
							v79 = v67[v71];
							v683 = v79[2];
							v77[v683](v13(v77, v683 + 1, v72));
						elseif ((581 <= 4572) and (v80 == 142)) then
							local v1121 = 0 - 0;
							local v1122;
							while true do
								if ((156 < 4237) and (v1121 == (735 - (643 + 88)))) then
									v79 = v67[v71];
									v77[v79[1771 - (54 + 1715)]][v79[3]] = v77[v79[15 - 11]];
									v71 = v71 + (2 - 1);
									v1121 = 9 - 4;
								end
								if ((v1121 == (8 + 1)) or (251 > 425)) then
									v71 = v71 + 1;
									v79 = v67[v71];
									v71 = v79[1 + 2];
									break;
								end
								if (v1121 == (26 - 19)) then
									v79 = v67[v71];
									v1122 = v79[1385 - (132 + 1251)];
									v77[v1122] = v77[v1122]();
									v1121 = 8 + 0;
								end
								if ((2 - 1) == v1121) then
									v79 = v67[v71];
									v77[v79[2 + 0]] = v77[v79[461 - (185 + 273)]][v79[1 + 3]];
									v71 = v71 + (2 - 1);
									v1121 = 1 + 1;
								end
								if ((v1121 == (1230 - (361 + 863))) or (3584 < 972)) then
									v79 = v67[v71];
									v77[v79[2]] = v62[v79[8 - 5]];
									v71 = v71 + (1328 - (443 + 884));
									v1121 = 7;
								end
								if ((1834 > 1047) and (v1121 == (19 - 11))) then
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[2]][v79[3]] = v77[v79[4]];
									v1121 = 12 - 3;
								end
								if (v1121 == (0 + 0)) then
									v1122 = nil;
									v77[v79[2]] = v61[v79[3 + 0]];
									v71 = v71 + (2 - 1);
									v1121 = 748 - (16 + 731);
								end
								if ((851 == 851) and ((3 + 2) == v1121)) then
									v79 = v67[v71];
									v77[v79[2 + 0]] = v61[v79[3 + 0]];
									v71 = v71 + (761 - (527 + 233));
									v1121 = 5 + 1;
								end
								if (v1121 == (4 - 2)) then
									v79 = v67[v71];
									v77[v79[2 + 0]] = v77[v79[1788 - (1107 + 678)]] + v79[4 + 0];
									v71 = v71 + 1 + 0;
									v1121 = 53 - (4 + 46);
								end
								if ((991 >= 218) and (v1121 == (11 - 8))) then
									v79 = v67[v71];
									v77[v79[3 - 1]] = v77[v79[3]] + v79[3 + 1];
									v71 = v71 + 1;
									v1121 = 8 - 4;
								end
							end
						else
							local v1123 = 0;
							while true do
								if (v1123 == (0 - 0)) then
									v77[v79[2]] = v77[v79[1399 - (1262 + 134)]] * v77[v79[9 - 5]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1123 = 1 + 0;
								end
								if (v1123 == 3) then
									do
										return v77[v79[2]];
									end
									v71 = v71 + (796 - (383 + 412));
									v79 = v67[v71];
									v1123 = 4 + 0;
								end
								if ((v1123 == (1 + 0)) or (3469 == 3587)) then
									v77[v79[1 + 1]] = v61[v79[3]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v1123 = 1 + 1;
								end
								if ((2 == v1123) or (2109 <= 746)) then
									v77[v79[2 + 0]] = v77[v79[3]] % v77[v79[5 - 1]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v1123 = 8 - 5;
								end
								if (v1123 == (4 - 0)) then
									v71 = v79[3];
									break;
								end
							end
						end
					elseif (v80 <= (396 - 252)) then
						v77[v79[1 + 1]] = v77[v79[3]] % v77[v79[711 - (667 + 40)]];
						v71 = v71 + (1311 - (436 + 874));
						v79 = v67[v71];
						v77[v79[1608 - (762 + 844)]] = v61[v79[4 - 1]];
						v71 = v71 + 1;
						v79 = v67[v71];
						v77[v79[4 - 2]] = v77[v79[1 + 2]] % v77[v79[1 + 3]];
						v71 = v71 + (477 - (209 + 267));
						v79 = v67[v71];
						v77[v79[3 - 1]] = v77[v79[3]];
						v71 = v71 + (2 - 1);
						v79 = v67[v71];
						v77[v79[1713 - (1611 + 100)]] = v79[3 + 0];
						v71 = v71 + (785 - (14 + 770));
						v79 = v67[v71];
						v71 = v79[3];
					elseif (v80 == (1929 - (1165 + 619))) then
						local v1124 = 0 - 0;
						local v1125;
						while true do
							if ((v1124 == (381 - (229 + 152))) or (1779 > 3583)) then
								v1125 = v79[2];
								v77[v1125] = v77[v1125](v77[v1125 + (195 - (107 + 87))]);
								break;
							end
						end
					else
						local v1126 = v79[2 - 0];
						local v1127, v1128 = v70(v77[v1126](v77[v1126 + 1 + 0]));
						v72 = (v1128 + v1126) - (1 + 0);
						local v1129 = 0;
						for v1704 = v1126, v72 do
							local v1705 = 0 - 0;
							while true do
								if ((0 - 0) == v1705) then
									v1129 = v1129 + 1 + 0;
									v77[v1704] = v1127[v1129];
									break;
								end
							end
						end
					end
				elseif (v80 <= (170 - (13 + 1))) then
					if (v80 <= (150 + 1)) then
						if (v80 <= 148) then
							if (v80 > 147) then
								local v702 = 0 + 0;
								local v703;
								local v704;
								local v705;
								local v706;
								while true do
									if ((1996 == 1996) and ((1058 - (987 + 71)) == v702)) then
										v703 = nil;
										v704, v705 = nil;
										v706 = nil;
										v702 = 2 - 1;
									end
									if (v702 == (2 - 0)) then
										v77[v79[701 - (514 + 185)]] = v79[1 + 2];
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v702 = 11 - 8;
									end
									if (v702 == 6) then
										v79 = v67[v71];
										v706 = v79[1506 - (771 + 733)];
										v77[v706] = v77[v706](v13(v77, v706 + 1, v72));
										v702 = 14 - 7;
									end
									if ((v702 == (1 - 0)) or (2958 >= 4530)) then
										v77[v79[1169 - (407 + 760)]] = v61[v79[2 + 1]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v702 = 2 + 0;
									end
									if (v702 == (1858 - (169 + 1685))) then
										v706 = v79[2];
										v704, v705 = v70(v77[v706](v13(v77, v706 + 1 + 0, v79[394 - (41 + 350)])));
										v72 = (v705 + v706) - (2 - 1);
										v702 = 13 - 8;
									end
									if (v702 == (29 - 22)) then
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										if v77[v79[2 + 0]] then
											v71 = v71 + (888 - (790 + 97));
										else
											v71 = v79[13 - 10];
										end
										break;
									end
									if (((1 + 2) == v702) or (176 > 2363)) then
										v77[v79[1 + 1]] = v79[248 - (235 + 10)];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v702 = 7 - 3;
									end
									if ((v702 == (1188 - (887 + 296))) or (2566 == 89)) then
										v703 = 1045 - (512 + 533);
										for v1888 = v706, v72 do
											local v1889 = 1424 - (662 + 762);
											while true do
												if ((1909 < 4187) and (v1889 == 0)) then
													v703 = v703 + (678 - (334 + 343));
													v77[v1888] = v704[v703];
													break;
												end
											end
										end
										v71 = v71 + (3 - 2);
										v702 = 495 - (198 + 291);
									end
								end
							else
								local v707 = 0 + 0;
								local v708;
								local v709;
								local v710;
								local v711;
								while true do
									if (v707 == (579 - (141 + 433))) then
										v708 = 0 - 0;
										for v1890 = v711, v72 do
											local v1891 = 0;
											while true do
												if (v1891 == (0 + 0)) then
													v708 = v708 + 1;
													v77[v1890] = v709[v708];
													break;
												end
											end
										end
										v71 = v71 + (778 - (227 + 550));
										v707 = 14 - 8;
									end
									if (v707 == (19 - 12)) then
										v71 = v71 + (104 - (72 + 31));
										v79 = v67[v71];
										if v77[v79[350 - (89 + 259)]] then
											v71 = v71 + 1 + 0;
										else
											v71 = v79[3 + 0];
										end
										break;
									end
									if (v707 == (1 + 1)) then
										v77[v79[3 - 1]] = v79[2 + 1];
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v707 = 1406 - (1333 + 70);
									end
									if (v707 == (1836 - (701 + 1131))) then
										v711 = v79[129 - (55 + 72)];
										v709, v710 = v70(v77[v711](v13(v77, v711 + (157 - (99 + 57)), v79[4 - 1])));
										v72 = (v710 + v711) - 1;
										v707 = 3 + 2;
									end
									if (v707 == (1580 - (1243 + 336))) then
										v77[v79[1331 - (774 + 555)]] = v61[v79[2 + 1]];
										v71 = v71 + (800 - (150 + 649));
										v79 = v67[v71];
										v707 = 2 + 0;
									end
									if (v707 == (8 - 2)) then
										v79 = v67[v71];
										v711 = v79[3 - 1];
										v77[v711] = v77[v711](v13(v77, v711 + 1, v72));
										v707 = 1991 - (1122 + 862);
									end
									if (v707 == (0 - 0)) then
										v708 = nil;
										v709, v710 = nil;
										v711 = nil;
										v707 = 1;
									end
									if (v707 == (1 + 2)) then
										v77[v79[3 - 1]] = v79[2 + 1];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v707 = 4;
									end
								end
							end
						elseif ((263 <= 4617) and (v80 <= (892 - (549 + 194)))) then
							local v712 = 0 + 0;
							local v713;
							while true do
								if (v712 == (23 - 17)) then
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[2 - 0]] = v79[3 + 0];
									break;
								end
								if (v712 == (10 - 7)) then
									v71 = v71 + (1704 - (453 + 1250));
									v79 = v67[v71];
									v77[v79[5 - 3]] = v61[v79[3 + 0]];
									v71 = v71 + (576 - (203 + 372));
									v712 = 4;
								end
								if (v712 == 4) then
									v79 = v67[v71];
									v77[v79[1 + 1]] = v77[v79[8 - 5]][v79[1386 - (978 + 404)]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v712 = 16 - 11;
								end
								if (v712 == (0 + 0)) then
									v713 = nil;
									v77[v79[320 - (56 + 262)]] = v62[v79[2 + 1]];
									v71 = v71 + (115 - (108 + 6));
									v79 = v67[v71];
									v712 = 1;
								end
								if (v712 == (3 + 2)) then
									v77[v79[2]] = v77[v79[3 + 0]] + v79[1956 - (653 + 1299)];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[2 + 0]][v79[2 + 1]] = v77[v79[9 - 5]];
									v712 = 6;
								end
								if ((749 <= 4546) and (v712 == 1)) then
									v713 = v79[1924 - (1042 + 880)];
									v77[v713] = v77[v713]();
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v712 = 1004 - (16 + 986);
								end
								if (v712 == (1220 - (700 + 518))) then
									v77[v79[6 - 4]][v79[3 - 0]] = v77[v79[1515 - (617 + 894)]];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v77[v79[460 - (271 + 187)]] = v61[v79[3]];
									v712 = 1587 - (731 + 853);
								end
							end
						elseif (v80 > (521 - 371)) then
							local v1130;
							local v1131, v1132;
							local v1133;
							local v1134;
							v1134 = v79[1523 - (199 + 1322)];
							v1133 = v77[v79[5 - 2]];
							v77[v1134 + 1 + 0] = v1133;
							v77[v1134] = v1133[v79[4]];
							v71 = v71 + (1661 - (1291 + 369));
							v79 = v67[v71];
							v77[v79[1 + 1]] = v61[v79[2 + 1]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[1 + 1]] = v79[3];
							v71 = v71 + 1;
							v79 = v67[v71];
							v77[v79[2]] = v79[688 - (561 + 124)];
							v71 = v71 + 1;
							v79 = v67[v71];
							v1134 = v79[2];
							v1131, v1132 = v70(v77[v1134](v13(v77, v1134 + 1 + 0, v79[856 - (25 + 828)])));
							v72 = (v1132 + v1134) - (2 - 1);
							v1130 = 0 - 0;
							for v1758 = v1134, v72 do
								local v1759 = 590 - (99 + 491);
								while true do
									if ((v1759 == (48 - (18 + 30))) or (4675 < 4430)) then
										v1130 = v1130 + (2 - 1);
										v77[v1758] = v1131[v1130];
										break;
									end
								end
							end
							v71 = v71 + (1 - 0);
							v79 = v67[v71];
							v1134 = v79[2 - 0];
							v77[v1134] = v77[v1134](v13(v77, v1134 + 1, v72));
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[6 - 4]] = v77[v79[735 - (501 + 231)]][v79[4]];
							v71 = v71 + 1;
							v79 = v67[v71];
							if ((1355 <= 1609) and v77[v79[2]]) then
								v71 = v71 + 1 + 0;
							else
								v71 = v79[1701 - (470 + 1228)];
							end
						else
							v77[v79[2 + 0]] = v77[v79[2 + 1]][v79[690 - (537 + 149)]];
						end
					elseif ((4521 == 4521) and (v80 <= (185 - 32))) then
						if ((v80 > (83 + 69)) or (2673 > 4542)) then
							v77[v79[3 - 1]][v77[v79[3]]] = v77[v79[12 - 8]];
						else
							local v716 = 0 - 0;
							local v717;
							while true do
								if (v716 == (0 + 0)) then
									v717 = v79[1 + 1];
									do
										return v77[v717](v13(v77, v717 + 1 + 0, v79[2 + 1]));
									end
									break;
								end
							end
						end
					elseif (v80 <= (113 + 41)) then
						local v718;
						v77[v79[2]] = v77[v79[1 + 2]][v79[3 + 1]];
						v71 = v71 + (1 - 0);
						v79 = v67[v71];
						v77[v79[1 + 1]] = -v77[v79[582 - (134 + 445)]];
						v71 = v71 + 1;
						v79 = v67[v71];
						v77[v79[3 - 1]] = v79[3] ^ v77[v79[4 + 0]];
						v71 = v71 + 1;
						v79 = v67[v71];
						v77[v79[2]] = v77[v79[2 + 1]] * v77[v79[15 - 11]];
						v71 = v71 + (261 - (36 + 224));
						v79 = v67[v71];
						v718 = v79[1862 - (1033 + 827)];
						v77[v718] = v77[v718](v77[v718 + (1847 - (1002 + 844))]);
						v71 = v71 + 1;
						v79 = v67[v71];
						v77[v79[1352 - (1126 + 224)]] = v77[v79[3]] + v77[v79[1 + 3]];
						v71 = v71 + 1 + 0;
						v79 = v67[v71];
						do
							return v77[v79[6 - 4]];
						end
						v71 = v71 + (65 - (48 + 16));
						v79 = v67[v71];
						v71 = v79[3 + 0];
					elseif (v80 == (743 - 588)) then
						local v1152 = 0 - 0;
						local v1153;
						local v1154;
						while true do
							if ((4870 >= 1986) and (v1152 == (1 + 0))) then
								for v2834 = v1153 + (1090 - (910 + 179)), v79[5 - 2] do
									v7(v1154, v77[v2834]);
								end
								break;
							end
							if (v1152 == (0 - 0)) then
								v1153 = v79[1381 - (933 + 446)];
								v1154 = v77[v1153];
								v1152 = 1 + 0;
							end
						end
					elseif (v79[1526 - (248 + 1276)] < v77[v79[4 + 0]]) then
						v71 = v71 + 1 + 0;
					else
						v71 = v79[9 - 6];
					end
				elseif ((3250 == 3250) and (v80 <= 161)) then
					if ((2209 <= 3965) and (v80 <= (534 - 376))) then
						if ((4874 > 2890) and (v80 == (1702 - (151 + 1394)))) then
							local v728 = 944 - (929 + 15);
							local v729;
							local v730;
							local v731;
							local v732;
							while true do
								if (v728 == (1996 - (1173 + 823))) then
									v729 = nil;
									v730, v731 = nil;
									v732 = nil;
									v728 = 1 - 0;
								end
								if (v728 == 2) then
									v77[v79[1778 - (482 + 1294)]] = v79[5 - 2];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v728 = 3;
								end
								if ((v728 == (1310 - (1125 + 181))) or (1525 >= 4520)) then
									v732 = v79[5 - 3];
									v730, v731 = v70(v77[v732](v13(v77, v732 + 1, v79[3])));
									v72 = (v731 + v732) - (1 + 0);
									v728 = 8 - 3;
								end
								if (v728 == (1196 - (626 + 563))) then
									v71 = v71 + (1251 - (153 + 1097));
									v79 = v67[v71];
									if (v77[v79[6 - 4]] or (838 < 774)) then
										v71 = v71 + 1 + 0;
									else
										v71 = v79[7 - 4];
									end
									break;
								end
								if (v728 == (1 + 0)) then
									v77[v79[2 + 0]] = v77[v79[1 + 2]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v728 = 2 + 0;
								end
								if (v728 == (1163 - (199 + 958))) then
									v79 = v67[v71];
									v732 = v79[2];
									v77[v732] = v77[v732](v13(v77, v732 + 1, v72));
									v728 = 5 + 2;
								end
								if (v728 == (7 - 4)) then
									v77[v79[4 - 2]] = v79[1179 - (1169 + 7)];
									v71 = v71 + (1874 - (751 + 1122));
									v79 = v67[v71];
									v728 = 4;
								end
								if (v728 == (1 + 4)) then
									v729 = 0 + 0;
									for v1894 = v732, v72 do
										local v1895 = 0 + 0;
										while true do
											if (0 == v1895) then
												v729 = v729 + 1;
												v77[v1894] = v730[v729];
												break;
											end
										end
									end
									v71 = v71 + 1;
									v728 = 2 + 4;
								end
							end
						else
							v61[v79[4 - 1]] = v77[v79[1183 - (589 + 592)]];
						end
					elseif ((v80 <= (317 - 158)) or (4307 <= 3577)) then
						local v735 = 0 + 0;
						local v736;
						while true do
							if (v735 == (26 - (13 + 11))) then
								v79 = v67[v71];
								v77[v79[2 + 0]][v77[v79[1 + 2]]] = v79[1264 - (684 + 576)];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[4 - 2]] = v77[v79[3]];
								v735 = 2 + 1;
							end
							if ((4750 > 4087) and (v735 == (1 + 3))) then
								v77[v79[2 - 0]] = v79[3];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v736 = v79[2 + 0];
								v77[v736] = v77[v736](v13(v77, v736 + 1, v79[2 + 1]));
								v735 = 1 + 4;
							end
							if ((4674 > 395) and (v735 == (1 + 0))) then
								v71 = v71 + (1849 - (230 + 1618));
								v79 = v67[v71];
								v736 = v79[2 + 0];
								v77[v736] = v77[v736](v13(v77, v736 + 1 + 0, v79[3 + 0]));
								v71 = v71 + (204 - (131 + 72));
								v735 = 1 + 1;
							end
							if ((v735 == (209 - (144 + 60))) or (3676 <= 204)) then
								v71 = v71 + (4 - 3);
								v79 = v67[v71];
								v77[v79[2 - 0]][v77[v79[1 + 2]]] = v79[19 - 15];
								v71 = v71 + 1;
								v79 = v67[v71];
								v735 = 1 + 5;
							end
							if (v735 == (1925 - (523 + 1399))) then
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[406 - (72 + 332)]] = v79[3];
								v71 = v71 + (977 - (269 + 707));
								v79 = v67[v71];
								v735 = 7 - 3;
							end
							if (v735 == (0 - 0)) then
								v736 = nil;
								v77[v79[2]] = v79[133 - (123 + 7)];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2]] = v79[3];
								v735 = 1 + 0;
							end
							if (v735 == (27 - 21)) then
								v77[v79[4 - 2]] = v77[v79[3]];
								break;
							end
						end
					elseif (v80 > (1248 - (38 + 1050))) then
						local v1155 = 0;
						while true do
							if (v1155 == (2 + 1)) then
								v77[v79[1 + 1]] = v62[v79[3]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2]] = v77[v79[826 - (426 + 397)]][v79[1410 - (751 + 655)]];
								v1155 = 7 - 3;
							end
							if (v1155 == (0 + 0)) then
								v77[v79[1247 - (39 + 1206)]] = v61[v79[8 - 5]];
								v71 = v71 + (842 - (566 + 275));
								v79 = v67[v71];
								v77[v79[937 - (167 + 768)]] = v77[v79[3]][v79[2 + 2]];
								v1155 = 1 - 0;
							end
							if (1 == v1155) then
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2 + 0]] = v77[v79[3 - 0]] + v79[19 - (8 + 7)];
								v71 = v71 + (1684 - (1510 + 173));
								v1155 = 2 - 0;
							end
							if (v1155 == (1 + 1)) then
								v79 = v67[v71];
								v77[v79[255 - (30 + 223)]][v79[1259 - (300 + 956)]] = v77[v79[126 - (22 + 100)]];
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v1155 = 285 - (47 + 235);
							end
							if (v1155 == (13 - 9)) then
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2]] = v79[489 - (21 + 465)];
								break;
							end
						end
					else
						v77[v79[2 + 0]][v77[v79[3 + 0]]] = v79[2 + 2];
					end
				elseif (v80 <= (200 - 36)) then
					if (v80 <= (1379 - (553 + 664))) then
						local v737 = 0 + 0;
						local v738;
						while true do
							if (v737 == (80 - (73 + 5))) then
								v79 = v67[v71];
								v738 = v79[1717 - (1128 + 587)];
								v77[v738] = v77[v738]();
								v737 = 11 - 8;
							end
							if (v737 == (693 - (558 + 132))) then
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v77[v79[5 - 3]][v79[1 + 2]] = v77[v79[4]];
								v737 = 4 + 0;
							end
							if (v737 == (1 + 0)) then
								v79 = v67[v71];
								v77[v79[2 + 0]] = v62[v79[4 - 1]];
								v71 = v71 + 1 + 0;
								v737 = 2 + 0;
							end
							if ((v737 == (775 - (294 + 477))) or (3067 <= 2992)) then
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v71 = v79[6 - 3];
								break;
							end
							if ((0 - 0) == v737) then
								v738 = nil;
								v77[v79[1 + 1]]();
								v71 = v71 + 1 + 0;
								v737 = 2 - 1;
							end
						end
					elseif ((v80 == (1145 - (97 + 885))) or (2461 > 3170)) then
						v77[v79[1 + 1]] = v79[4 - 1] ^ v77[v79[4]];
					else
						v77[v79[367 - (271 + 94)]] = v77[v79[1606 - (777 + 826)]] - v77[v79[4]];
					end
				elseif (v80 <= (63 + 102)) then
					if ((v77[v79[1357 - (117 + 1238)]] < v79[1719 - (686 + 1029)]) or (1807 >= 4152)) then
						v71 = v71 + (1357 - (1074 + 282));
					else
						v71 = v79[3];
					end
				elseif (v80 == (1783 - (1359 + 258))) then
					local v1161;
					local v1162;
					v77[v79[4 - 2]] = v62[v79[1938 - (1730 + 205)]];
					v71 = v71 + (529 - (67 + 461));
					v79 = v67[v71];
					v77[v79[2]] = v77[v79[4 - 1]][v79[4]];
					v71 = v71 + 1;
					v79 = v67[v71];
					v77[v79[2 - 0]] = v79[6 - 3];
					v71 = v71 + 1 + 0;
					v79 = v67[v71];
					v77[v79[631 - (129 + 500)]] = v79[1714 - (1157 + 554)];
					v71 = v71 + (1 - 0);
					v79 = v67[v71];
					v77[v79[609 - (82 + 525)]] = v79[3];
					v71 = v71 + 1;
					v79 = v67[v71];
					v1162 = v79[2 + 0];
					v77[v1162] = v77[v1162](v13(v77, v1162 + (2 - 1), v79[1626 - (948 + 675)]));
					v71 = v71 + 1;
					v79 = v67[v71];
					v77[v79[1 + 1]][v79[3 + 0]] = v77[v79[4]];
					v71 = v71 + (2 - 1);
					v79 = v67[v71];
					v77[v79[855 - (406 + 447)]] = v61[v79[120 - (91 + 26)]];
					v71 = v71 + 1;
					v79 = v67[v71];
					v77[v79[6 - 4]] = v61[v79[3 + 0]];
					v71 = v71 + (987 - (968 + 18));
					v79 = v67[v71];
					v77[v79[2 + 0]][v79[3]] = v77[v79[4 + 0]];
					v71 = v71 + (1 - 0);
					v79 = v67[v71];
					v77[v79[269 - (172 + 95)]] = v61[v79[9 - 6]];
					v71 = v71 + (266 - (260 + 5));
					v79 = v67[v71];
					v77[v79[5 - 3]] = v77[v79[3]][v79[823 - (265 + 554)]];
					v71 = v71 + (1572 - (1440 + 131));
					v79 = v67[v71];
					v1162 = v79[2];
					v1161 = v77[v79[3]];
					v77[v1162 + (2 - 1)] = v1161;
					v77[v1162] = v1161[v79[1399 - (253 + 1142)]];
				else
					local v1192;
					v77[v79[2]] = v77[v79[3]] % v79[257 - (133 + 120)];
					v71 = v71 + (1 - 0);
					v79 = v67[v71];
					v77[v79[1958 - (809 + 1147)]] = v77[v79[500 - (178 + 319)]];
					v71 = v71 + (1 - 0);
					v79 = v67[v71];
					v77[v79[2 + 0]] = v62[v79[1273 - (1255 + 15)]];
					v71 = v71 + 1;
					v79 = v67[v71];
					v77[v79[1544 - (1221 + 321)]] = v77[v79[7 - 4]][v79[4 + 0]];
					v71 = v71 + (3 - 2);
					v79 = v67[v71];
					v77[v79[7 - 5]] = v77[v79[2 + 1]] / v79[4 + 0];
					v71 = v71 + (1 - 0);
					v79 = v67[v71];
					v1192 = v79[409 - (204 + 203)];
					v77[v1192] = v77[v1192](v77[v1192 + 1]);
					v71 = v71 + 1;
					v79 = v67[v71];
					v77[v79[2]] = v62[v79[81 - (48 + 30)]];
					v71 = v71 + 1 + 0;
					v79 = v67[v71];
					v77[v79[2]] = v77[v79[1967 - (1472 + 492)]][v79[10 - 6]];
					v71 = v71 + 1 + 0;
					v79 = v67[v71];
					v77[v79[613 - (258 + 353)]] = v77[v79[1997 - (1382 + 612)]] / v79[4 + 0];
					v71 = v71 + 1 + 0;
					v79 = v67[v71];
					v1192 = v79[1 + 1];
					v77[v1192] = v77[v1192](v77[v1192 + (2 - 1)]);
					v71 = v71 + 1 + 0;
					v79 = v67[v71];
					v77[v79[2]] = v77[v79[3]];
					v71 = v71 + 1;
					v79 = v67[v71];
					v77[v79[121 - (35 + 84)]] = v77[v79[218 - (75 + 140)]];
					v71 = v71 + (3 - 2);
					v79 = v67[v71];
					v77[v79[1801 - (923 + 876)]] = v79[3];
				end
				v71 = v71 + 1;
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);